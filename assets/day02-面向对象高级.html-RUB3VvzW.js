const e=JSON.parse('{"key":"v-157602b0","path":"/javaSE/day02-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html","title":"day02-面向对象高级","lang":"zh-CN","frontmatter":{"title":"day02-面向对象高级","date":"2021-02-07T11:50:38.000Z","icon":"java","category":["javaSE"],"tag":"java","description":"今天我们继续学习面向对象的语法知识，我们今天学习的主要内容是：多态、抽象、接口。 学会这些语法知识，可以让我们编写代码更灵活，代码的复用性更高。 一、多态 接下来，我们学习面向对象三大特征的的最后一个特征——多态。 1.1 多态概述 什么是多态？ 多态是在继承、实现情况下的一种现象，表现为：对象多态、行为多态。 比如：Teacher和Student都是...","head":[["meta",{"property":"og:url","content":"https://www.fanliu.top/javaSE/day02-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"FanFanの学习笔记"}],["meta",{"property":"og:title","content":"day02-面向对象高级"}],["meta",{"property":"og:description","content":"今天我们继续学习面向对象的语法知识，我们今天学习的主要内容是：多态、抽象、接口。 学会这些语法知识，可以让我们编写代码更灵活，代码的复用性更高。 一、多态 接下来，我们学习面向对象三大特征的的最后一个特征——多态。 1.1 多态概述 什么是多态？ 多态是在继承、实现情况下的一种现象，表现为：对象多态、行为多态。 比如：Teacher和Student都是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-31T11:15:14.000Z"}],["meta",{"property":"article:author","content":"fanfan"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2021-02-07T11:50:38.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-31T11:15:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day02-面向对象高级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-07T11:50:38.000Z\\",\\"dateModified\\":\\"2024-08-31T11:15:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fanfan\\",\\"url\\":\\"https://www.fanliu.top\\"}]}"]]},"headers":[{"level":2,"title":"一、多态","slug":"一、多态","link":"#一、多态","children":[{"level":3,"title":"1.1 多态概述","slug":"_1-1-多态概述","link":"#_1-1-多态概述","children":[]},{"level":3,"title":"1.2 多态的好处","slug":"_1-2-多态的好处","link":"#_1-2-多态的好处","children":[]},{"level":3,"title":"1.3 类型转换","slug":"_1-3-类型转换","link":"#_1-3-类型转换","children":[]}]},{"level":2,"title":"二、final关键字","slug":"二、final关键字","link":"#二、final关键字","children":[{"level":3,"title":"2.1 final修饰符的特点","slug":"_2-1-final修饰符的特点","link":"#_2-1-final修饰符的特点","children":[]},{"level":3,"title":"2.2 补充知识：常量","slug":"_2-2-补充知识-常量","link":"#_2-2-补充知识-常量","children":[]}]},{"level":2,"title":"三、抽象","slug":"三、抽象","link":"#三、抽象","children":[{"level":3,"title":"3.1 认识抽象类","slug":"_3-1-认识抽象类","link":"#_3-1-认识抽象类","children":[]},{"level":3,"title":"3.2 抽象类的好处","slug":"_3-2-抽象类的好处","link":"#_3-2-抽象类的好处","children":[]},{"level":3,"title":"3.3 模板方法模式","slug":"_3-3-模板方法模式","link":"#_3-3-模板方法模式","children":[]}]},{"level":2,"title":"四、接口","slug":"四、接口","link":"#四、接口","children":[{"level":3,"title":"4.1 认识接口","slug":"_4-1-认识接口","link":"#_4-1-认识接口","children":[]},{"level":3,"title":"4.2 接口的好处","slug":"_4-2-接口的好处","link":"#_4-2-接口的好处","children":[]},{"level":3,"title":"4.3 接口的案例","slug":"_4-3-接口的案例","link":"#_4-3-接口的案例","children":[]},{"level":3,"title":"4.4 接口JDK8的新特性","slug":"_4-4-接口jdk8的新特性","link":"#_4-4-接口jdk8的新特性","children":[]},{"level":3,"title":"4.5 接口的其他细节","slug":"_4-5-接口的其他细节","link":"#_4-5-接口的其他细节","children":[]}]},{"level":2,"title":"五、内部类","slug":"五、内部类","link":"#五、内部类","children":[{"level":3,"title":"1.1 成员内部类","slug":"_1-1-成员内部类","link":"#_1-1-成员内部类","children":[]},{"level":3,"title":"1.2 静态内部类","slug":"_1-2-静态内部类","link":"#_1-2-静态内部类","children":[]},{"level":3,"title":"1.3 局部内部类","slug":"_1-3-局部内部类","link":"#_1-3-局部内部类","children":[]},{"level":3,"title":"1.4 匿名内部类","slug":"_1-4-匿名内部类","link":"#_1-4-匿名内部类","children":[]}]}],"git":{"createdTime":1725102914000,"updatedTime":1725102914000,"contributors":[{"name":"fanfan","email":"1066643487@qq.com","commits":1}]},"readingTime":{"minutes":22.28,"words":6685},"filePathRelative":"javaSE/day02-面向对象高级.md","localizedDate":"2021年2月7日","excerpt":"","autoDesc":true}');export{e as data};
