import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c,a as n,b as s,d as t,e as l}from"./app-RIlIKqyn.js";const i="/assets/image-20240817184041346-8IMwoSvC.png",u={},k=n("h2",{id:"破解aspose系列jar包方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#破解aspose系列jar包方法","aria-hidden":"true"},"#"),s(" 破解Aspose系列jar包方法")],-1),r=n("blockquote",null,[n("p",null,"授人以鱼 不如授人以渔")],-1),d=n("h3",{id:"源码分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#源码分析","aria-hidden":"true"},"#"),s(" 源码分析")],-1),v={id:"_1-下载aspose-words-for-java21-11官方jar包",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#_1-下载aspose-words-for-java21-11官方jar包","aria-hidden":"true"},"#",-1),b={href:"https://downloads.aspose.com/words/java",target:"_blank",rel:"noopener noreferrer"},z=l(`<h3 id="_2-开始分析" tabindex="-1"><a class="header-anchor" href="#_2-开始分析" aria-hidden="true">#</a> 2. 开始分析</h3><p>调用授权方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;..license.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">License</span> license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>license.xml文件内容</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>License</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Data</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Products</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Product</span><span class="token punctuation">&gt;</span></span>Aspose.Total for Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Product</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Product</span><span class="token punctuation">&gt;</span></span>Aspose.Words for Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Product</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Products</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditionType</span><span class="token punctuation">&gt;</span></span>Enterprise<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EditionType</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SubscriptionExpiry</span><span class="token punctuation">&gt;</span></span>20991231<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SubscriptionExpiry</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LicenseExpiry</span><span class="token punctuation">&gt;</span></span>20991231<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LicenseExpiry</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SerialNumber</span><span class="token punctuation">&gt;</span></span>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SerialNumber</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Data</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Signature</span><span class="token punctuation">&gt;</span></span>
        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Signature</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>License</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分析License类的setLicense方法找到关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLicense</span><span class="token punctuation">(</span><span class="token class-name">String</span> licenseName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>licenseName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span>zzVu<span class="token punctuation">.</span><span class="token function">zzIR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zzZ42</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">zzXDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zzY0J</span><span class="token punctuation">(</span>licenseName<span class="token punctuation">,</span> zzWJD<span class="token punctuation">.</span><span class="token function">zzWIQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLicense</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> stream<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stream <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span>zzVu<span class="token punctuation">.</span><span class="token function">zzIR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zzZ42</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">zzXDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zzY0J</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>setLicense的两个重载方法最终都调用了<code>(new zzXDb()).zzY0J(stream);</code>中的zzY0J方法，进入zzY0J方法观察代码发现重点在于<code>void </code>zzY0J<code>方法下面的 (InputStream var1) throws Exception</code>这个重载方法里面，但是里面代码很多不太好找到关键代码，所以转头去寻找关于验证对外调用的静态方法，最终找到了在<code>zzY0J</code>方法下面的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">zzX8p</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> var0 <span class="token operator">=</span> zzWiV <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> zzWiV<span class="token punctuation">.</span>zzWSL <span class="token operator">==</span> zzYeQ<span class="token punctuation">.</span>zzX0q <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>zzWiV<span class="token punctuation">.</span>zzZ3l<span class="token punctuation">)</span> <span class="token operator">||</span> zzYKk<span class="token punctuation">.</span><span class="token function">zzWy3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4096</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>zzW5s <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        zzW5s <span class="token operator">^=</span> zzVWj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>zzZB8<span class="token punctuation">.</span><span class="token function">zzxn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        var1 <span class="token operator">=</span> zzZB8<span class="token punctuation">.</span><span class="token function">zzZ7p</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> zzu3<span class="token punctuation">.</span>zzX0q<span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2 <span class="token operator">=</span> var0 <span class="token operator">&amp;&amp;</span> var1 <span class="token operator">?</span> zzYeQ<span class="token punctuation">.</span>zzX0q <span class="token operator">:</span> zzYeQ<span class="token punctuation">.</span>zzXgr<span class="token punctuation">;</span>
        <span class="token keyword">return</span> var2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">zzWQR</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> var0 <span class="token operator">=</span> zzWiV <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> zzWiV<span class="token punctuation">.</span>zzWSL <span class="token operator">==</span> zzYeQ<span class="token punctuation">.</span>zzX0q <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>zzWiV<span class="token punctuation">.</span>zzZ3l<span class="token punctuation">)</span> <span class="token operator">||</span> zzYKk<span class="token punctuation">.</span><span class="token function">zzWy3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4096</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> zzZB8<span class="token punctuation">.</span><span class="token function">zzZ7p</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> zzu3<span class="token punctuation">.</span>zzX0q<span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2 <span class="token operator">=</span> var0 <span class="token operator">&amp;&amp;</span> var1 <span class="token operator">?</span> zzYeQ<span class="token punctuation">.</span>zzX0q <span class="token operator">:</span> zzYeQ<span class="token punctuation">.</span>zzXgr<span class="token punctuation">;</span>
    <span class="token keyword">return</span> var2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这两个方法主要在于对外返回了一个byte数组，返回值是<code>zzYeQ</code>中的静态常量，所以重点就在于上面的判断语句<code>boolean var0 = zzWiV == null || zzWiV.zzWSL == zzYeQ.zzX0q || (new Date()).after(zzWiV.zzZ3l) || zzYKk.zzWy3() == 4096;</code>让它返回什么数据。 这里需要分析<code>zzWiV.zzWSL</code> <code>zzWiV.zzZ3l</code> <code>zzYKk.zzWy3()</code>这三个数据，在当前<code>zzXDb</code>class文件中搜索找到在<code>void zzY0J(InputStream var1) throws Exception</code>方法中关键的关键位置赋值了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>zzWSL <span class="token operator">=</span> zzYeQ<span class="token punctuation">.</span>zzXgr<span class="token punctuation">;</span>
zzWiV <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>观察它上下位置代码发现看起来都是做验证错误的处理，所以可以尝试去掉上下的验证。 再来看<code>zzWiV.zzZ3l</code>变量属性为Date应该是时间什么的可以直接给个最大值。 然后是<code>zzYKk.zzWy3()</code>进入看到</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">zzWy3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> zzYU8 <span class="token operator">==</span> <span class="token number">128</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>zzyS <span class="token operator">?</span> <span class="token number">256</span> <span class="token operator">:</span> <span class="token number">4096</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么返回值就是256和4096二选一，尝试后选择返回256。</p><h3 id="_3-分析结果" tabindex="-1"><a class="header-anchor" href="#_3-分析结果" aria-hidden="true">#</a> 3. 分析结果</h3><ul><li>修改<code>void zzY0J(InputStream var1)</code>方法体为</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>zzZ3l <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Date赋值最大值</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>zzWSL <span class="token operator">=</span> zzYeQ<span class="token punctuation">.</span>zzXgr<span class="token punctuation">;</span><span class="token comment">//直接返回验证成功的执行</span>
zzWiV <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token comment">//直接返回验证成功的执行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改<code>zzYKk</code>类下的<code>static int zzWy3()</code>方法体为</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">return</span> <span class="token number">256</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-破解jar包" tabindex="-1"><a class="header-anchor" href="#_4-破解jar包" aria-hidden="true">#</a> 4. 破解jar包</h3><h4 id="_1-添加javassist修改class字节码文件的依赖" tabindex="-1"><a class="header-anchor" href="#_1-添加javassist修改class字节码文件的依赖" aria-hidden="true">#</a> 1. 添加Javassist修改class字节码文件的依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.28.0-GA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-添加修改方法" tabindex="-1"><a class="header-anchor" href="#_2-添加修改方法" aria-hidden="true">#</a> 2. 添加修改方法</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>fanliu</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javassist<span class="token punctuation">.</span></span><span class="token class-name">ClassPool</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javassist<span class="token punctuation">.</span></span><span class="token class-name">CtClass</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javassist<span class="token punctuation">.</span></span><span class="token class-name">CtMethod</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Pojie</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">modifyPptJar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 修改slides.jar包里面的校验
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">modifyPptJar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//这一步是完整的jar包路径,选择自己解压的jar目录</span>
            <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertClassPath</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\53094\\\\Downloads\\\\aspose-slides-22.11-jdk16.jar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">CtClass</span> zzZJJClass <span class="token operator">=</span> <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCtClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.aspose.slides.internal.of.public&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">CtMethod</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methodA <span class="token operator">=</span> zzZJJClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CtMethod</span> ctMethod <span class="token operator">:</span> methodA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">CtClass</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ps <span class="token operator">=</span> ctMethod<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ps<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> ctMethod<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;do&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ps[0].getName==&quot;</span> <span class="token operator">+</span> ps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ctMethod<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//这一步就是将破译完的代码放在桌面上</span>
            zzZJJClass<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\53094\\\\Desktop\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;错误==&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行修改方法后会在桌面生成 com 修改后的文件夹</p><h4 id="_3-修改jar包里面的数据" tabindex="-1"><a class="header-anchor" href="#_3-修改jar包里面的数据" aria-hidden="true">#</a> 3. 修改jar包里面的数据</h4><ol><li><p>打开jar包将桌面com文件夹覆盖到jar包com文件夹</p><figure><img src="`+i+`" alt="image-20240817184041346" tabindex="0" loading="lazy"><figcaption>image-20240817184041346</figcaption></figure></li></ol><h4 id="_4-重新导入修改后的jar包进行测试" tabindex="-1"><a class="header-anchor" href="#_4-重新导入修改后的jar包进行测试" aria-hidden="true">#</a> 4. 重新导入修改后的jar包进行测试</h4><ol><li>maven 移除旧的 jar包，导入修改后的 jar包</li><li>调用测试方法进行测试转换后的文件是否去除水印和数量限制成功</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> sourceFile <span class="token operator">=</span> <span class="token string">&quot;D:\\\\b.doc&quot;</span><span class="token punctuation">;</span><span class="token comment">//输入的文件</span>
<span class="token class-name">String</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;D:\\\\转换后.pdf&quot;</span><span class="token punctuation">;</span><span class="token comment">//输出的文件</span>
<span class="token doc-comment comment">/**
 * Word转PDF操作
 *
 * <span class="token keyword">@param</span> <span class="token parameter">sourceFile</span> 源文件
 * <span class="token keyword">@param</span> <span class="token parameter">targetFile</span> 目标文件
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdf</span><span class="token punctuation">(</span><span class="token class-name">String</span> sourceFile<span class="token punctuation">,</span> <span class="token class-name">String</span> targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> old <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>Document</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>Document</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>SaveFormat</span><span class="token punctuation">.</span><span class="token constant">PDF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;共耗时：&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>now <span class="token operator">-</span> old<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;秒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//转化用时</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-尾言" tabindex="-1"><a class="header-anchor" href="#_5-尾言" aria-hidden="true">#</a> 5. 尾言</h3><p>博主将破解 Aspose 系列的代码放在 github 上面，你也可以克隆到本地进行破解</p>`,32),g={href:"https://github.com/fanrujiang/pojieAspose",target:"_blank",rel:"noopener noreferrer"};function w(y,h){const a=e("ExternalLinkIcon");return o(),c("div",null,[k,r,d,n("h3",v,[m,s(" 1. 下载"),n("a",b,[s("Aspose.Words for Java21.11官方jar包"),t(a)])]),z,n("p",null,[s("源码地址："),n("a",g,[s("pojieAspose"),t(a)])])])}const _=p(u,[["render",w],["__file","破解Aspose系列jar包方法.html.vue"]]);export{_ as default};
