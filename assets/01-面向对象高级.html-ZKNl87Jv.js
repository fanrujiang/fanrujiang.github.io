const t=JSON.parse('{"key":"v-24d62b0f","path":"/javaSE/01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html","title":"day01-面向对象高级","lang":"zh-CN","frontmatter":{"title":"day01-面向对象高级","date":"2021-05-11T08:22:12.000Z","icon":"java","category":["javaSE"],"tag":["javaSE"],"description":"各位同学，接下来的三天课程中，我们继续学习面向对象的相关课程。面向对象是写Java程序的核心套路，如何你不懂面向对象，那就相当于Java你白学了。所以在接下来的三天时间里，各位同学也需要克服重重困难好好学习。 前面我们说过面向对象最核心的套路是：设计对象来处理数据，解决问题。 如果你把面向对象高级这一部分课程学好，你设计出来的对象将更加好用。 在正式学...","head":[["meta",{"property":"og:url","content":"https://www.fanliu.top/javaSE/01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"FanFanの学习笔记"}],["meta",{"property":"og:title","content":"day01-面向对象高级"}],["meta",{"property":"og:description","content":"各位同学，接下来的三天课程中，我们继续学习面向对象的相关课程。面向对象是写Java程序的核心套路，如何你不懂面向对象，那就相当于Java你白学了。所以在接下来的三天时间里，各位同学也需要克服重重困难好好学习。 前面我们说过面向对象最核心的套路是：设计对象来处理数据，解决问题。 如果你把面向对象高级这一部分课程学好，你设计出来的对象将更加好用。 在正式学..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-30T06:20:18.000Z"}],["meta",{"property":"article:author","content":"fanfan"}],["meta",{"property":"article:tag","content":"javaSE"}],["meta",{"property":"article:published_time","content":"2021-05-11T08:22:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-30T06:20:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day01-面向对象高级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-11T08:22:12.000Z\\",\\"dateModified\\":\\"2024-10-30T06:20:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fanfan\\",\\"url\\":\\"https://www.fanliu.top\\"}]}"]]},"headers":[{"level":2,"title":"一、静态","slug":"一、静态","link":"#一、静态","children":[{"level":3,"title":"1.1 static修饰成员变量","slug":"_1-1-static修饰成员变量","link":"#_1-1-static修饰成员变量","children":[]},{"level":3,"title":"1.2 static修饰成员变量的应用场景","slug":"_1-2-static修饰成员变量的应用场景","link":"#_1-2-static修饰成员变量的应用场景","children":[]},{"level":3,"title":"1.3 static修饰成员方法","slug":"_1-3-static修饰成员方法","link":"#_1-3-static修饰成员方法","children":[]},{"level":3,"title":"1.4 工具类","slug":"_1-4-工具类","link":"#_1-4-工具类","children":[]},{"level":3,"title":"1.5 static的注意事项","slug":"_1-5-static的注意事项","link":"#_1-5-static的注意事项","children":[]},{"level":3,"title":"1.6 static应用（代码块）","slug":"_1-6-static应用-代码块","link":"#_1-6-static应用-代码块","children":[]},{"level":3,"title":"1.7 static应用（单例设计模式）","slug":"_1-7-static应用-单例设计模式","link":"#_1-7-static应用-单例设计模式","children":[]}]},{"level":2,"title":"二、继承","slug":"二、继承","link":"#二、继承","children":[{"level":3,"title":"2.1 继承快速入门","slug":"_2-1-继承快速入门","link":"#_2-1-继承快速入门","children":[]},{"level":3,"title":"2.2 继承的好处","slug":"_2-2-继承的好处","link":"#_2-2-继承的好处","children":[]},{"level":3,"title":"2.3 权限修饰符","slug":"_2-3-权限修饰符","link":"#_2-3-权限修饰符","children":[]},{"level":3,"title":"2.4 单继承、Object","slug":"_2-4-单继承、object","link":"#_2-4-单继承、object","children":[]},{"level":3,"title":"2.5 方法重写","slug":"_2-5-方法重写","link":"#_2-5-方法重写","children":[]},{"level":3,"title":"2.6 子类中访问成员的特点","slug":"_2-6-子类中访问成员的特点","link":"#_2-6-子类中访问成员的特点","children":[]},{"level":3,"title":"2.7 子类中访问构造器的特点","slug":"_2-7-子类中访问构造器的特点","link":"#_2-7-子类中访问构造器的特点","children":[]}]}],"git":{"createdTime":1730269218000,"updatedTime":1730269218000,"contributors":[{"name":"fanfan","email":"1066643487@qq.com","commits":1}]},"readingTime":{"minutes":22.26,"words":6678},"filePathRelative":"javaSE/01-面向对象高级.md","localizedDate":"2021年5月11日","excerpt":"","autoDesc":true}');export{t as data};
