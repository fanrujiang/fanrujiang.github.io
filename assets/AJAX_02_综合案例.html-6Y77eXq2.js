import{_ as p,r as e,o,c,a as n,b as a,d as t,e as l}from"./app-eVdJebrU.js";const i="/assets/image-20230404105414757-POXIQ94P.png",u="/assets/image-20230404105421707-MYosf97k.png",r="/assets/image-20230404105801739-v_aP-RlP.png",k="/assets/image-20230404105858660-YLhQul_a.png",d="/assets/image-20230404110038828-XKIZYzA_.png",m="/assets/image-20230404110943200-dn6J0Q-z.png",v="/assets/image-20230404110953752-TheCe-7J.png",g="/assets/image-20230404111014560-CL86FIKi.png",b="/assets/image-20230404111235862-OAje6Gj5.png",h="/assets/image-20230404111251254-V8PqxlT_.png",f="/assets/image-20230404111343653-wNw8NiRJ.png",y="/assets/image-20230404111530311-Hlf34wMM.png",q="/assets/image-20230404111546639-A-UbXdZX.png",x="/assets/image-20230404111612125-imGqdH0P.png",_="/assets/image-20230404111722254-lOB10J68.png",j="/assets/image-20230404111739153-XoGMUf22.png",w="/assets/image-20230404111756655-HIFYkAai.png",S="/assets/image-20230404105414757-POXIQ94P.png",B="/assets/image-20230404112942935-wIaOXYEP.png",L="/assets/image-20230404113338815-WPzYpYqW.png",O="/assets/image-20230404113702515-WaCHZ7b-.png",z="/assets/image-20230404122349505-72fTwfAB.png",D="/assets/image-20230404123206073-VNChlXNJ.png",I="/assets/image-20230404123708765-qR33Y5YP.png",E="/assets/image-20230404124524401-oL_orYSY.png",M="/assets/image-20230404124540629-5k9K3gYh.png",F="/assets/image-20230404125310049-ufrC-BX2.png",A="/assets/image-20230404125517679-PojLrtsp.png",P={},T=l(`<h1 id="_02-ajax综合案例" tabindex="-1"><a class="header-anchor" href="#_02-ajax综合案例" aria-hidden="true">#</a> 02_AJAX综合案例</h1><h2 id="知识点自测" tabindex="-1"><a class="header-anchor" href="#知识点自测" aria-hidden="true">#</a> 知识点自测</h2><ol><li><p>以下代码运行结果是什么？（考察扩展运算符的使用）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;老李&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A：报错</p><p>B：18</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>什么是事件委托？</p><p>A：只能把单击事件委托给父元素绑定</p><p>B：可以把能冒泡的事件，委托给已存在的向上的任意标签元素绑定</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>事件对象e.target作用是什么?</p><p>A：获取到这次触发事件相关的信息</p><p>B：获取到这次触发事件目标标签元素</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>如果获取绑定在标签上自定义属性的值10？</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-code</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>西游记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A：div标签对象.innerHTML</p><p>B：div标签对象.dataset.code</p><p>C：div标签对象.code</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>哪个方法可以判断目标标签是否包含指定的类名?</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-div title info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A: div标签对象.className === &#39;title&#39;</p><p>B: div标签对象.classList.contains(&#39;title&#39;)</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>伪数组取值哪种方式是正确的?</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;老李&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;老刘&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A: obj.0</p><p>B: obj[0]</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li><li><p>以下哪个选项可以，往本地存储键为‘bgImg’，值为图片url网址的代码</p><p>A：localStorage.setItem(&#39;bgImg&#39;)</p><p>B：localStorage.getItem(&#39;bgImg&#39;)</p><p>C：localStorage.setItem(&#39;bgImg&#39;, &#39;图片url网址&#39;)</p><p>D：localStorage.getItem(&#39;bgImg&#39;, &#39;图片url网址&#39;)</p><details><summary>答案</summary><ul><li>C正确</li></ul></details></li><li><p>以下代码运行结果是？</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;老李&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span>
<span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A：代码报错</p><p>B：[username, age, sex]</p><p>C：[&quot;username&quot;, &quot;age&quot;, &quot;sex&quot;]</p><p>D：[&quot;老李&quot;, 18, &quot;男&quot;]</p><details><summary>答案</summary><ul><li>C正确</li></ul></details></li><li><p>下面哪个选项可以把数字字符串转成数字类型？</p><p>A：+’10‘</p><p>B：’10‘ + 0</p><details><summary>答案</summary><ul><li>A正确</li></ul></details></li><li><p>以下代码运行后的结果是什么？（考察逻辑与的短路特性）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span>
<span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token punctuation">(</span>age <span class="token operator">||</span> <span class="token string">&#39;有年龄&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> sex <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> sex <span class="token operator">||</span> <span class="token string">&#39;没有性别&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A：报错，报错</p><p>B：18，没有性别</p><p>C：有年龄，没有性别</p><p>D：18，’‘</p><details><summary>答案</summary><ul><li>B正确</li></ul></details></li></ol><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li>案例-图书管理</li><li>图片上传</li><li>案例-网站换肤</li><li>案例-个人信息设置</li></ul><h2 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标" aria-hidden="true">#</a> 学习目标</h2><blockquote><p>今天主要就是练，巩固 axios 的使用</p></blockquote><ol><li>完成案例-图书管理系统（增删改查）经典业务</li><li>掌握图片上传的思路</li><li>完成案例-网站换肤并实现图片地址缓存</li><li>完成案例-个人信息设置</li></ol><h2 id="_01-案例-图书管理-介绍" tabindex="-1"><a class="header-anchor" href="#_01-案例-图书管理-介绍" aria-hidden="true">#</a> 01.案例_图书管理-介绍</h2><h3 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h3><p>案例-图书管理-介绍（介绍要完成的效果和练习到的思维）</p><h3 id="讲解" tabindex="-1"><a class="header-anchor" href="#讲解" aria-hidden="true">#</a> 讲解</h3><ol><li><p>打开备课代码运行图书管理案例效果-介绍要完成的增删改查业务效果和 Bootstrap 弹框使用</p><figure><img src="`+i+'" alt="image-20230404105414757" tabindex="0" loading="lazy"><figcaption>image-20230404105414757</figcaption></figure><figure><img src="'+u+'" alt="image-20230404105421707" tabindex="0" loading="lazy"><figcaption>image-20230404105421707</figcaption></figure></li><li><p>分析步骤和对应的视频模块</p><ul><li>先学习 Bootstrap 弹框的使用（因为添加图书和编辑图书需要这个窗口来承载图书表单）</li><li>先做渲染图书列表（这样做添加和编辑以及删除可以看到数据变化，所以先做渲染）</li><li>再做新增图书功能</li><li>再做删除图书功能</li><li>再做编辑图书功能（注意：编辑和新增图书是2套弹框-后续做项目我们再用同1个弹框）</li></ul></li></ol><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h3><ol><li><p>做完这个案例我们将会有什么收获呢?</p><details><summary>答案</summary><ul><li>掌握前端经典增删改查的业务和思路，对以后开发很有帮助</li></ul></details></li></ol><h2 id="_02-bootstrap-弹框-属性控制" tabindex="-1"><a class="header-anchor" href="#_02-bootstrap-弹框-属性控制" aria-hidden="true">#</a> 02.Bootstrap 弹框_属性控制</h2><h3 id="目标-1" tabindex="-1"><a class="header-anchor" href="#目标-1" aria-hidden="true">#</a> 目标</h3><p>使用属性方式控制 Bootstarp 弹框的显示和隐藏</p><h3 id="讲解-1" tabindex="-1"><a class="header-anchor" href="#讲解-1" aria-hidden="true">#</a> 讲解</h3><ol><li><p>什么是 Bootstrap 弹框？</p><ul><li><p>不离开当前页面，显示单独内容，供用户操作</p><figure><img src="'+r+'" alt="image-20230404105801739" tabindex="0" loading="lazy"><figcaption>image-20230404105801739</figcaption></figure></li></ul></li><li><p>需求：使用 Bootstrap 弹框，先做个简单效果，点击按钮，让弹框出现，点击 X 和 Close 让弹框隐藏</p><figure><img src="'+k+`" alt="image-20230404105858660" tabindex="0" loading="lazy"><figcaption>image-20230404105858660</figcaption></figure></li><li><p>如何使用 Bootstrap 弹框呢？</p><ol><li><p>先引入 bootstrap.css 和 bootstrap.js 到自己网页中</p></li><li><p>准备弹框标签，确认结构（可以从 Bootstrap 官方文档的 Modal 里复制基础例子）- 运行到网页后，逐一对应标签和弹框每个部分对应关系</p></li><li><p>通过自定义属性，通知弹框的显示和隐藏，语法如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-bs-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>css选择器<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  显示弹框
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-bs-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>去代码区实现一下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Bootstrap 弹框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 引入bootstrap.css --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 
    目标：使用Bootstrap弹框
    1. 引入bootstrap.css 和 bootstrap.js
    2. 准备弹框标签，确认结构
    3. 通过自定义属性，控制弹框的显示和隐藏
   --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.my-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    显示弹框
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 
    弹框标签
    bootstrap的modal弹框，添加modal类名（默认隐藏）
   --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal my-box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-dialog<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 弹框-内容 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 弹框-头部 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Modal title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-close<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 弹框-身体 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Modal body text goes here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 弹框-底部 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal-footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 引入bootstrap.js --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-1" tabindex="-1"><a class="header-anchor" href="#小结-1" aria-hidden="true">#</a> 小结</h3><ol><li><p>用哪个属性绑定来控制弹框显示呢?</p><details><summary>答案</summary><ul><li>data-bs-toggle和data-bs-target</li></ul></details></li><li><p>用哪个属性来控制隐藏弹框呢？</p><details><summary>答案</summary><ul><li>data-bs-dismiss 关闭的是标签所在的当前提示框</li></ul></details></li></ol><h2 id="_03-bootstrap-弹框-js控制" tabindex="-1"><a class="header-anchor" href="#_03-bootstrap-弹框-js控制" aria-hidden="true">#</a> 03.Bootstrap 弹框_JS控制</h2><h3 id="目标-2" tabindex="-1"><a class="header-anchor" href="#目标-2" aria-hidden="true">#</a> 目标</h3><p>使用 JS 方式控制 Bootstarp 弹框的显示和隐藏</p><h3 id="讲解-2" tabindex="-1"><a class="header-anchor" href="#讲解-2" aria-hidden="true">#</a> 讲解</h3><ol><li><p>为什么需要 JS 方式控制呢？</p><ul><li><p>当我显示之前，隐藏之前，需要执行一些 JS 逻辑代码，就需要引入 JS 控制弹框显示/隐藏的方式了</p></li><li><p>例如：</p><ul><li>点击编辑姓名按钮，在弹框显示之前，在输入框填入默认姓名</li><li>点击保存按钮，在弹框隐藏之前，获取用户填入的名字并打印</li></ul><figure><img src="`+d+`" alt="image-20230404110038828" tabindex="0" loading="lazy"><figcaption>image-20230404110038828</figcaption></figure></li></ul></li><li><p>所以在现实和隐藏之前，需要执行 JS 代码逻辑，就使用 JS 方式 控制 Bootstrap 弹框显示和隐藏</p><p>语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建弹框对象</span>
<span class="token keyword">const</span> modalDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;css选择器&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> modal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>modelDom<span class="token punctuation">)</span>

<span class="token comment">// 显示弹框</span>
modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 隐藏弹框</span>
modal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>去代码区实现一下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1. 创建弹框对象</span>
<span class="token keyword">const</span> modalDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.name-box&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> modal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>modalDom<span class="token punctuation">)</span>

<span class="token comment">// 编辑姓名-&gt;点击-&gt;赋予默认姓名-&gt;弹框显示</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;默认姓名&#39;</span>

  <span class="token comment">// 2. 显示弹框</span>
  modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 保存-&gt;点击-&gt;-&gt;获取姓名打印-&gt;弹框隐藏</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.save-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> username <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;模拟把姓名保存到服务器上&#39;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>

  <span class="token comment">// 2. 隐藏弹框</span>
  modal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-2" tabindex="-1"><a class="header-anchor" href="#小结-2" aria-hidden="true">#</a> 小结</h3><ol><li><p>什么时候用属性控制，什么时候用 JS 控制 Bootstrap 弹框的显示/隐藏?</p><details><summary>答案</summary><ul><li>直接出现/隐藏用属性方式控制，如果需要先执行一段 JS 逻辑再显示/隐藏就用 JS 方式控制</li></ul></details></li></ol><h2 id="_04-案例-图书管理-渲染列表" tabindex="-1"><a class="header-anchor" href="#_04-案例-图书管理-渲染列表" aria-hidden="true">#</a> 04.案例_图书管理_渲染列表</h2><h3 id="目标-3" tabindex="-1"><a class="header-anchor" href="#目标-3" aria-hidden="true">#</a> 目标</h3><p>完成图书管理案例-图书列表数据渲染效果</p><h3 id="讲解-3" tabindex="-1"><a class="header-anchor" href="#讲解-3" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：基于 axios 获取到图书列表数据，并用 JS 代码渲染数据，到准备好的模板标签中</p><figure><img src="`+m+'" alt="image-20230404110943200" tabindex="0" loading="lazy"><figcaption>image-20230404110943200</figcaption></figure></li><li><p>步骤：</p><ol><li><p>获取数据</p></li><li><p>渲染数据</p><figure><img src="'+v+'" alt="image-20230404110953752" tabindex="0" loading="lazy"><figcaption>image-20230404110953752</figcaption></figure><figure><img src="'+g+`" alt="image-20230404111014560" tabindex="0" loading="lazy"><figcaption>image-20230404111014560</figcaption></figure></li></ol></li><li><p>获取数据的时候，需要给自己起一个外号，为什么需要给自己起一个外号呢？</p><ul><li>我们所有人数据都来自同一个服务器上，为了区分每个同学不同的数据，需要大家设置一个外号告诉服务器，服务器就会返回你对应的图书数据了</li></ul></li><li><p>核心代码如下：</p><blockquote><p>因为默认展示列表，新增，修改，删除后都要重新获取并刷新列表，所以把获取数据渲染数据的代码封装在一个函数内，方便复用</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标1：渲染图书列表
 *  1.1 获取数据
 *  1.2 渲染数据
 */</span>
<span class="token keyword">const</span> creator <span class="token operator">=</span> <span class="token string">&#39;老张&#39;</span>
<span class="token comment">// 封装-获取并渲染图书列表函数</span>
<span class="token keyword">function</span> <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.1 获取数据</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/books&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 外号：获取对应数据</span>
      creator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(result)</span>
    <span class="token keyword">const</span> bookList <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
    <span class="token comment">// console.log(bookList)</span>
    <span class="token comment">// 1.2 渲染数据</span>
    <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> bookList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tr&gt;
      &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
      &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>bookname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
      &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
      &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>publisher<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
      &lt;td data-id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;
        &lt;span class=&quot;del&quot;&gt;删除&lt;/span&gt;
        &lt;span class=&quot;edit&quot;&gt;编辑&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// console.log(htmlStr)</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlStr
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 网页加载运行，获取并渲染列表一次</span>
<span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-3" tabindex="-1"><a class="header-anchor" href="#小结-3" aria-hidden="true">#</a> 小结</h3><ol><li><p>渲染数据列表的2个步骤是什么？</p><details><summary>答案</summary><ul><li>获取数据，分析结构渲染到页面上</li></ul></details></li></ol><h2 id="_05-案例-图书管理-新增图书" tabindex="-1"><a class="header-anchor" href="#_05-案例-图书管理-新增图书" aria-hidden="true">#</a> 05.案例_图书管理_新增图书</h2><h3 id="目标-4" tabindex="-1"><a class="header-anchor" href="#目标-4" aria-hidden="true">#</a> 目标</h3><p>完成图书管理案例-新增图书需求</p><h3 id="讲解-4" tabindex="-1"><a class="header-anchor" href="#讲解-4" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：点击添加按钮，出现准备好的新增图书弹框，填写图书信息提交到服务器保存，并更新图书列表</p><figure><img src="`+b+'" alt="image-20230404111235862" tabindex="0" loading="lazy"><figcaption>image-20230404111235862</figcaption></figure><figure><img src="'+h+'" alt="image-20230404111251254" tabindex="0" loading="lazy"><figcaption>image-20230404111251254</figcaption></figure></li><li><p>步骤：</p><ol><li><p>新增弹框（控制显示和隐藏）（基于 Bootstrap 弹框和准备好的表单-用属性和 JS 方式控制）</p></li><li><p>在点击保存按钮时，收集数据&amp;提交保存</p></li><li><p>刷新-图书列表）（重新调用下之前封装的获取并渲染列表的函数）</p><figure><img src="'+f+`" alt="image-20230404111343653" tabindex="0" loading="lazy"><figcaption>image-20230404111343653</figcaption></figure></li></ol></li><li><p>核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标2：新增图书
 *  2.1 新增弹框-&gt;显示和隐藏
 *  2.2 收集表单数据，并提交到服务器保存
 *  2.3 刷新图书列表
 */</span>
<span class="token comment">// 2.1 创建弹框对象</span>
<span class="token keyword">const</span> addModalDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-modal&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> addModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>addModalDom<span class="token punctuation">)</span>
<span class="token comment">// 保存按钮-&gt;点击-&gt;隐藏弹框</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 2.2 收集表单数据，并提交到服务器保存</span>
  <span class="token keyword">const</span> addForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> bookObj <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>addForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// console.log(bookObj)</span>
  <span class="token comment">// 提交到服务器</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/books&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>bookObj<span class="token punctuation">,</span>
      creator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(result)</span>
    <span class="token comment">// 2.3 添加成功后，重新请求并渲染图书列表</span>
    <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 重置表单</span>
    addForm<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 隐藏弹框</span>
    addModal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-4" tabindex="-1"><a class="header-anchor" href="#小结-4" aria-hidden="true">#</a> 小结</h3><ol><li><p>新增数据的3个步骤是什么？</p><details><summary>答案</summary><ul><li>准备好数据标签和样式，然后收集表单数据提交保存，刷新列表</li></ul></details></li></ol><h2 id="_06-案例-图书管理-删除图书" tabindex="-1"><a class="header-anchor" href="#_06-案例-图书管理-删除图书" aria-hidden="true">#</a> 06.案例_图书管理_删除图书</h2><h3 id="目标-5" tabindex="-1"><a class="header-anchor" href="#目标-5" aria-hidden="true">#</a> 目标</h3><p>完成图书管理案例-删除图书需求</p><h3 id="讲解-5" tabindex="-1"><a class="header-anchor" href="#讲解-5" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：点击图书删除元素，删除当前图书数据</p><figure><img src="`+y+'" alt="image-20230404111530311" tabindex="0" loading="lazy"><figcaption>image-20230404111530311</figcaption></figure><figure><img src="'+q+'" alt="image-20230404111546639" tabindex="0" loading="lazy"><figcaption>image-20230404111546639</figcaption></figure></li><li><p>步骤：</p><ol><li><p>给删除元素，绑定点击事件（事件委托方式并判断点击的是删除元素才走删除逻辑代码），并获取到要删除的数据id</p></li><li><p>基于 axios 和接口文档，调用删除接口，让服务器删除这条数据</p></li><li><p>重新获取并刷新图书列表</p><figure><img src="'+x+`" alt="image-20230404111612125" tabindex="0" loading="lazy"><figcaption>image-20230404111612125</figcaption></figure></li></ol></li><li><p>核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标3：删除图书
 *  3.1 删除元素绑定点击事件-&gt;获取图书id
 *  3.2 调用删除接口
 *  3.3 刷新图书列表
 */</span>
<span class="token comment">// 3.1 删除元素-&gt;点击（事件委托）</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取触发事件目标元素</span>
  <span class="token comment">// console.log(e.target)</span>
  <span class="token comment">// 判断点击的是删除元素</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(&#39;点击删除元素&#39;)</span>
    <span class="token comment">// 获取图书id（自定义属性id）</span>
    <span class="token keyword">const</span> theId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    <span class="token comment">// console.log(theId)</span>
    <span class="token comment">// 3.2 调用删除接口</span>
    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/books/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>theId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 3.3 刷新图书列表</span>
      <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-5" tabindex="-1"><a class="header-anchor" href="#小结-5" aria-hidden="true">#</a> 小结</h3><ol><li><p>删除数据的步骤是什么？</p><details><summary>答案</summary><ul><li>告知服务器要删除的数据id，服务器删除后，重新获取并刷新列表</li></ul></details></li></ol><h2 id="_07-09-案例-图书管理-编辑图书" tabindex="-1"><a class="header-anchor" href="#_07-09-案例-图书管理-编辑图书" aria-hidden="true">#</a> 07-09.案例_图书管理_编辑图书</h2><h3 id="目标-6" tabindex="-1"><a class="header-anchor" href="#目标-6" aria-hidden="true">#</a> 目标</h3><p>完成图书管理案例-编辑图书需求</p><h3 id="讲解-6" tabindex="-1"><a class="header-anchor" href="#讲解-6" aria-hidden="true">#</a> 讲解</h3><ol><li><p>因为编辑图书要做回显等，比较复杂，所以分了3个视频来讲解</p></li><li><p>需求：完成编辑图书回显当前图书数据到编辑表单，在用户点击修改按钮，收集数据提交到服务器保存，并刷新列表</p><figure><img src="`+_+'" alt="image-20230404111722254" tabindex="0" loading="lazy"><figcaption>image-20230404111722254</figcaption></figure></li><li><p>编辑数据的核心思路：</p><ol><li><p>给编辑元素，绑定点击事件（事件委托方式并判断点击的是编辑元素才走编辑逻辑代码），并获取到要编辑的数据id</p></li><li><p>基于 axios 和接口文档，调用查询图书详情接口，获取正在编辑的图书数据，并回显到表单中（页面上的数据是在用户的浏览器中不够准备，所以只要是查看数据都要从服务器获取）</p><figure><img src="'+j+'" alt="image-20230404111739153" tabindex="0" loading="lazy"><figcaption>image-20230404111739153</figcaption></figure></li><li><p>收集并提交保存修改数据，并重新从服务器获取列表刷新页面</p><figure><img src="'+w+`" alt="image-20230404111756655" tabindex="0" loading="lazy"><figcaption>image-20230404111756655</figcaption></figure></li></ol></li><li><p>核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标4：编辑图书
 *  4.1 编辑弹框-&gt;显示和隐藏
 *  4.2 获取当前编辑图书数据-&gt;回显到编辑表单中
 *  4.3 提交保存修改，并刷新列表
 */</span>
<span class="token comment">// 4.1 编辑弹框-&gt;显示和隐藏</span>
<span class="token keyword">const</span> editDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-modal&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> editModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>editDom<span class="token punctuation">)</span>
<span class="token comment">// 编辑元素-&gt;点击-&gt;弹框显示</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 判断点击的是否为编辑元素</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 4.2 获取当前编辑图书数据-&gt;回显到编辑表单中</span>
    <span class="token keyword">const</span> theId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/books/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>theId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> bookObj <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
      <span class="token comment">// document.querySelector(&#39;.edit-form .bookname&#39;).value = bookObj.bookname</span>
      <span class="token comment">// document.querySelector(&#39;.edit-form .author&#39;).value = bookObj.author</span>
      <span class="token comment">// 数据对象“属性”和标签“类名”一致</span>
      <span class="token comment">// 遍历数据对象，使用属性去获取对应的标签，快速赋值</span>
      <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>bookObj<span class="token punctuation">)</span> <span class="token comment">// [&#39;id&#39;, &#39;bookname&#39;, &#39;author&#39;, &#39;publisher&#39;]</span>
      keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.edit-form .</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> bookObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    editModal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 修改按钮-&gt;点击-&gt;隐藏弹框</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 4.3 提交保存修改，并刷新列表</span>
  <span class="token keyword">const</span> editForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> bookname<span class="token punctuation">,</span> author<span class="token punctuation">,</span> publisher <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>editForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 保存正在编辑的图书id，隐藏起来：无需让用户修改</span>
  <span class="token comment">// &lt;input type=&quot;hidden&quot; class=&quot;id&quot; name=&quot;id&quot; value=&quot;84783&quot;&gt;</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/books/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      bookname<span class="token punctuation">,</span>
      author<span class="token punctuation">,</span>
      publisher<span class="token punctuation">,</span>
      creator
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 修改成功以后，重新获取并刷新列表</span>
    <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// 隐藏弹框</span>
    editModal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-6" tabindex="-1"><a class="header-anchor" href="#小结-6" aria-hidden="true">#</a> 小结</h3><ol><li><p>编辑数据的步骤是什么？</p><details><summary>答案</summary><ul><li>获取正在编辑数据并回显，收集编辑表单的数据提交保存，重新获取并刷新列表</li></ul></details></li></ol><h2 id="_10-案例-图书管理-总结" tabindex="-1"><a class="header-anchor" href="#_10-案例-图书管理-总结" aria-hidden="true">#</a> 10.案例_图书管理_总结</h2><h3 id="目标-7" tabindex="-1"><a class="header-anchor" href="#目标-7" aria-hidden="true">#</a> 目标</h3><p>总结下增删改查的核心思路</p><h3 id="讲解-7" tabindex="-1"><a class="header-anchor" href="#讲解-7" aria-hidden="true">#</a> 讲解</h3><ol><li><p>因为增删改查的业务在前端实际开发中非常常见，思路是可以通用的，所以总结下思路</p><blockquote><p>1.渲染列表（查）</p><p>2.新增图书（增）</p><p>3.删除图书（删）</p><p>4.编辑图书（改）</p></blockquote><figure><img src="`+S+`" alt="image-20230404111941722" tabindex="0" loading="lazy"><figcaption>image-20230404111941722</figcaption></figure></li><li><p>渲染数据（查）</p><blockquote><p>核心思路：获取数据 -&gt; 渲染数据</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1.1 获取数据</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bookList <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
  <span class="token comment">// 1.2 渲染数据</span>
  <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> bookList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tr&gt;
    &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
    &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>bookname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
    &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
    &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>publisher<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
    &lt;td data-id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;
      &lt;span class=&quot;del&quot;&gt;删除&lt;/span&gt;
      &lt;span class=&quot;edit&quot;&gt;编辑&lt;/span&gt;
    &lt;/td&gt;
  &lt;/tr&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlStr
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新增数据（增）</p><blockquote><p>核心思路：准备页面标签 -&gt; 收集数据提交（必须） -&gt; 刷新页面列表（可选）</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 2.1 创建弹框对象</span>
<span class="token keyword">const</span> addModalDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-modal&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> addModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>addModalDom<span class="token punctuation">)</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 2.2 收集表单数据，并提交到服务器保存</span>
  <span class="token keyword">const</span> addForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.add-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> bookObj <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>addForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2.3 添加成功后，重新请求并渲染图书列表</span>
    <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    addForm<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    addModal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+B+`" alt="image-20230404112942935" tabindex="0" loading="lazy"><figcaption>image-20230404112942935</figcaption></figure></li><li><p>删除图书（删）</p><blockquote><p>核心思路：绑定点击事件（获取要删除的图书唯一标识） -&gt; 调用删除接口（让服务器删除此数据） -&gt; 成功后重新获取并刷新列表</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 3.1 删除元素-&gt;点击（事件委托）</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取图书id（自定义属性id）</span>
    <span class="token keyword">const</span> theId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    <span class="token comment">// 3.2 调用删除接口</span>
    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 3.3 刷新图书列表</span>
      <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+L+`" alt="image-20230404113338815" tabindex="0" loading="lazy"><figcaption>image-20230404113338815</figcaption></figure></li><li><p>编辑图书（改）</p><blockquote><p>核心思路：准备编辑图书表单 -&gt; 表单回显正在编辑的数据 -&gt; 点击修改收集数据 -&gt; 提交到服务器保存 -&gt; 重新获取并刷新列表</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 4.1 编辑弹框-&gt;显示和隐藏</span>
<span class="token keyword">const</span> editDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-modal&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> editModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>editDom<span class="token punctuation">)</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 4.2 获取当前编辑图书数据-&gt;回显到编辑表单中</span>
    <span class="token keyword">const</span> theId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> bookObj <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
      <span class="token comment">// 遍历数据对象，使用属性去获取对应的标签，快速赋值</span>
      <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>bookObj<span class="token punctuation">)</span> 
      keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.edit-form .</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> bookObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    editModal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 4.3 提交保存修改，并刷新列表</span>
  <span class="token keyword">const</span> editForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> bookname<span class="token punctuation">,</span> author<span class="token punctuation">,</span> publisher <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>editForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 保存正在编辑的图书id，隐藏起来：无需让用户修改</span>
  <span class="token comment">// &lt;input type=&quot;hidden&quot; class=&quot;id&quot; name=&quot;id&quot; value=&quot;84783&quot;&gt;</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">getBooksList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    editModal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+O+`" alt="image-20230404113702515" tabindex="0" loading="lazy"><figcaption>image-20230404113702515</figcaption></figure></li></ol><h3 id="小结-7" tabindex="-1"><a class="header-anchor" href="#小结-7" aria-hidden="true">#</a> 小结</h3><ol><li><p>学完图书管理案例，我们收货了什么？</p><details><summary>答案</summary><ul><li>现在编辑的虽然是图书数据，以后编辑其他数据，再做增删改查都是差不多的思路</li></ul></details></li></ol><h2 id="_11-图片上传" tabindex="-1"><a class="header-anchor" href="#_11-图片上传" aria-hidden="true">#</a> 11.图片上传</h2><h3 id="目标-8" tabindex="-1"><a class="header-anchor" href="#目标-8" aria-hidden="true">#</a> 目标</h3><p>把本地图片上传到网页上显示</p><h3 id="讲解-8" tabindex="-1"><a class="header-anchor" href="#讲解-8" aria-hidden="true">#</a> 讲解</h3><ol><li><p>什么是图片上传？</p><ul><li>就是把本地的图片上传到网页上显示</li></ul></li><li><p>图片上传怎么做？</p><ul><li>先依靠文件选择元素获取用户选择的本地文件，接着提交到服务器保存，服务器会返回图片的 url 网址，然后把网址加载到 img 标签的 src 属性中即可显示</li></ul></li><li><p>为什么不直接显示到浏览器上，要放到服务器上呢？</p><ul><li>因为浏览器保存是临时的，如果你想随时随地访问图片，需要上传到服务器上</li></ul></li><li><p>图片上传怎么做呢？</p><ol><li><p>先获取图片文件对象</p></li><li><p>使用 FormData 表单数据对象装入（因为图片是文件而不是以前的数字和字符串了所以传递文件一般需要放入 FormData 以键值对-文件流的数据传递（可以查看请求体-确认请求体结构）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>参数名<span class="token punctuation">,</span> 值<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>提交表单数据对象，使用服务器返回图片 url 网址</p></li></ol></li><li><p>核心代码如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>图片上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 文件选择元素 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>upload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-img<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token doc-comment comment">/**
     * 目标：图片上传，显示到网页上
     *  1. 获取图片文件
     *  2. 使用 FormData 携带图片文件
     *  3. 提交到服务器，获取图片url网址使用
    */</span>
    <span class="token comment">// 文件选择元素-&gt;change改变事件</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.upload&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1. 获取图片文件</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token comment">// 2. 使用 FormData 携带图片文件</span>
      <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token comment">// 3. 提交到服务器，获取图片url网址使用</span>
      <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/uploadimg&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> fd
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
        <span class="token comment">// 取出图片url网址，用img标签加载显示</span>
        <span class="token keyword">const</span> imgUrl <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.my-img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgUrl
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-8" tabindex="-1"><a class="header-anchor" href="#小结-8" aria-hidden="true">#</a> 小结</h3><ol><li><p>图片上传的思路是什么？</p><details><summary>答案</summary><ul><li>先用文件选择元素，获取到文件对象，然后装入 FormData 表单对象中，再发给服务器，得到图片在服务器的 URL 网址，再通过 img 标签加载图片显示</li></ul></details></li></ol><h2 id="_12-案例-网站-更换背景图" tabindex="-1"><a class="header-anchor" href="#_12-案例-网站-更换背景图" aria-hidden="true">#</a> 12.案例_网站-更换背景图</h2><h3 id="目标-9" tabindex="-1"><a class="header-anchor" href="#目标-9" aria-hidden="true">#</a> 目标</h3><p>实现更换网站背景图的效果</p><h3 id="讲解-9" tabindex="-1"><a class="header-anchor" href="#讲解-9" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：先运行备课代码，查看要完成的效果，点击右上角选择本机中提供的素材图片，更换网站背景图</p><figure><img src="`+z+`" alt="image-20230404122349505" tabindex="0" loading="lazy"><figcaption>image-20230404122349505</figcaption></figure></li><li><p>网站更换背景图如何实现呢，并且保证刷新后背景图还在？具体步骤：</p><ol><li>先获取到用户选择的背景图片，上传并把服务器返回的图片 url 网址设置给 body 背景</li><li>上传成功时，保存图片 url 网址到 localStorage 中</li><li>网页运行后，获取 localStorage 中的图片的 url 网址使用（并判断本地有图片 url 网址字符串才设置）</li></ol></li><li><p>核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标：网站-更换背景
 *  1. 选择图片上传，设置body背景
 *  2. 上传成功时，&quot;保存&quot;图片url网址
 *  3. 网页运行后，&quot;获取&quot;url网址使用
 * */</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.bg-ipt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. 选择图片上传，设置body背景</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/uploadimg&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> fd
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> imgUrl <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>imgUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>

    <span class="token comment">// 2. 上传成功时，&quot;保存&quot;图片url网址</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;bgImg&#39;</span><span class="token punctuation">,</span> imgUrl<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 3. 网页运行后，&quot;获取&quot;url网址使用</span>
<span class="token keyword">const</span> bgUrl <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;bgImg&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bgUrl<span class="token punctuation">)</span>
bgUrl <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bgUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-9" tabindex="-1"><a class="header-anchor" href="#小结-9" aria-hidden="true">#</a> 小结</h3><ol><li><p>localStorage 取值和赋值的语法分别是什么？</p><details><summary>答案</summary><ul><li>localStorage.getItem(&#39;key&#39;)是取值，localStorage.setItem(&#39;key&#39;, &#39;value&#39;)是赋值</li></ul></details></li></ol><h2 id="_13-案例-个人信息设置-介绍" tabindex="-1"><a class="header-anchor" href="#_13-案例-个人信息设置-介绍" aria-hidden="true">#</a> 13.案例_个人信息设置-介绍</h2><h3 id="目标-10" tabindex="-1"><a class="header-anchor" href="#目标-10" aria-hidden="true">#</a> 目标</h3><p>介绍个人信息设置案例-需要完成哪些效果，分几个视频讲解</p><h3 id="讲解-10" tabindex="-1"><a class="header-anchor" href="#讲解-10" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：先运行备课代码，查看要完成的效果</p><figure><img src="`+D+'" alt="image-20230404123206073" tabindex="0" loading="lazy"><figcaption>image-20230404123206073</figcaption></figure></li><li><p>本视频分为，信息回显 + 头像修改 + 信息修改+ 提示框反馈 4 部分</p><ol><li>先完成信息回显</li><li>再做头像修改-立刻就更新给此用户</li><li>收集个人信息表单-提交保存</li><li>提交后反馈结果给用户（提示框）</li></ol></li></ol><h3 id="小结-10" tabindex="-1"><a class="header-anchor" href="#小结-10" aria-hidden="true">#</a> 小结</h3><p>暂无</p><h2 id="_14-案例-个人信息设置-信息渲染" tabindex="-1"><a class="header-anchor" href="#_14-案例-个人信息设置-信息渲染" aria-hidden="true">#</a> 14.案例_个人信息设置-信息渲染</h2><h3 id="目标-11" tabindex="-1"><a class="header-anchor" href="#目标-11" aria-hidden="true">#</a> 目标</h3><p>把外号对应的用户信息渲染到页面上</p><h3 id="讲解-11" tabindex="-1"><a class="header-anchor" href="#讲解-11" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：把外号对应的个人信息和头像，渲染到页面表单和头像标签上。</p><figure><img src="'+I+`" alt="image-20230404123708765" tabindex="0" loading="lazy"><figcaption>image-20230404123708765</figcaption></figure></li><li><p>注意：还是需要准备一个外号，因为想要查看自己对应的用户信息，不想被别人影响</p></li><li><p>步骤：</p><ul><li>获取数据</li><li>渲染数据到页面</li></ul></li><li><p>代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标1：信息渲染
 *  1.1 获取用户的数据
 *  1.2 回显数据到标签上
 * */</span>
<span class="token keyword">const</span> creator <span class="token operator">=</span> <span class="token string">&#39;播仔&#39;</span>
<span class="token comment">// 1.1 获取用户的数据</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/settings&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    creator
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> userObj <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data
  <span class="token comment">// 1.2 回显数据到标签上</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;avatar&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 赋予默认头像</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.prew&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> userObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 赋予默认性别</span>
      <span class="token comment">// 获取性别单选框：[男radio元素，女radio元素]</span>
      <span class="token keyword">const</span> gRadioList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.gender&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// 获取性别数字：0男，1女</span>
      <span class="token keyword">const</span> gNum <span class="token operator">=</span> userObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token comment">// 通过性别数字，作为下标，找到对应性别单选框，设置选中状态</span>
      gRadioList<span class="token punctuation">[</span>gNum<span class="token punctuation">]</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 赋予默认内容</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> userObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-11" tabindex="-1"><a class="header-anchor" href="#小结-11" aria-hidden="true">#</a> 小结</h3><ol><li><p>渲染数据和图书列表的渲染思路是否一样呢，是什么？</p><details><summary>答案</summary><ul><li>一样的，都是获取到数据，然后渲染到页面上</li></ul></details></li></ol><h2 id="_15-案例-个人信息设置-头像修改" tabindex="-1"><a class="header-anchor" href="#_15-案例-个人信息设置-头像修改" aria-hidden="true">#</a> 15.案例_个人信息设置-头像修改</h2><h3 id="目标-12" tabindex="-1"><a class="header-anchor" href="#目标-12" aria-hidden="true">#</a> 目标</h3><p>修改用户的头像并立刻生效</p><h3 id="讲解-12" tabindex="-1"><a class="header-anchor" href="#讲解-12" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：点击修改用户头像</p><figure><img src="`+E+'" alt="image-20230404124524401" tabindex="0" loading="lazy"><figcaption>image-20230404124524401</figcaption></figure></li><li><p>实现步骤如下：</p><ol><li><p>获取到用户选择的头像文件</p></li><li><p>调用头像修改接口，并除了头像文件外，还要在 FormData 表单数据对象中携带外号</p></li><li><p>提交到服务器保存此用户对应头像文件，并把返回的头像图片 url 网址设置在页面上</p><figure><img src="'+M+`" alt="image-20230404124540629" tabindex="0" loading="lazy"><figcaption>image-20230404124540629</figcaption></figure></li></ol></li><li><p>注意：重新刷新重新获取，已经是修改后的头像了（证明服务器那边确实保存成功）</p></li><li><p>核心代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标2：修改头像
 *  2.1 获取头像文件
 *  2.2 提交服务器并更新头像
 * */</span>
<span class="token comment">// 文件选择元素-&gt;change事件</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.upload&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 2.1 获取头像文件</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;avatar&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;creator&#39;</span><span class="token punctuation">,</span> creator<span class="token punctuation">)</span>
  <span class="token comment">// 2.2 提交服务器并更新头像</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/avatar&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> fd
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> imgUrl <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>avatar
    <span class="token comment">// 把新的头像回显到页面上</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.prew&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgUrl
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-12" tabindex="-1"><a class="header-anchor" href="#小结-12" aria-hidden="true">#</a> 小结</h3><ol><li><p>为什么这次上传头像，需要携带外号呢？</p><details><summary>答案</summary><ul><li>因为这次头像到后端，是要保存在某个用户名下的，所以要把外号名字一起携带过去</li></ul></details></li></ol><h2 id="_16-案例-个人信息设置-信息修改" tabindex="-1"><a class="header-anchor" href="#_16-案例-个人信息设置-信息修改" aria-hidden="true">#</a> 16.案例_个人信息设置-信息修改</h2><h3 id="目标-13" tabindex="-1"><a class="header-anchor" href="#目标-13" aria-hidden="true">#</a> 目标</h3><p>把用户修改的信息提交到服务器保存</p><h3 id="讲解-13" tabindex="-1"><a class="header-anchor" href="#讲解-13" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：点击提交按钮，收集个人信息，提交到服务器保存（无需重新获取刷新，因为页面已经是最新的数据了）</p><ol><li><p>收集表单数据</p></li><li><p>提交到服务器保存-调用用户信息更新接口（注意请求方法是 PUT）代表数据更新的意思</p><figure><img src="`+F+`" alt="image-20230404125310049" tabindex="0" loading="lazy"><figcaption>image-20230404125310049</figcaption></figure></li></ol></li><li><p>核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标3：提交表单
 *  3.1 收集表单信息
 *  3.2 提交到服务器保存
 */</span>
<span class="token comment">// 保存修改-&gt;点击</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3.1 收集表单信息</span>
  <span class="token keyword">const</span> userForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.user-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> userObj <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>userForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  userObj<span class="token punctuation">.</span>creator <span class="token operator">=</span> creator
  <span class="token comment">// 性别数字字符串，转成数字类型</span>
  userObj<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token operator">+</span>userObj<span class="token punctuation">.</span>gender
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span>
  <span class="token comment">// 3.2 提交到服务器保存</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/settings&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> userObj
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-13" tabindex="-1"><a class="header-anchor" href="#小结-13" aria-hidden="true">#</a> 小结</h3><ol><li><p>信息修改数据和以前增删改查哪个实现的思路比较接近呢？</p><details><summary>答案</summary><ul><li>编辑，首先回显已经做完了，然后收集用户最新改动后的数据，提交到服务器保存，因为页面最终就是用户刚写的数据，所以不用重新获取并刷新页面了</li></ul></details></li></ol><h2 id="_17-案例-个人信息设置-提示框" tabindex="-1"><a class="header-anchor" href="#_17-案例-个人信息设置-提示框" aria-hidden="true">#</a> 17.案例_个人信息设置-提示框</h2><h3 id="目标-14" tabindex="-1"><a class="header-anchor" href="#目标-14" aria-hidden="true">#</a> 目标</h3><p>把用户更新个人信息结果，用提示框反馈给用户</p><h3 id="讲解-14" tabindex="-1"><a class="header-anchor" href="#讲解-14" aria-hidden="true">#</a> 讲解</h3><ol><li><p>需求：使用 bootstrap 提示框，提示个人信息设置后的结果</p><figure><img src="`+A+`" alt="image-20230404125517679" tabindex="0" loading="lazy"><figcaption>image-20230404125517679</figcaption></figure></li><li><p>bootstrap 的 toast 提示框和 modal 弹框使用很像，语法如下：</p><ol><li><p>先准备对应的标签结构（模板里已有）</p></li><li><p>设置延迟自动消失的时间</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toast<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-bs-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  提示框内容
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用 JS 的方式，在 axios 请求响应成功时，展示结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建提示框对象</span>
<span class="token keyword">const</span> toastDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;css选择器&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> toast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Toast</span><span class="token punctuation">(</span>toastDom<span class="token punctuation">)</span>

<span class="token comment">// 显示提示框</span>
toast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>核心代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 目标3：提交表单
 *  3.1 收集表单信息
 *  3.2 提交到服务器保存
 */</span>
<span class="token doc-comment comment">/**
 * 目标4：结果提示
 *  4.1 创建toast对象
 *  4.2 调用show方法-&gt;显示提示框
 */</span>
<span class="token comment">// 保存修改-&gt;点击</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3.1 收集表单信息</span>
  <span class="token keyword">const</span> userForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.user-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> userObj <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>userForm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  userObj<span class="token punctuation">.</span>creator <span class="token operator">=</span> creator
  <span class="token comment">// 性别数字字符串，转成数字类型</span>
  userObj<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token operator">+</span>userObj<span class="token punctuation">.</span>gender
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span>
  <span class="token comment">// 3.2 提交到服务器保存</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://hmajax.itheima.net/api/settings&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> userObj
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 4.1 创建toast对象</span>
    <span class="token keyword">const</span> toastDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.my-toast&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> toast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Toast</span><span class="token punctuation">(</span>toastDom<span class="token punctuation">)</span>

    <span class="token comment">// 4.2 调用show方法-&gt;显示提示框</span>
    toast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="小结-14" tabindex="-1"><a class="header-anchor" href="#小结-14" aria-hidden="true">#</a> 小结</h3><ol><li><p>bootstrap 弹框什么时候用 JS 方式控制显示呢？</p><details><summary>答案</summary><ul><li>需要执行一些其他的 JS 逻辑后，再去显示/隐藏弹框时</li></ul></details></li></ol><h2 id="今日重点-必须会" tabindex="-1"><a class="header-anchor" href="#今日重点-必须会" aria-hidden="true">#</a> 今日重点(必须会)</h2><ol><li>掌握增删改查数据的思路</li><li>掌握图片上传的思路和流程</li><li>理解调用接口时，携带外号的作用</li><li>了解 bootstrap 弹框的使用</li></ol><h2 id="今日作业-必完成" tabindex="-1"><a class="header-anchor" href="#今日作业-必完成" aria-hidden="true">#</a> 今日作业(必完成)</h2><p>在配套作业文件夹的md内</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>`,118),C={href:"https://baike.baidu.com/item/%E8%A1%A8%E5%8D%95",target:"_blank",rel:"noopener noreferrer"},J={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Content_negotiation/List_of_default_Accept_values",target:"_blank",rel:"noopener noreferrer"},U={href:"https://www.runoob.com/tags/att-input-accept.html",target:"_blank",rel:"noopener noreferrer"},$={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData",target:"_blank",rel:"noopener noreferrer"},N={href:"https://v5.bootcss.com/docs/components/modal/#passing-options",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.axios-http.cn/docs/api_intro",target:"_blank",rel:"noopener noreferrer"};function Y(H,R){const s=e("ExternalLinkIcon");return o(),c("div",null,[T,n("ol",null,[n("li",null,[n("a",C,[a("表单概念->百度百科"),t(s)])]),n("li",null,[n("a",J,[a("accept属性->mdn"),t(s)])]),n("li",null,[n("a",U,[a("accept属性->菜鸟教程"),t(s)])]),n("li",null,[n("a",$,[a("FormData->mdn"),t(s)])]),n("li",null,[n("a",N,[a("BS的Model文档"),t(s)])]),n("li",null,[n("a",X,[a("axios请求方式别名"),t(s)])])])])}const W=p(P,[["render",Y],["__file","AJAX_02_综合案例.html.vue"]]);export{W as default};
