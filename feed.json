{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "FanFanの学习笔记",
  "home_page_url": "https://www.fanliu.top/",
  "feed_url": "https://www.fanliu.top/feed.json",
  "description": "fanfan",
  "items": [
    {
      "title": "Elasticsearch实现商品搜索",
      "url": "https://www.fanliu.top/Elasticsearch/ES_use01.html",
      "id": "https://www.fanliu.top/Elasticsearch/ES_use01.html",
      "summary": "1. Spring Data Elasticsearch Spring Data Elasticsearch是Spring提供的一种以Spring Data风格来操作数据存储的方式，它可以避免编写大量的样板代码。 1.1 常用注解 @Document @Id @Field 1.2 Sping Data方式的数据操作 (http://www.macroz...",
      "content_html": "<h1> Elasticsearch实现商品搜索</h1>\n<h2> 1. Spring Data Elasticsearch</h2>\n<p>Spring Data Elasticsearch是Spring提供的一种以Spring Data风格来操作数据存储的方式，它可以避免编写大量的样板代码。</p>\n<h3> 1.1 常用注解</h3>\n<h5> @Document</h5>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h5> @Id</h5>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h5> @Field</h5>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.2 <a href=\"http://www.macrozheng.com/#/architect/mall_arch_07?id=sping-data%E6%96%B9%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\" target=\"_blank\" rel=\"noopener noreferrer\">Sping Data方式的数据操作</a></h3>\n<h4> 1.2.1 继承ElasticsearchRepository接口可以获得常用的数据操作方法</h4>\n<p>按ctrl+F12 也可以显示所有方法</p>\n<figure><figcaption>image-20201020100112292</figcaption></figure>\n<h4> 1.2.2 衍生查询</h4>\n<p>在接口中直接指定查询方法名称便可查询，无需进行实现，如商品表中有商品名称、标题和关键字，直接定义以下查询，就可以对这三个字段进行全文搜索。</p>\n<figure><figcaption>image-20201020095859759</figcaption></figure>\n<h4> 1.2.3 使用@Query注解可以用Elasticsearch的DSL语句进行查询</h4>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 2. 项目前期准备</h2>\n<p>全文搜索，首先需要将数据库表导入到ElasticSearch,所以前期要把表和数据导入的准备好</p>\n<h3> 2.1 表说明</h3>\n<ul>\n<li><code>pms_product</code>：商品信息表</li>\n<li><code>pms_product_attribute</code>：商品属性参数表</li>\n<li><code>pms_product_attribute_value</code>：存储产品参数值的表</li>\n</ul>\n<h3> 2.2 执行SQL文件</h3>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.3 项目框架搭建</h3>\n<h4> 2.3.1 新建maven项目</h4>\n<p>不过多介绍</p>\n<h4> 2.3.2  添加pom依赖</h4>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.3.3 配置 application.yml</h4>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.3.4 添加MyBatis扫描类 MyBatisConfig</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.3.5 商品实体类</h4>\n<p>EsProduct.java</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>EsProductAttributeValue.java</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.3.5 搜索商品管理自定义Dao</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.3.6 在resource的dao包下添加EsProductDao.xml</h4>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 3. 整合Elasticsearch实现商品搜索</h2>\n<h3> 3.1 在pom中添加相关依赖</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这里的版本对应spring-parent的版本，因为elasticsearch 6.X 和elasticsearch7.x 版本差别还挺大的。</p>\n<ul>\n<li>2.1.3.RELEASE =》elasticsearch 6.X</li>\n<li>2.3.0.RELEASE =》elasticsearch 7.X</li>\n</ul>\n<p>这里以6.X为例</p>\n<h3> 3.2 修改SpringBoot配置文件</h3>\n<blockquote>\n<p>修改application.yml文件，在spring节点下添加Elasticsearch相关配置。</p>\n</blockquote>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>9200：浏览器直接访问测试的端口</li>\n<li>9300：java客户端连接的端口</li>\n</ul>\n<h3> 3.3 添加商品文档对象EsProduct</h3>\n<blockquote>\n<p>不需要中文分词的字段设置成@Field(type = FieldType.Keyword)类型，需要中文分词的设置成@Field(analyzer = \"ik_max_word\",type = FieldType.Text)类型。</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3.4 添加EsProductRepository接口用于操作Elasticsearch</h3>\n<blockquote>\n<p>继承ElasticsearchRepository接口，这样就拥有了一些基本的Elasticsearch数据操作方法，同时定义了一个衍生查询方法。</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3.5 添加EsProductService接口</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3.6 添加EsProductService接口的实现类EsProductServiceImpl</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3.7 添加EsProductController定义接口</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 4. 接口测试</h2>\n<h3> 4.1 导入所有数据库中商品到ES</h3>\n<p>访问： http://localhost:8010/esProduct/importAll</p>\n<figure><figcaption>image-20201020113456055</figcaption></figure>\n<h3> 4.2 简单搜索</h3>\n<p>访问：http://localhost:8010/esProduct/search/simple?keyword=手机</p>\n<figure><figcaption>image-20201020135915200</figcaption></figure>\n",
      "date_published": "2023-12-01T06:27:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "ES"
      ]
    },
    {
      "title": "JavaScript_01_基础",
      "url": "https://www.fanliu.top/JavaScript/JavaScript_01_%E5%9F%BA%E7%A1%80.html",
      "id": "https://www.fanliu.top/JavaScript/JavaScript_01_%E5%9F%BA%E7%A1%80.html",
      "summary": "了解变量、数据类型、运算符等基础概念，能够实现数据类型的转换，结合四则运算体会如何编程。 体会现实世界中的事物与计算机的关系; 理解什么是数据并知道数据的分类; 理解变量存储数据的“容器”; 掌握常见运算符的使用，了解优先级关系; 知道 JavaScript 数据类型隐式转换的特征; 介绍 掌握 JavaScript 的引入方式，初步认识 JavaSc...",
      "content_html": "<h1> JavaScript_01_基础</h1>\n<blockquote>\n<p>了解变量、数据类型、运算符等基础概念，能够实现数据类型的转换，结合四则运算体会如何编程。</p>\n</blockquote>\n<ul>\n<li>体会现实世界中的事物与计算机的关系</li>\n<li>理解什么是数据并知道数据的分类</li>\n<li>理解变量存储数据的“容器”</li>\n<li>掌握常见运算符的使用，了解优先级关系</li>\n<li>知道 JavaScript 数据类型隐式转换的特征</li>\n</ul>\n<h2> 介绍</h2>\n<blockquote>\n<p>掌握 JavaScript 的引入方式，初步认识 JavaScript 的作用</p>\n</blockquote>\n<h3> 引入方式</h3>\n<p>JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 <code>script</code> 标签将 JavaScript 代码引入到 HTML 中，有两种方式：</p>\n<h4> 内部方式</h4>\n<p>通过 <code>script</code> 标签包裹 JavaScript 代码</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 外部形式</h4>\n<p>一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 <code>script</code> 标签的 <code>src</code> 属性引入</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果 script 标签使用 src 属性引入了某 .js 文件，那么 标签的代码会被忽略！！！如下代码所示：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 注释和结束符</h3>\n<p>通过注释可以屏蔽代码被执行或者添加备注信息，JavaScript 支持两种形式注释语法：</p>\n<h4> 单行注释</h4>\n<p>使用 <code>// </code> 注释单行代码</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 多行注释</h4>\n<p>使用 <code>/* */</code> 注释多行代码</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>注：编辑器中单行注释的快捷键为 <code>ctrl + /</code></strong></p>\n<h3> 结束符</h3>\n<p>在 JavaScript 中 <code>;</code> 代表一段代码的结束，多数情况下可以省略 <code>;</code> 使用回车（enter）替代。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>实际开发中有许多人主张书写 JavaScript 代码时省略结束符 <code>;</code></p>\n<h3> 输入和输出</h3>\n<p>输出和输入也可理解为人和计算机的交互，用户通过键盘、鼠标等向计算机输入信息，计算机处理后再展示结果给用户，这便是一次输入和输出的过程。</p>\n<p>举例说明：如按键盘上的方向键，向上/下键可以滚动页面，按向上/下键这个动作叫作输入，页面发生了滚动了这便叫输出。</p>\n<h4> 输出</h4>\n<p>JavaScript 可以接收用户的输入，然后再将输入的结果输出：</p>\n<p><code>alert()</code>、<code>document.wirte()</code></p>\n<p>以数字为例，向 <code>alert()</code> 或 <code>document.write()</code>输入任意数字，他都会以弹窗形式展示（输出）给用户。</p>\n<h4> 输入</h4>\n<p>向 <code>prompt()</code> 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 变量</h2>\n<blockquote>\n<p>理解变量是计算机存储数据的“容器”，掌握变量的声明方式</p>\n</blockquote>\n<p>变量是计算机中用来存储数据的“容器”，它可以让计算机变得有记忆，通俗的理解变量就是使用【某个符号】来代表【某个具体的数值】（数据）</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 声明</h3>\n<p>声明(定义)变量有两部分构成：声明关键字、变量名（标识）</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>关键字是 JavaScript 中内置的一些英文词汇（单词或缩写），它们代表某些特定的含义，如 <code>let</code> 的含义是声明变量的，看到 <code>let</code>  后就可想到这行代码的意思是在声明变量，如 <code>let age;</code></p>\n<p><code>let</code> 和 <code>var</code> 都是 JavaScript 中的声明变量的关键字，推荐使用 <code>let</code> 声明变量！！！</p>\n<h3> 赋值</h3>\n<p>声明（定义）变量相当于创造了一个空的“容器”，通过赋值向这个容器中添加数据。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 关键字</h3>\n<p>JavaScript 使用专门的关键字 <code>let</code> 和 <code>var</code> 来声明（定义）变量，在使用时需要注意一些细节：</p>\n<p>以下是使用 <code>let</code> 时的注意事项：</p>\n<ol>\n<li>允许声明和赋值同时进行</li>\n<li>不允许重复声明</li>\n<li>允许同时声明多个变量并赋值</li>\n<li>JavaScript 中内置的一些关键字不能被当做变量名</li>\n</ol>\n<p>以下是使用 <code>var</code> 时的注意事项：</p>\n<ol start=\"2\">\n<li>允许声明和赋值同时进行</li>\n<li>允许重复声明</li>\n<li>允许同时声明多个变量并赋值</li>\n</ol>\n<p>大部分情况使用 <code>let</code> 和 <code>var</code> 区别不大，但是 <code>let</code> 相较 <code>var</code> 更严谨，因此推荐使用 <code>let</code>，后期会更进一步介绍二者间的区别。</p>\n<h3> 变量名命名规则</h3>\n<p>关于变量的名称（标识符）有一系列的规则需要遵守：</p>\n<ol>\n<li>只能是字母、数字、下划线、$，且不能能数字开头</li>\n<li>字母区分大小写，如 Age 和 age 是不同的变量</li>\n<li>JavaScript 内部已占用于单词（关键字或保留字）不允许使用</li>\n<li>尽量保证变量具有一定的语义，见字知义</li>\n</ol>\n<p>注：所谓关键字是指 JavaScript 内部使用的词语，如 <code>let</code> 和<code>var</code>，保留字是指 JavaScript 内部目前没有使用的词语，但是将来可能会使用词语。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 常量</h2>\n<p>概念：使用 const 声明的变量称为“常量”。</p>\n<p>使用场景：当某个变量永远不会改变的时候，就可以使用 const 来声明，而不是let。</p>\n<p>命名规范：和变量一致</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意： 常量不允许重新赋值,声明的时候必须赋值（初始化）</p>\n</blockquote>\n<h2> 数据类型</h2>\n<blockquote>\n<p>计算机世界中的万事成物都是数据。</p>\n</blockquote>\n<p>计算机程序可以处理大量的数据，为了方便数据的管理，将数据分成了不同的类型：</p>\n<p>注：通过 typeof 关键字检测数据类型</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 数值类型</h3>\n<p>即我们数学中学习到的数字，可以是整数、小数、正数、负数</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>JavaScript 中的数值类型与数学中的数字是一样的，分为正数、负数、小数等。</p>\n<h3> 字符串类型</h3>\n<p>通过单引号（ <code>''</code>） 、双引号（ <code>\"\"</code>）或反引号包裹的数据都叫字符串，单引号和双引号没有本质上的区别，推荐使用单引号。</p>\n<p>注意事项：</p>\n<ol>\n<li>无论单引号或是双引号必须成对使用</li>\n<li>单引号/双引号可以互相嵌套，但是不以自已嵌套自已</li>\n<li>必要时可以使用转义符 <code>\\</code>，输出单引号或双引号</li>\n</ol>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 布尔类型</h3>\n<p>表示肯定或否定时在计算机中对应的是布尔类型数据，它有两个固定的值 <code>true</code> 和 <code>false</code>，表示肯定的数据用 <code>true</code>，表示否定的数据用 <code>false</code>。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> undefined</h3>\n<p>未定义是比较特殊的类型，只有一个值 undefined，只声明变量，不赋值的情况下，变量的默认值为 undefined，一般很少【直接】为某个变量赋值为 undefined。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>注：JavaScript 中变量的值决定了变量的数据类型。</strong></p>\n<h2> 类型转换</h2>\n<blockquote>\n<p>理解弱类型语言的特征，掌握显式类型转换的方法</p>\n</blockquote>\n<p>在 JavaScript 中数据被分成了不同的类型，如数值、字符串、布尔值、undefined，在实际编程的过程中，不同数据类型之间存在着转换的关系。</p>\n<h3> 隐式转换</h3>\n<p>某些运算符被执行时，系统内部自动将数据类型进行转换，这种转换称为隐式转换。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注：数据类型的隐式转换是 JavaScript 的特征，后续学习中还会遇到，目前先需要理解什么是隐式转换。</p>\n<p>补充介绍模板字符串的拼接的使用</p>\n<h3> 显式转换</h3>\n<p>编写程序时过度依靠系统内部的隐式转换是不严禁的，因为隐式转换规律并不清晰，大多是靠经验总结的规律。为了避免因隐式转换带来的问题，通常根逻辑需要对数据进行显示转换。</p>\n<h4> Number</h4>\n<p>通过 <code>Number</code> 显示转换成数值类型，当转换失败时结果为 <code>NaN</code>（Not a Number）即不是一个数字。</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-06-27T02:20:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "JavaScript_02_流程控制",
      "url": "https://www.fanliu.top/JavaScript/JavaScript_02_%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html",
      "id": "https://www.fanliu.top/JavaScript/JavaScript_02_%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html",
      "summary": "理解什么是流程控制，知道条件控制的种类并掌握其对应的语法规则，具备利用循环编写简易ATM取款机程序能力 运算符; 语句; 综合案例; 运算符 算术运算符 数字是用来计算的，比如：乘法 * 、除法 / 、加法 + 、减法 - 等等，所以经常和算术运算符一起。 算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等 运算符 作用 ------ ...",
      "content_html": "<h1> JavaScript_02_流程控制</h1>\n<p>理解什么是流程控制，知道条件控制的种类并掌握其对应的语法规则，具备利用循环编写简易ATM取款机程序能力</p>\n<ul>\n<li>运算符</li>\n<li>语句</li>\n<li>综合案例</li>\n</ul>\n<h2> 运算符</h2>\n<h3> 算术运算符</h3>\n<p>数字是用来计算的，比如：乘法 * 、除法 / 、加法 + 、减法 - 等等，所以经常和算术运算符一起。</p>\n<p>算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>求和</td>\n</tr>\n<tr>\n<td>-</td>\n<td>求差</td>\n</tr>\n<tr>\n<td>*</td>\n<td>求积</td>\n</tr>\n<tr>\n<td>/</td>\n<td>求商</td>\n</tr>\n<tr>\n<td><strong>%</strong></td>\n<td>取模（取余数），开发中经常用于作为某个数字是否被整除</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：在计算失败时，显示的结果是 NaN （not a number）</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 赋值运算符</h3>\n<p>赋值运算符：对变量进行赋值的运算符</p>\n<p>=     将等号右边的值赋予给左边, 要求左边必须是一个容器</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+=</td>\n<td>加法赋值</td>\n</tr>\n<tr>\n<td>-+</td>\n<td>减法赋值</td>\n</tr>\n<tr>\n<td>*=</td>\n<td>乘法赋值</td>\n</tr>\n<tr>\n<td>/=</td>\n<td>除法赋值</td>\n</tr>\n<tr>\n<td>%=</td>\n<td>取余赋值</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 自增/自减运算符</h3>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>++</td>\n<td>自增</td>\n<td>变量自身的值加1，例如: x++</td>\n</tr>\n<tr>\n<td>--</td>\n<td>自减</td>\n<td>变量自身的值减1，例如: x--</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>++在前和++在后在单独使用时二者并没有差别，而且一般开发中我们都是独立使用</li>\n<li>++在后（后缀式）我们会使用更多</li>\n</ol>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li>只有变量能够使用自增和自减运算符</li>\n<li>++、-- 可以在变量前面也可以在变量后面，比如: x++  或者  ++x</li>\n</ol>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 比较运算符</h3>\n<p>使用场景：比较两个数据大小、是否相等，根据比较结果返回一个布尔值（true / false）</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&gt;</td>\n<td>左边是否大于右边</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>左边是否小于右边</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>左边是否大于或等于右边</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>左边是否小于或等于右边</td>\n</tr>\n<tr>\n<td>===</td>\n<td>左右两边是否<code>类型</code>和<code>值</code>都相等（重点）</td>\n</tr>\n<tr>\n<td>==</td>\n<td>左右两边<code>值</code>是否相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>左右值不相等</td>\n</tr>\n<tr>\n<td>!==</td>\n<td>左右两边是否不全等</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 逻辑运算符</h3>\n<p>使用场景：可以把多个布尔值放到一起运算，最终返回一个布尔值</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>名称</th>\n<th>日常读法</th>\n<th>特点</th>\n<th>口诀</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;&amp;</td>\n<td>逻辑与</td>\n<td>并且</td>\n<td>符号两边有一个假的结果为假</td>\n<td>一假则假</td>\n</tr>\n<tr>\n<td>||</td>\n<td>逻辑或</td>\n<td>或者</td>\n<td>符号两边有一个真的结果为真</td>\n<td>一真则真</td>\n</tr>\n<tr>\n<td>!</td>\n<td>逻辑非</td>\n<td>取反</td>\n<td>true变false  false变true</td>\n<td>真变假，假变真</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>A &amp;&amp; B</th>\n<th>A || B</th>\n<th>!A</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n<td>true</td>\n<td>true</td>\n</tr>\n<tr>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>true</td>\n<td>true</td>\n<td>true</td>\n<td>true</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 运算符优先级</h3>\n<blockquote>\n<p>逻辑运算符优先级： ！&gt; &amp;&amp; &gt;  ||</p>\n</blockquote>\n<h2> 语句</h2>\n<h3> 表达式和语句</h3>\n<figure><figcaption>67101792498</figcaption></figure>\n<h3> 分支语句</h3>\n<p>分支语句可以根据条件判定真假，来选择性的执行想要的代码</p>\n<p>分支语句包含：</p>\n<ol>\n<li>if分支语句（重点）</li>\n<li>三元运算符</li>\n<li>switch语句</li>\n</ol>\n<h4> if 分支语句</h4>\n<p>语法：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>小括号内的条件结果是布尔值，为 true 时，进入大括号里执行代码；为false，则不执行大括号里面代码</p>\n<p>小括号内的结果若不是布尔类型时，会发生类型转换为布尔值，类似Boolean()</p>\n<p>如果大括号只有一个语句，大括号可以省略，但是，俺们不提倡这么做~</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> if双分支语句</h4>\n<p>如果有两个条件的时候，可以使用 if else 双分支语句</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>例如：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> if 多分支语句</h4>\n<p>使用场景： 适合于有多个条件的时候</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 三元运算符（三元表达式）</h4>\n<p><strong>使用场景</strong>： 一些简单的双分支，可以使用  三元运算符（三元表达式），写起来比 if  else双分支 更简单</p>\n<p><strong>符号</strong>：? 与 : 配合使用</p>\n<p>语法：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> switch语句（了解）</h4>\n<p>使用场景： 适合于有多个条件的时候，也属于分支语句，大部分情况下和 if多分支语句 功能相同</p>\n<p>注意：</p>\n<ol>\n<li>switch case语句一般用于等值判断, if适合于区间判断</li>\n<li>switchcase一般需要配合break关键字使用 没有break会造成case穿透</li>\n<li>if 多分支语句开发要比switch更重要，使用也更多</li>\n</ol>\n<p>例如：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 断点调试</h4>\n<p>**作用：**学习时可以帮助更好的理解代码运行，工作时可以更快找到bug</p>\n<p>浏览器打开调试界面</p>\n<ol>\n<li>按F12打开开发者工具</li>\n<li>点到源代码一栏 （ sources ）</li>\n<li>选择代码文件</li>\n</ol>\n<p>**断点：**在某句代码上加的标记就叫断点，当程序执行到这句有标记的代码时会暂停下来</p>\n<h3> 循环语句</h3>\n<p>使用场景：重复执行 指定的一段代码，比如我们想要输出10次 '我学的很棒'</p>\n<p>学习路径：</p>\n<p>1.while循环</p>\n<p>2.for 循环（重点）</p>\n<h4> while循环</h4>\n<p>while :  在…. 期间， 所以 while循环 就是在满足条件期间，重复执行某些代码。</p>\n<p><strong>语法：</strong></p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>例如：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>循环三要素：</p>\n<p>1.初始值 （经常用变量）</p>\n<p>2.终止条件</p>\n<p>3.变量的变化量</p>\n<p>例如：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 中止循环</h4>\n<p><code>break</code>   中止整个循环，一般用于结果已经得到, 后续的循环不需要的时候可以使用（提高效率）</p>\n<p><code>continue</code>  中止本次循环，一般用于排除或者跳过某一个选项的时候</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 无限循环</h4>\n<p>1.while(true) 来构造“无限”循环，需要使用break退出循环。（常用）</p>\n<p>2.for(;😉 也可以来构造“无限”循环，同样需要使用break退出循环。</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 综合案例-ATM存取款机</h2>\n<figure><figcaption>67101878155</figcaption></figure>\n<p>分析：</p>\n<p>①：提示输入框写到循环里面（无限循环）</p>\n<p>②：用户输入4则退出循环 break</p>\n<p>③：提前准备一个金额预先存储一个数额 money</p>\n<p>④：根据输入不同的值，做不同的操作</p>\n<p>​     (1)  取钱则是减法操作， 存钱则是加法操作，查看余额则是直接显示金额</p>\n<p>​     (2) 可以使用 if else if 多分支 来执行不同的操作</p>\n<p>完整代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-06-27T02:30:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "01_Ajax入门",
      "url": "https://www.fanliu.top/ajax/AJAX_01_%E5%85%A5%E9%97%A8.html",
      "id": "https://www.fanliu.top/ajax/AJAX_01_%E5%85%A5%E9%97%A8.html",
      "summary": "知识点自测 1. 如下对象取值的方式哪个正确? A: obj.a B: obj()a 答案 A选项正确 2. 哪个赋值会让浏览器解析成标签显示? A: ul.innerText = str B: ul.innerHTML = str 答案 选择B, innerText会把字符串当做普通文本现在在ul标签之间, innerHTML会试着把字符串解析成标签...",
      "content_html": "<h1> 01_Ajax入门</h1>\n<h2> 知识点自测</h2>\n<ol>\n<li>\n<p>如下对象取值的方式哪个正确?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A: obj.a</p>\n<p>B: obj()a</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>A选项正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个赋值会让浏览器解析成标签显示?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A: ul.innerText = str</p>\n<p>B: ul.innerHTML = str</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选择B, innerText会把字符串当做普通文本现在在ul标签之间, innerHTML会试着把字符串解析成标签, 如果是普通文本则显示普通文本字符串</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个是获取输入框值的方式?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A: theInput.innerHTML</p>\n<p>B: theInput.value</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是B, 表单标签设置或获取值用value属性, 其他标签用innerHTML/innerText, 进行设置/获取</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个是用于获取标签内容?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A: theP.innerHTML = '内容'</p>\n<p>B: theP.innerHTML</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是B, 单独出现是获取值在原地, 如果看到=这个符号, 是把右侧的值赋予给左侧的属性, 影响标签展示效果</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个是数组的映射方法？</p>\n<p>A: arr.forEach</p>\n<p>B: arr.map</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是B</li>\n</ul>\n</details>\n</li>\n<li>\n<p>数组转字符串并指定拼接符的是哪个?</p>\n<p>A: arr.join()</p>\n<p>B: arr.split()</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>函数传参的方式哪个是正确的？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A：showAlert('消息', '类名')</p>\n<p>B：showAlert()</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下哪套代码可以实现对象属性的简写？</p>\n<p>A：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>B：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><details>\n<summary>答案</summary>\n<ul>\n<li>答案是A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下代码的值是多少？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A：‘成年了’</p>\n<p>B：‘未成年’</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是B</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下哪个方法可以添加一个额外类名？</p>\n<p>A：标签对象.classList.add()</p>\n<p>B：标签对象.classList.contains()</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>答案是A</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 目录</h2>\n<ul>\n<li>AJAX 概念和 axios 使用</li>\n<li>认识 URL</li>\n<li>URL 查询参数</li>\n<li>常用请求方法和数据提交</li>\n<li>HTTP协议-报文</li>\n<li>接口文档</li>\n<li>案例 - 用户登录</li>\n<li>form-serialize 插件</li>\n</ul>\n<h2> 学习目标</h2>\n<ol>\n<li>掌握 axios 相关参数，从服务器获取并解析展示数据</li>\n<li>掌握接口文档的查看和使用</li>\n<li>掌握在浏览器的 network 面板中查看请求和响应的内容</li>\n<li>了解请求和响应报文的组成部分</li>\n</ol>\n<h2> 01.AJAX 概念和 axios 使用</h2>\n<h3> 目标</h3>\n<p>了解 AJAX 概念并掌握 axios 库基本使用</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是 AJAX ? <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started\" target=\"_blank\" rel=\"noopener noreferrer\">mdn</a></p>\n<ul>\n<li>\n<p>使用浏览器的 XMLHttpRequest 对象 与服务器通信</p>\n</li>\n<li>\n<p>浏览器网页中，使用 AJAX技术（XHR对象）发起获取省份列表数据的请求，服务器代码响应准备好的省份列表数据给前端，前端拿到数据数组以后，展示到网页</p>\n<figure><figcaption>image-20230403173156484</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>什么是服务器？</p>\n<ul>\n<li>可以暂时理解为提供数据的一台电脑</li>\n</ul>\n</li>\n<li>\n<p>为何学 AJAX ?</p>\n<ul>\n<li>以前我们的数据都是写在代码里固定的, 无法随时变化</li>\n<li>现在我们的数据可以从服务器上进行获取，让数据变活</li>\n</ul>\n</li>\n<li>\n<p>怎么学 AJAX ?</p>\n<ul>\n<li>这里使用一个第三方库叫 axios, 后续在学习 XMLHttpRequest 对象了解 AJAX 底层原理</li>\n<li>因为 axios 库语法简单，让我们有更多精力关注在与服务器通信上，而且后续 Vue，React 学习中，也使用 axios 库与服务器通信</li>\n</ul>\n</li>\n<li>\n<p>需求：从服务器获取省份列表数据，展示到页面上（体验 axios 语法的使用）</p>\n<blockquote>\n<p>获取省份列表数据 - 目标资源地址：http://hmajax.itheima.net/api/province</p>\n</blockquote>\n<ul>\n<li>\n<p>完成效果：</p>\n<figure><figcaption>image-20230220113157010</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>接下来讲解 axios 语法，步骤：</p>\n</li>\n<li>\n<p>引入 axios.js 文件到自己的网页中</p>\n<blockquote>\n<p>axios.js文件链接: https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js</p>\n</blockquote>\n</li>\n<li>\n<p>明确axios函数的使用语法</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意：请求的 url 地址, 就是标记资源的网址</p>\n<p>注意：then 方法这里先体验使用，由来后续会讲到</p>\n</blockquote>\n</li>\n<li>\n<p>对应代码</p>\n</li>\n</ol>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 小结</h3>\n<ol>\n<li>\n<p>AJAX 有什么用？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>浏览器和服务器之间通信，动态数据交互</li>\n</ul>\n</details>\n</li>\n<li>\n<p>AJAX 如何学：</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>先掌握 axios 库使用，再了解 XMLHttpRequest 原理</li>\n</ul>\n</details>\n</li>\n<li>\n<p>这一节 axios 体验步骤（语法）？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>引入 axios 库，使用 axios 相关语法</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 02.认识 URL</h2>\n<h3> 目标</h3>\n<p>了解 URL 的组成和作用</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>为什么要认识 URL ? <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started\" target=\"_blank\" rel=\"noopener noreferrer\">mdn</a></p>\n<ul>\n<li>虽然是后端给我的一个地址，但是哪部分标记的是服务器电脑，哪部分标记的是资源呢？所以为了和服务器有效沟通我们要认识一下</li>\n</ul>\n</li>\n<li>\n<p>什么是 URL ？</p>\n<ul>\n<li>\n<p>统一资源定位符，简称网址，用于定位网络中的资源（资源指的是：网页，图片，数据，视频，音频等等）</p>\n<figure><figcaption>image-20230403185206384</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>URL 的组成?</p>\n<ul>\n<li>\n<p>协议，域名，资源路径（URL 组成有很多部分，我们先掌握这3个重要的部分即可）</p>\n<figure><figcaption>image-20230403185305934</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>什么是 http 协议 ?</p>\n<ul>\n<li>\n<p>叫超文本传输协议，规定了浏览器和服务器传递数据的格式（而格式具体有哪些稍后我们就会学到）</p>\n<figure><figcaption>image-20230403185356997</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>什么是域名 ?</p>\n<ul>\n<li>\n<p>标记服务器在互联网当中的方位，网络中有很多服务器，你想访问哪一台，就需要知道它的域名才可以</p>\n<figure><figcaption>image-20230403185406674</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>什么是资源路径 ?</p>\n<ul>\n<li>\n<p>一个服务器内有多个资源，用于标识你要访问的资源具体的位置</p>\n<figure><figcaption>image-20230403185428276</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>接下来做个需求，访问新闻列表的 URL 网址，打印新闻数据</p>\n<ul>\n<li>效果图如下：</li>\n</ul>\n<figure><figcaption>image-20230220122455915</figcaption></figure>\n<blockquote>\n<p>新闻列表数据 URL 网址：http://hmajax.itheima.net/api/news</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>url解释：从黑马服务器使用http协议，访问/api/news路径下的新闻列表资源</p>\n</blockquote>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>URL 是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>统一资源定位符，网址，用于访问服务器上资源\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>请解释这个 URL，每个部分作用？</p>\n<p>http://hmajax.itheima.net/api/news</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>协议://域名/资源路径\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 03.URL 查询参数</h2>\n<h3> 目标</h3>\n<p>掌握-通过URL传递查询参数，获取匹配的数据</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是查询参数 ?</p>\n<ul>\n<li>\n<p>携带给服务器额外信息，让服务器返回我想要的某一部分数据而不是全部数据</p>\n</li>\n<li>\n<p>举例：查询河北省下属的城市列表，需要先把河北省传递给服务器</p>\n<figure><figcaption>image-20230404101257205</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>查询参数的语法 ？</p>\n<ul>\n<li>在 url 网址后面用?拼接格式：http://xxxx.com/xxx/xxx?参数名1=值1&amp;参数名2=值2</li>\n<li>参数名一般是后端规定的，值前端看情况传递即可</li>\n</ul>\n</li>\n<li>\n<p>axios 如何携带查询参数?</p>\n<ul>\n<li>\n<p>使用 params 选项即可</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>查询城市列表的 url地址：<a href=\"http://hmajax.itheima.net/api/city?pname=%E6%B2%B3%E5%8C%97%E7%9C%81\" target=\"_blank\" rel=\"noopener noreferrer\">http://hmajax.itheima.net/api/city</a></p>\n<p>参数名：pname （值要携带省份名字）</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>需求：获取“河北省”下属的城市列表，展示到页面，对应代码：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>URL 查询参数有什么用？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>浏览器提供给服务器额外信息，获取对应的数据\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>axios 要如何携带查询参数？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>使用 params 选项，携带参数名和值在对象结构中\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 04.案例-查询-地区列表</h2>\n<h3> 目标</h3>\n<p>巩固查询参数的使用，并查看多对查询参数如何传递</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：根据输入的省份名字和城市名字，查询下属地区列表</p>\n<ul>\n<li>\n<p>完成效果如下：</p>\n<figure><figcaption>image-20230220125428695</figcaption></figure>\n</li>\n<li>\n<p>相关参数</p>\n<blockquote>\n<p>查询地区: http://hmajax.itheima.net/api/area</p>\n<p>参数名：</p>\n<p>pname：省份名字</p>\n<p>cname：城市名字</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>正确代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>ES6 对象属性和值简写的前提是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>当属性名和value位置变量名同名即可简写\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 05.常用请求方法和数据提交</h2>\n<h3> 目标</h3>\n<p>掌握如何向服务器提交数据，而不单单是获取数据</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>想要提交数据，先来了解什么是请求方法</p>\n<ul>\n<li>\n<p>请求方法是一些固定单词的英文，例如：GET，POST，PUT，DELETE，PATCH（这些都是http协议规定的），每个单词对应一种对服务器资源要执行的操作</p>\n<figure><figcaption>image-20230220130833363</figcaption></figure>\n<figure><figcaption>image-20230404104319428</figcaption></figure>\n</li>\n<li>\n<p>前面我们获取数据其实用的就是GET请求方法，但是axios内部设置了默认请求方法就是GET，我们就没有写</p>\n</li>\n<li>\n<p>但是提交数据需要使用POST请求方法</p>\n</li>\n</ul>\n</li>\n<li>\n<p>什么时候进行数据提交呢？</p>\n<ul>\n<li>\n<p>例如：多端要查看同一份订单数据，或者使用同一个账号进行登录，那订单/用户名+密码，就需要保存在服务器上，随时随地进行访问</p>\n<figure><figcaption>image-20230404104328384</figcaption></figure>\n<figure><figcaption>image-20230404104333584</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>axios 如何提交数据到服务器呢？</p>\n<ul>\n<li>\n<p>需要学习，method 和 data 这2个新的选项了（大家不用担心，这2个学完，axios常用的选项就都学完了）</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p>需求：注册账号，提交用户名和密码到服务器保存</p>\n<blockquote>\n<p>注册用户 URL 网址：http://hmajax.itheima.net/api/register</p>\n<p>请求方法：POST</p>\n<p>参数名：</p>\n<p>username：用户名（要求中英文和数字组成，最少8位）</p>\n<p>password：密码（最少6位）</p>\n</blockquote>\n<figure><figcaption>image-20230404104350387</figcaption></figure>\n</li>\n<li>\n<p>正确代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>请求方法最常用的是哪2个，分别有什么作用？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>POST 提交数据，GET 查询数据\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>axios 的核心配置项？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>url：目标资源地址，method：请求方法，params：查询参数，data：提交的数据\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 06.axios 错误处理</h2>\n<h3> 目标</h3>\n<p>掌握接收 axios 响应错误信息的处理语法</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>如果注册相同的用户名，则会遇到注册失败的请求，也就是 axios 请求响应失败了，你会在控制台看到如图的错误：</p>\n<figure><figcaption>image-20230220131753051</figcaption></figure>\n</li>\n<li>\n<p>在 axios 语法中要如何处理呢？</p>\n<ul>\n<li>因为，普通用户不会去控制台里看错误信息，我们要编写代码拿到错误并展示给用户在页面上</li>\n</ul>\n</li>\n<li>\n<p>使用 axios 的 catch 方法，捕获这次请求响应的错误并做后续处理，语法如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>需求：再次重复注册相同用户名，提示用户注册失败的原因</p>\n<figure><figcaption>image-20230404104440224</figcaption></figure>\n<figure><figcaption>image-20230404104447501</figcaption></figure>\n</li>\n<li>\n<p>对应代码</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>axios 如何拿到请求响应失败的信息？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>通过 axios 函数调用后，在后面接着调用 .catch 方法捕获\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 07.HTTP 协议-请求报文</h2>\n<h3> 目标</h3>\n<p>了解 HTTP 协议中，请求报文的组成和作用</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>首先，HTTP 协议规定了浏览器和服务器返回内容的<span style=\"color: red;\">格式</span></p>\n</li>\n<li>\n<p>请求报文：是浏览器按照协议规定发送给服务器的内容，例如刚刚注册用户时，发起的请求报文：</p>\n<figure><figcaption>image-20230404104508764</figcaption></figure>\n<figure><figcaption>image-20230220132229960</figcaption></figure>\n</li>\n<li>\n<p>这里的格式包含：</p>\n<ul>\n<li>请求行：请求方法，URL，协议</li>\n<li>请求头：以键值对的格式携带的附加信息，比如：Content-Type（指定了本次传递的内容类型）</li>\n<li>空行：分割请求头，空行之后的是发送给服务器的资源</li>\n<li>请求体：发送的资源</li>\n</ul>\n</li>\n<li>\n<p>我们切换到浏览器中，来看看刚才注册用户发送的这个请求报文以及内容去哪里查看呢</p>\n</li>\n<li>\n<p>代码：直接在上个代码基础上复制，然后运行查看请求报文对应关系即可</p>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>浏览器发送给服务器的内容叫做，请求报文</p>\n</li>\n<li>\n<p>请求报文的组成是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>请求行，请求头，空行，请求体\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>通过 Chrome 的网络面板如何查看请求体？</p>\n<figure><figcaption>image-20230220132617016</figcaption></figure>\n</li>\n</ol>\n<h2> 08.请求报文-错误排查</h2>\n<h3> 目标</h3>\n<p>了解学习了查看请求报文之后的作用，可以用来辅助错误排查</p>\n<h3> 讲解</h3>\n<ol>\n<li>学习了查看请求报文有什么用呢？\n<ul>\n<li>可以用来确认我们代码发送的请求数据是否真的正确</li>\n</ul>\n</li>\n<li>配套模板代码里，对应 08 标题文件夹里是我同桌的代码，它把登录也写完了，但是无法登录，我们来到模板代码中，找到运行后，在<span style=\"color: red;\">不逐行查看代码的情况下</span>，查看请求报文，看看它登录提交的相关信息对不对，帮他找找问题出现的原因</li>\n<li>发现请求体数据有问题，往代码中定位，找到类名写错误了</li>\n<li>代码：在配套文件夹素材里，找到需要对应代码，直接运行，根据报错信息，找到错误原因</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>学会了查看请求报文，对实际开发有什么帮助呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>可以快速确认我们发送的内容是否正确\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 09.HTTP 协议-响应报文</h2>\n<h3> 目标</h3>\n<p>了解响应报文的组成</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>响应报文：是服务器按照协议固定的格式，返回给浏览器的内容</p>\n<figure><figcaption>image-20230404104556531</figcaption></figure>\n<figure><figcaption>image-20230220133141151</figcaption></figure>\n</li>\n<li>\n<p>响应报文的组成：</p>\n<ul>\n<li>响应行（状态行）：协议，HTTP响应状态码，状态信息</li>\n<li>响应头：以键值对的格式携带的附加信息，比如：Content-Type（告诉浏览器，本次返回的内容类型）</li>\n<li>空行：分割响应头，控制之后的是服务器返回的资源</li>\n<li>响应体：返回的资源</li>\n</ul>\n</li>\n<li>\n<p>HTTP 响应状态码：</p>\n<ul>\n<li>\n<p>用来表明请求是否成功完成</p>\n</li>\n<li>\n<p>例如：404（客户端要找的资源，在服务器上不存在）</p>\n<figure><figcaption>image-20230220133344116</figcaption></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>响应报文的组成？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>响应行，响应头，空行，响应体\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>HTTP 响应状态码是做什么的？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>表明请求是否成功完成，2xx都是成功的\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 10.接口文档</h2>\n<h3> 目标</h3>\n<p>掌握接口文档的使用，配合 axios 与服务器进行数据交互</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>接口文档：描述接口的文章（一般是后端工程师，编写和提供）</p>\n</li>\n<li>\n<p>接口：指的使用 AJAX 和 服务器通讯时，使用的 URL，请求方法，以及参数，例如：<a href=\"https://apifox.com/apidoc/shared-1b0dd84f-faa8-435d-b355-5a8a329e34a8\" target=\"_blank\" rel=\"noopener noreferrer\">AJAX阶段接口文档</a></p>\n</li>\n<li>\n<p>例如：获取城市列表接口样子</p>\n<figure><figcaption>image-20230404104720587</figcaption></figure>\n</li>\n<li>\n<p>需求：打开 AJAX 阶段接口文档，查看登录接口，并编写代码，完成一次登录的效果吧</p>\n</li>\n<li>\n<p>代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>接口文档是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>由后端提供的描述接口的文章\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>接口文档里包含什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>请求的 URL 网址，请求方法，请求参数和说明\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 11.案例-用户登录-主要业务</h2>\n<h3> 目标</h3>\n<p>尝试通过页面获取用户名和密码，进行登录</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>先来到备课代码中，运行完成的页面，查看要完成的登录效果（登录成功和失败）</p>\n</li>\n<li>\n<p>需求：编写代码，查看接口文档，填写相关信息，完成登录业务</p>\n</li>\n<li>\n<p>分析实现的步骤</p>\n<ol>\n<li>\n<p>点击登录，获取并判断用户名和长度</p>\n</li>\n<li>\n<p>提交数据和服务器通信</p>\n</li>\n<li>\n<p>提示信息，反馈给用户（这节课先来完成前 2 个步骤）</p>\n<figure><figcaption>image-20230404104851497</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>总结下用户登录案例的思路？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>1. 登录按钮-绑定点击事件\n2. 从页面输入框里，获取用户名和密码\n3. 判断长度是否符合要求\n4. 基于 axios 提交用户名和密码\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 12.案例-用户登录-提示信息</h2>\n<h3> 目标</h3>\n<p>根据准备好的提示标签和样式，给用户反馈提示</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：使用提前准备好的提示框，来把登录成功/失败结果提示给用户</p>\n<figure><figcaption>image-20230404104955330</figcaption></figure>\n<figure><figcaption>image-20230404105003019</figcaption></figure>\n</li>\n<li>\n<p>使用提示框，反馈提示消息，因为有4处地方需要提示框，所以封装成函数</p>\n<ol>\n<li>\n<p>获取提示框</p>\n</li>\n<li>\n<p>封装提示框函数，重复调用，满足提示需求</p>\n<p>功能：</p>\n<ol>\n<li>显示提示框</li>\n<li>不同提示文字msg，和成功绿色失败红色isSuccess参数（true成功，false失败）</li>\n<li>过2秒后，让提示框自动消失</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>对应提示框核心代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>我们什么时候需要封装函数？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>遇到相同逻辑，重复代码要复用的时候\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>如何封装一个函数呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>先明确要完成的需求，以及需要的参数，再来实现其中的细节，然后在需要的地方调用\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>我们的提示框是如何控制出现/隐藏的？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>添加或移除显示的类名即可\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 13.form-serialize 插件</h2>\n<h3> 目标</h3>\n<p>使用 form-serialize 插件，快速收集目标表单范围内表单元素的值</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>我们前面收集表单元素的值，是一个个标签获取的</p>\n<figure><figcaption>image-20230404105134538</figcaption></figure>\n</li>\n<li>\n<p>如果一套表单里有很多很多表单元素，如何一次性快速收集出来呢？</p>\n<figure><figcaption>image-20230404105141226</figcaption></figure>\n</li>\n<li>\n<p>使用 form-serialize 插件提供的 serialize 函数就可以办到</p>\n</li>\n<li>\n<p>form-serialize 插件语法：</p>\n<ol>\n<li>\n<p>引入 form-serialize 插件到自己网页中</p>\n</li>\n<li>\n<p>使用 serialize 函数</p>\n<ul>\n<li>\n<p>参数1：要获取的 form 表单标签对象（要求表单元素需要有 name 属性-用来作为收集的数据中属性名）</p>\n</li>\n<li>\n<p>参数2：配置对象</p>\n<ul>\n<li>hash：\n<ul>\n<li>true - 收集出来的是一个 JS 对象结构</li>\n<li>false - 收集出来的是一个查询字符串格式</li>\n</ul>\n</li>\n<li>empty：\n<ul>\n<li>true - 收集空值</li>\n<li>false - 不收集空值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>需求：收集登录表单里用户名和密码</p>\n</li>\n<li>\n<p>对应代码：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>我们什么时候使用 form-serialize 插件？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>快速收集表单元素的值</li>\n</ul>\n</details>\n</li>\n<li>\n<p>如何使用 form-serialize 插件？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>1. 先引入插件到自己的网页中，2. 准备form和表单元素的name属性，3.使用serialize函数，传入form表单和配置对象\n</li>\n</ul>\n</details>\n</li>\n<li>\n<p>配置对象中 hash 和 empty 有什么用？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>hash 决定是收集为 JS 对象还是查询参数字符串，empty 决定是否收集空值\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 14.案例-用户登录-form-serialize</h2>\n<h3> 目标</h3>\n<p>尝试通过 form-serialize 重新修改用户登录案例-收集用户名和密码</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>基于模板代码，使用 form-serialize 插件来收集用户名和密码</p>\n</li>\n<li>\n<p>在原来的代码基础上修改即可</p>\n<ol>\n<li>\n<p>先引入插件</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>然后修改代码</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>如何把一个第三方插件使用在已完成的案例中？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>引入后，只需要使用在要修改的地方，修改一点就要确认测试一下\n</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 重点</h2>\n<ol>\n<li>axios 的配置项有哪几个，作用分别是什么？</li>\n<li>接口文档都包含哪些信息？</li>\n<li>在浏览器中如何查看查询参数/请求体，以及响应体数据？</li>\n<li>请求报文和响应报文由几个部分组成，每个部分的作用？</li>\n</ol>\n<h2> 参考文献</h2>\n<ol>\n<li><a href=\"https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF/101081?fr=aladdin\" target=\"_blank\" rel=\"noopener noreferrer\">客户端-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911?fr=aladdin\" target=\"_blank\" rel=\"noopener noreferrer\">浏览器解释-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571?fr=aladdin\" target=\"_blank\" rel=\"noopener noreferrer\">服务器解释-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%B3%BB%E7%BB%9F/5937042?fromtitle=URL&amp;fromid=110640&amp;fr=aladdin\" target=\"_blank\" rel=\"noopener noreferrer\">url解释-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/HTTP?fromtitle=HTTP%E5%8D%8F%E8%AE%AE&amp;fromid=1276942\" target=\"_blank\" rel=\"noopener noreferrer\">http协议-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%90%8D\" target=\"_blank\" rel=\"noopener noreferrer\">主机名-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%25B\" target=\"_blank\" rel=\"noopener noreferrer\">端口号-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/tashuo/browse/content?id=11fca6ecdc2c066af4c5594f&amp;lemmaId=8425&amp;fromLemmaModule=pcBottom&amp;lemmaTitle=ajax\" target=\"_blank\" rel=\"noopener noreferrer\">Ajax解释-&gt;百度-懂啦</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started\" target=\"_blank\" rel=\"noopener noreferrer\">Ajax解释-&gt;MDN解释Ajax是与服务器通信而不只是请求</a></li>\n<li><a href=\"https://baike.baidu.com/item/axios\" target=\"_blank\" rel=\"noopener noreferrer\">axios-&gt;百度(可以点击播报听读音)</a></li>\n<li><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener noreferrer\">axios(github)地址</a></li>\n<li><a href=\"https://axios-http.com/\" target=\"_blank\" rel=\"noopener noreferrer\">axios官方推荐官网</a></li>\n<li><a href=\"https://www.npmjs.com/package/axios\" target=\"_blank\" rel=\"noopener noreferrer\">axios(npmjs)地址</a></li>\n<li><a href=\"https://baike.baidu.com/item/post/2171305\" target=\"_blank\" rel=\"noopener noreferrer\">GET和POST区别-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E6%8A%A5%E6%96%87/3164352\" target=\"_blank\" rel=\"noopener noreferrer\">报文讲解-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/5053660\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP状态码-&gt;百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3/2886384\" target=\"_blank\" rel=\"noopener noreferrer\">接口概念-&gt;百度百科</a></li>\n</ol>\n",
      "date_published": "2023-11-14T01:40:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "前端",
        "AJAX"
      ]
    },
    {
      "title": "02_AJAX综合案例",
      "url": "https://www.fanliu.top/ajax/AJAX_02_%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html",
      "id": "https://www.fanliu.top/ajax/AJAX_02_%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html",
      "summary": "知识点自测 1. 以下代码运行结果是什么？（考察扩展运算符的使用） A：报错 B：18 答案 B正确 2. 什么是事件委托？ A：只能把单击事件委托给父元素绑定 B：可以把能冒泡的事件，委托给已存在的向上的任意标签元素绑定 答案 B正确 3. 事件对象e.target作用是什么? A：获取到这次触发事件相关的信息 B：获取到这次触发事件目标标签元素 答...",
      "content_html": "<h1> 02_AJAX综合案例</h1>\n<h2> 知识点自测</h2>\n<ol>\n<li>\n<p>以下代码运行结果是什么？（考察扩展运算符的使用）</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A：报错</p>\n<p>B：18</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>什么是事件委托？</p>\n<p>A：只能把单击事件委托给父元素绑定</p>\n<p>B：可以把能冒泡的事件，委托给已存在的向上的任意标签元素绑定</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>事件对象e.target作用是什么?</p>\n<p>A：获取到这次触发事件相关的信息</p>\n<p>B：获取到这次触发事件目标标签元素</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>如果获取绑定在标签上自定义属性的值10？</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A：div标签对象.innerHTML</p>\n<p>B：div标签对象.dataset.code</p>\n<p>C：div标签对象.code</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个方法可以判断目标标签是否包含指定的类名?</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A: div标签对象.className === 'title'</p>\n<p>B: div标签对象.classList.contains('title')</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>伪数组取值哪种方式是正确的?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>A: obj.0</p>\n<p>B: obj[0]</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下哪个选项可以，往本地存储键为‘bgImg’，值为图片url网址的代码</p>\n<p>A：localStorage.setItem('bgImg')</p>\n<p>B：localStorage.getItem('bgImg')</p>\n<p>C：localStorage.setItem('bgImg', '图片url网址')</p>\n<p>D：localStorage.getItem('bgImg', '图片url网址')</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>C正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下代码运行结果是？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A：代码报错</p>\n<p>B：[username, age, sex]</p>\n<p>C：[\"username\", \"age\", \"sex\"]</p>\n<p>D：[\"老李\", 18, \"男\"]</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>C正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>下面哪个选项可以把数字字符串转成数字类型？</p>\n<p>A：+’10‘</p>\n<p>B：’10‘ + 0</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>A正确</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下代码运行后的结果是什么？（考察逻辑与的短路特性）</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A：报错，报错</p>\n<p>B：18，没有性别</p>\n<p>C：有年龄，没有性别</p>\n<p>D：18，’‘</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>B正确</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 目录</h2>\n<ul>\n<li>案例-图书管理</li>\n<li>图片上传</li>\n<li>案例-网站换肤</li>\n<li>案例-个人信息设置</li>\n</ul>\n<h2> 学习目标</h2>\n<blockquote>\n<p>今天主要就是练，巩固 axios 的使用</p>\n</blockquote>\n<ol>\n<li>完成案例-图书管理系统（增删改查）经典业务</li>\n<li>掌握图片上传的思路</li>\n<li>完成案例-网站换肤并实现图片地址缓存</li>\n<li>完成案例-个人信息设置</li>\n</ol>\n<h2> 01.案例_图书管理-介绍</h2>\n<h3> 目标</h3>\n<p>案例-图书管理-介绍（介绍要完成的效果和练习到的思维）</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>打开备课代码运行图书管理案例效果-介绍要完成的增删改查业务效果和 Bootstrap 弹框使用</p>\n<figure><figcaption>image-20230404105414757</figcaption></figure>\n<figure><figcaption>image-20230404105421707</figcaption></figure>\n</li>\n<li>\n<p>分析步骤和对应的视频模块</p>\n<ul>\n<li>先学习 Bootstrap 弹框的使用（因为添加图书和编辑图书需要这个窗口来承载图书表单）</li>\n<li>先做渲染图书列表（这样做添加和编辑以及删除可以看到数据变化，所以先做渲染）</li>\n<li>再做新增图书功能</li>\n<li>再做删除图书功能</li>\n<li>再做编辑图书功能（注意：编辑和新增图书是2套弹框-后续做项目我们再用同1个弹框）</li>\n</ul>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>做完这个案例我们将会有什么收获呢?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>掌握前端经典增删改查的业务和思路，对以后开发很有帮助</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 02.Bootstrap 弹框_属性控制</h2>\n<h3> 目标</h3>\n<p>使用属性方式控制 Bootstarp 弹框的显示和隐藏</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是 Bootstrap 弹框？</p>\n<ul>\n<li>\n<p>不离开当前页面，显示单独内容，供用户操作</p>\n<figure><figcaption>image-20230404105801739</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>需求：使用 Bootstrap 弹框，先做个简单效果，点击按钮，让弹框出现，点击 X 和 Close 让弹框隐藏</p>\n<figure><figcaption>image-20230404105858660</figcaption></figure>\n</li>\n<li>\n<p>如何使用 Bootstrap 弹框呢？</p>\n<ol>\n<li>\n<p>先引入 bootstrap.css 和 bootstrap.js 到自己网页中</p>\n</li>\n<li>\n<p>准备弹框标签，确认结构（可以从 Bootstrap 官方文档的 Modal 里复制基础例子）- 运行到网页后，逐一对应标签和弹框每个部分对应关系</p>\n</li>\n<li>\n<p>通过自定义属性，通知弹框的显示和隐藏，语法如下：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>去代码区实现一下</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>用哪个属性绑定来控制弹框显示呢?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>data-bs-toggle和data-bs-target</li>\n</ul>\n</details>\n</li>\n<li>\n<p>用哪个属性来控制隐藏弹框呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>data-bs-dismiss 关闭的是标签所在的当前提示框</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 03.Bootstrap 弹框_JS控制</h2>\n<h3> 目标</h3>\n<p>使用 JS 方式控制 Bootstarp 弹框的显示和隐藏</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>为什么需要 JS 方式控制呢？</p>\n<ul>\n<li>\n<p>当我显示之前，隐藏之前，需要执行一些 JS 逻辑代码，就需要引入 JS 控制弹框显示/隐藏的方式了</p>\n</li>\n<li>\n<p>例如：</p>\n<ul>\n<li>点击编辑姓名按钮，在弹框显示之前，在输入框填入默认姓名</li>\n<li>点击保存按钮，在弹框隐藏之前，获取用户填入的名字并打印</li>\n</ul>\n<figure><figcaption>image-20230404110038828</figcaption></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>所以在现实和隐藏之前，需要执行 JS 代码逻辑，就使用 JS 方式 控制 Bootstrap 弹框显示和隐藏</p>\n<p>语法如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>去代码区实现一下</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>什么时候用属性控制，什么时候用 JS 控制 Bootstrap 弹框的显示/隐藏?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>直接出现/隐藏用属性方式控制，如果需要先执行一段 JS 逻辑再显示/隐藏就用 JS 方式控制</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 04.案例_图书管理_渲染列表</h2>\n<h3> 目标</h3>\n<p>完成图书管理案例-图书列表数据渲染效果</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：基于 axios 获取到图书列表数据，并用 JS 代码渲染数据，到准备好的模板标签中</p>\n<figure><figcaption>image-20230404110943200</figcaption></figure>\n</li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>\n<p>获取数据</p>\n</li>\n<li>\n<p>渲染数据</p>\n<figure><figcaption>image-20230404110953752</figcaption></figure>\n<figure><figcaption>image-20230404111014560</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>获取数据的时候，需要给自己起一个外号，为什么需要给自己起一个外号呢？</p>\n<ul>\n<li>我们所有人数据都来自同一个服务器上，为了区分每个同学不同的数据，需要大家设置一个外号告诉服务器，服务器就会返回你对应的图书数据了</li>\n</ul>\n</li>\n<li>\n<p>核心代码如下：</p>\n<blockquote>\n<p>因为默认展示列表，新增，修改，删除后都要重新获取并刷新列表，所以把获取数据渲染数据的代码封装在一个函数内，方便复用</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>渲染数据列表的2个步骤是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>获取数据，分析结构渲染到页面上</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 05.案例_图书管理_新增图书</h2>\n<h3> 目标</h3>\n<p>完成图书管理案例-新增图书需求</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：点击添加按钮，出现准备好的新增图书弹框，填写图书信息提交到服务器保存，并更新图书列表</p>\n<figure><figcaption>image-20230404111235862</figcaption></figure>\n<figure><figcaption>image-20230404111251254</figcaption></figure>\n</li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>\n<p>新增弹框（控制显示和隐藏）（基于 Bootstrap 弹框和准备好的表单-用属性和 JS 方式控制）</p>\n</li>\n<li>\n<p>在点击保存按钮时，收集数据&amp;提交保存</p>\n</li>\n<li>\n<p>刷新-图书列表）（重新调用下之前封装的获取并渲染列表的函数）</p>\n<figure><figcaption>image-20230404111343653</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>新增数据的3个步骤是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>准备好数据标签和样式，然后收集表单数据提交保存，刷新列表</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 06.案例_图书管理_删除图书</h2>\n<h3> 目标</h3>\n<p>完成图书管理案例-删除图书需求</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：点击图书删除元素，删除当前图书数据</p>\n<figure><figcaption>image-20230404111530311</figcaption></figure>\n<figure><figcaption>image-20230404111546639</figcaption></figure>\n</li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>\n<p>给删除元素，绑定点击事件（事件委托方式并判断点击的是删除元素才走删除逻辑代码），并获取到要删除的数据id</p>\n</li>\n<li>\n<p>基于 axios 和接口文档，调用删除接口，让服务器删除这条数据</p>\n</li>\n<li>\n<p>重新获取并刷新图书列表</p>\n<figure><figcaption>image-20230404111612125</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>删除数据的步骤是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>告知服务器要删除的数据id，服务器删除后，重新获取并刷新列表</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 07-09.案例_图书管理_编辑图书</h2>\n<h3> 目标</h3>\n<p>完成图书管理案例-编辑图书需求</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>因为编辑图书要做回显等，比较复杂，所以分了3个视频来讲解</p>\n</li>\n<li>\n<p>需求：完成编辑图书回显当前图书数据到编辑表单，在用户点击修改按钮，收集数据提交到服务器保存，并刷新列表</p>\n<figure><figcaption>image-20230404111722254</figcaption></figure>\n</li>\n<li>\n<p>编辑数据的核心思路：</p>\n<ol>\n<li>\n<p>给编辑元素，绑定点击事件（事件委托方式并判断点击的是编辑元素才走编辑逻辑代码），并获取到要编辑的数据id</p>\n</li>\n<li>\n<p>基于 axios 和接口文档，调用查询图书详情接口，获取正在编辑的图书数据，并回显到表单中（页面上的数据是在用户的浏览器中不够准备，所以只要是查看数据都要从服务器获取）</p>\n<figure><figcaption>image-20230404111739153</figcaption></figure>\n</li>\n<li>\n<p>收集并提交保存修改数据，并重新从服务器获取列表刷新页面</p>\n<figure><figcaption>image-20230404111756655</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>编辑数据的步骤是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>获取正在编辑数据并回显，收集编辑表单的数据提交保存，重新获取并刷新列表</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 10.案例_图书管理_总结</h2>\n<h3> 目标</h3>\n<p>总结下增删改查的核心思路</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>因为增删改查的业务在前端实际开发中非常常见，思路是可以通用的，所以总结下思路</p>\n<blockquote>\n<p>1.渲染列表（查）</p>\n<p>2.新增图书（增）</p>\n<p>3.删除图书（删）</p>\n<p>4.编辑图书（改）</p>\n</blockquote>\n<figure><figcaption>image-20230404111941722</figcaption></figure>\n</li>\n<li>\n<p>渲染数据（查）</p>\n<blockquote>\n<p>核心思路：获取数据 -&gt; 渲染数据</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>新增数据（增）</p>\n<blockquote>\n<p>核心思路：准备页面标签 -&gt; 收集数据提交（必须） -&gt; 刷新页面列表（可选）</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230404112942935</figcaption></figure>\n</li>\n<li>\n<p>删除图书（删）</p>\n<blockquote>\n<p>核心思路：绑定点击事件（获取要删除的图书唯一标识） -&gt; 调用删除接口（让服务器删除此数据） -&gt; 成功后重新获取并刷新列表</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230404113338815</figcaption></figure>\n</li>\n<li>\n<p>编辑图书（改）</p>\n<blockquote>\n<p>核心思路：准备编辑图书表单 -&gt; 表单回显正在编辑的数据 -&gt; 点击修改收集数据 -&gt; 提交到服务器保存 -&gt; 重新获取并刷新列表</p>\n</blockquote>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230404113702515</figcaption></figure>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>学完图书管理案例，我们收货了什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>现在编辑的虽然是图书数据，以后编辑其他数据，再做增删改查都是差不多的思路</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 11.图片上传</h2>\n<h3> 目标</h3>\n<p>把本地图片上传到网页上显示</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是图片上传？</p>\n<ul>\n<li>就是把本地的图片上传到网页上显示</li>\n</ul>\n</li>\n<li>\n<p>图片上传怎么做？</p>\n<ul>\n<li>先依靠文件选择元素获取用户选择的本地文件，接着提交到服务器保存，服务器会返回图片的 url 网址，然后把网址加载到 img 标签的 src 属性中即可显示</li>\n</ul>\n</li>\n<li>\n<p>为什么不直接显示到浏览器上，要放到服务器上呢？</p>\n<ul>\n<li>因为浏览器保存是临时的，如果你想随时随地访问图片，需要上传到服务器上</li>\n</ul>\n</li>\n<li>\n<p>图片上传怎么做呢？</p>\n<ol>\n<li>\n<p>先获取图片文件对象</p>\n</li>\n<li>\n<p>使用 FormData 表单数据对象装入（因为图片是文件而不是以前的数字和字符串了所以传递文件一般需要放入 FormData 以键值对-文件流的数据传递（可以查看请求体-确认请求体结构）</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>提交表单数据对象，使用服务器返回图片 url 网址</p>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>图片上传的思路是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>先用文件选择元素，获取到文件对象，然后装入 FormData 表单对象中，再发给服务器，得到图片在服务器的 URL 网址，再通过 img 标签加载图片显示</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 12.案例_网站-更换背景图</h2>\n<h3> 目标</h3>\n<p>实现更换网站背景图的效果</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：先运行备课代码，查看要完成的效果，点击右上角选择本机中提供的素材图片，更换网站背景图</p>\n<figure><figcaption>image-20230404122349505</figcaption></figure>\n</li>\n<li>\n<p>网站更换背景图如何实现呢，并且保证刷新后背景图还在？具体步骤：</p>\n<ol>\n<li>先获取到用户选择的背景图片，上传并把服务器返回的图片 url 网址设置给 body 背景</li>\n<li>上传成功时，保存图片 url 网址到 localStorage 中</li>\n<li>网页运行后，获取 localStorage 中的图片的 url 网址使用（并判断本地有图片 url 网址字符串才设置）</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>localStorage 取值和赋值的语法分别是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>localStorage.getItem('key')是取值，localStorage.setItem('key', 'value')是赋值</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 13.案例_个人信息设置-介绍</h2>\n<h3> 目标</h3>\n<p>介绍个人信息设置案例-需要完成哪些效果，分几个视频讲解</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：先运行备课代码，查看要完成的效果</p>\n<figure><figcaption>image-20230404123206073</figcaption></figure>\n</li>\n<li>\n<p>本视频分为，信息回显 + 头像修改 + 信息修改+ 提示框反馈 4 部分</p>\n<ol>\n<li>先完成信息回显</li>\n<li>再做头像修改-立刻就更新给此用户</li>\n<li>收集个人信息表单-提交保存</li>\n<li>提交后反馈结果给用户（提示框）</li>\n</ol>\n</li>\n</ol>\n<h3> 小结</h3>\n<p>暂无</p>\n<h2> 14.案例_个人信息设置-信息渲染</h2>\n<h3> 目标</h3>\n<p>把外号对应的用户信息渲染到页面上</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：把外号对应的个人信息和头像，渲染到页面表单和头像标签上。</p>\n<figure><figcaption>image-20230404123708765</figcaption></figure>\n</li>\n<li>\n<p>注意：还是需要准备一个外号，因为想要查看自己对应的用户信息，不想被别人影响</p>\n</li>\n<li>\n<p>步骤：</p>\n<ul>\n<li>获取数据</li>\n<li>渲染数据到页面</li>\n</ul>\n</li>\n<li>\n<p>代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>渲染数据和图书列表的渲染思路是否一样呢，是什么？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>一样的，都是获取到数据，然后渲染到页面上</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 15.案例_个人信息设置-头像修改</h2>\n<h3> 目标</h3>\n<p>修改用户的头像并立刻生效</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：点击修改用户头像</p>\n<figure><figcaption>image-20230404124524401</figcaption></figure>\n</li>\n<li>\n<p>实现步骤如下：</p>\n<ol>\n<li>\n<p>获取到用户选择的头像文件</p>\n</li>\n<li>\n<p>调用头像修改接口，并除了头像文件外，还要在 FormData 表单数据对象中携带外号</p>\n</li>\n<li>\n<p>提交到服务器保存此用户对应头像文件，并把返回的头像图片 url 网址设置在页面上</p>\n<figure><figcaption>image-20230404124540629</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>注意：重新刷新重新获取，已经是修改后的头像了（证明服务器那边确实保存成功）</p>\n</li>\n<li>\n<p>核心代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>为什么这次上传头像，需要携带外号呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>因为这次头像到后端，是要保存在某个用户名下的，所以要把外号名字一起携带过去</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 16.案例_个人信息设置-信息修改</h2>\n<h3> 目标</h3>\n<p>把用户修改的信息提交到服务器保存</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：点击提交按钮，收集个人信息，提交到服务器保存（无需重新获取刷新，因为页面已经是最新的数据了）</p>\n<ol>\n<li>\n<p>收集表单数据</p>\n</li>\n<li>\n<p>提交到服务器保存-调用用户信息更新接口（注意请求方法是 PUT）代表数据更新的意思</p>\n<figure><figcaption>image-20230404125310049</figcaption></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>信息修改数据和以前增删改查哪个实现的思路比较接近呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>编辑，首先回显已经做完了，然后收集用户最新改动后的数据，提交到服务器保存，因为页面最终就是用户刚写的数据，所以不用重新获取并刷新页面了</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 17.案例_个人信息设置-提示框</h2>\n<h3> 目标</h3>\n<p>把用户更新个人信息结果，用提示框反馈给用户</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：使用 bootstrap 提示框，提示个人信息设置后的结果</p>\n<figure><figcaption>image-20230404125517679</figcaption></figure>\n</li>\n<li>\n<p>bootstrap 的 toast 提示框和 modal 弹框使用很像，语法如下：</p>\n<ol>\n<li>\n<p>先准备对应的标签结构（模板里已有）</p>\n</li>\n<li>\n<p>设置延迟自动消失的时间</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>使用 JS 的方式，在 axios 请求响应成功时，展示结果</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>核心代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>bootstrap 弹框什么时候用 JS 方式控制显示呢？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>需要执行一些其他的 JS 逻辑后，再去显示/隐藏弹框时</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 今日重点(必须会)</h2>\n<ol>\n<li>掌握增删改查数据的思路</li>\n<li>掌握图片上传的思路和流程</li>\n<li>理解调用接口时，携带外号的作用</li>\n<li>了解 bootstrap 弹框的使用</li>\n</ol>\n<h2> 今日作业(必完成)</h2>\n<p>在配套作业文件夹的md内</p>\n<h2> 参考文献</h2>\n<ol>\n<li><a href=\"https://baike.baidu.com/item/%E8%A1%A8%E5%8D%95\" target=\"_blank\" rel=\"noopener noreferrer\">表单概念-&gt;百度百科</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Content_negotiation/List_of_default_Accept_values\" target=\"_blank\" rel=\"noopener noreferrer\">accept属性-&gt;mdn</a></li>\n<li><a href=\"https://www.runoob.com/tags/att-input-accept.html\" target=\"_blank\" rel=\"noopener noreferrer\">accept属性-&gt;菜鸟教程</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\" target=\"_blank\" rel=\"noopener noreferrer\">FormData-&gt;mdn</a></li>\n<li><a href=\"https://v5.bootcss.com/docs/components/modal/#passing-options\" target=\"_blank\" rel=\"noopener noreferrer\">BS的Model文档</a></li>\n<li><a href=\"https://www.axios-http.cn/docs/api_intro\" target=\"_blank\" rel=\"noopener noreferrer\">axios请求方式别名</a></li>\n</ol>\n",
      "date_published": "2023-11-15T01:40:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "前端",
        "AJAX"
      ]
    },
    {
      "title": "03_AJAX原理",
      "url": "https://www.fanliu.top/ajax/AJAX_03_%E5%8E%9F%E7%90%86.html",
      "id": "https://www.fanliu.top/ajax/AJAX_03_%E5%8E%9F%E7%90%86.html",
      "summary": "知识点自测 1. 以下哪个方法可以把 JS 数据类型转成 JSON 字符串类型? A. JSON.stringify() B. JSON.parse() 答案 选择A 2. 以下哪个方法，会延迟一段时间后，再执行函数体，并执行一次就停止? A. setTimeout(函数体, 毫秒值) B. setInterval(函数体, 毫秒值) 答案 选择A 3...",
      "content_html": "<h1> Day03_AJAX原理</h1>\n<h2> 知识点自测</h2>\n<ol>\n<li>\n<p>以下哪个方法可以把 JS 数据类型转成 JSON 字符串类型?</p>\n<p>A. JSON.stringify()</p>\n<p>B. JSON.parse()</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选择A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>以下哪个方法，会延迟一段时间后，再执行函数体，并执行一次就停止?</p>\n<p>A. setTimeout(函数体, 毫秒值)</p>\n<p>B. setInterval(函数体, 毫秒值)</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选择A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>下面代码 result 结果是多少?</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A. true</p>\n<p>B. 大于</p>\n<p>C. 240</p>\n<p>D. false</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选A</li>\n</ul>\n</details>\n</li>\n<li>\n<p>下面代码运行结果是多少？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>A：'http://www.baidu.com'</p>\n<p>B：'?a=10'</p>\n<p>C：'&amp;b=20'</p>\n<p>D：'http://www.baidu.com?a=10&amp;b=20'</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选D</li>\n</ul>\n</details>\n</li>\n<li>\n<p>哪个事件能实时检测到输入框值的变化？</p>\n<p>A：input 事件</p>\n<p>B：change 事件</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>选A</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 目录</h2>\n<ul>\n<li>XMLHttpRequest 的学习</li>\n<li>Promise</li>\n<li>封装简易版 axios</li>\n<li>案例 - 天气预报</li>\n</ul>\n<h2> 学习目标</h2>\n<ol>\n<li>了解原生 AJAX 语法 - XMLHttpRequest（XHR）</li>\n<li>了解 Promise 的概念和使用</li>\n<li>了解 axios 内部工作的大概过程（XHR + Promise）</li>\n<li>案例 - 天气预报</li>\n</ol>\n<h2> 01.XMLHttpRequest - 基础使用</h2>\n<h3> 目标</h3>\n<p>了解 AJAX 原理 XHR 的基础使用</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>AJAX 是浏览器与服务器通信的技术，采用 XMLHttpRequest 对象相关代码</p>\n</li>\n<li>\n<p>axios 是对 XHR 相关代码进行了封装，让我们只关心传递的接口参数</p>\n</li>\n<li>\n<p>学习 XHR 也是了解 axios 内部与服务器交互过程的真正原理</p>\n<figure><figcaption>image-20230221182835545</figcaption></figure>\n</li>\n<li>\n<p>语法如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230221183057392</figcaption></figure>\n</li>\n<li>\n<p>需求：以一个需求来体验下原生 XHR 语法，获取所有省份列表并展示到页面上</p>\n</li>\n<li>\n<p>代码如下：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>AJAX 原理是什么?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>window 提供的 XMLHttpRequest</li>\n</ul>\n</details>\n</li>\n<li>\n<p>为什么学习 XHR ？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>有更多与服务器数据通信方式</li>\n<li>了解 axios 内部原理</li>\n</ul>\n</details>\n</li>\n<li>\n<p>XHR 使用步骤？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>1. 创建 XHR 对象 2. 调用 open 方法，设置 url 和请求方法 3. 监听 loadend 事件，接收结果 4. 调用 send 方法，发起请求</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 02.XMLHttpRequest - 查询参数</h2>\n<h3> 目标</h3>\n<p>使用 XHR 传递查询参数给服务器，获取匹配数据</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是查询参数：携带额外信息给服务器，返回匹配想要的数据</p>\n</li>\n<li>\n<p>查询参数原理要携带的位置和语法：http://xxxx.com/xxx/xxx?参数名1=值1&amp;参数名2=值2</p>\n</li>\n<li>\n<p>所以，原生 XHR 需要自己在 url 后面携带查询参数字符串，没有 axios 帮助我们把 params 参数拼接到 url 字符串后面了</p>\n</li>\n<li>\n<p>需求：查询河北省下属的城市列表</p>\n<figure><figcaption>image-20230404133429378</figcaption></figure>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>XHR 如何携带查询参数?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>在调用 open 方法的时候，在 url? 后面按照指定格式拼接参数名和值</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 03.案例 - 地区查询</h2>\n<h3> 目标</h3>\n<p>使用 XHR 完成案例地区查询</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：和我们之前做的类似，就是不用 axios 而是用 XHR 实现，输入省份和城市名字后，点击查询，传递多对查询参数并获取地区列表的需求</p>\n<figure><figcaption>image-20230221184135458</figcaption></figure>\n</li>\n<li>\n<p>但是多个查询参数，如果自己拼接很麻烦，这里用 URLSearchParams 把参数对象转成“参数名=值&amp;参数名=值“格式的字符串，语法如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>JS 对象如何转成查询参数格式字符串?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>在调用 open 方法的时候，在 url? 后面按照指定格式拼接参数名和值</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 04.XMLHttpRequest - 数据提交</h2>\n<h3> 目标</h3>\n<p>通过 XHR 提交用户名和密码，完成注册功能</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>了解原生 XHR 进行数据提交的方式</p>\n</li>\n<li>\n<p>需求：通过 XHR 完成注册用户功能</p>\n<figure><figcaption>image-20230404135245271</figcaption></figure>\n</li>\n<li>\n<p>步骤和语法：</p>\n<ol>\n<li>\n<p>注意1：但是这次没有 axios 帮我们了，我们需要自己设置请求头 Content-Type：application/json，来告诉服务器端，我们发过去的内容类型是 JSON 字符串，让他转成对应数据结构取值使用</p>\n</li>\n<li>\n<p>注意2：没有 axios 了，我们前端要传递的请求体数据，也没人帮我把 JS 对象转成 JSON 字符串了，需要我们自己转换</p>\n</li>\n<li>\n<p>注意3：原生 XHR 需要在 send 方法调用时，传入请求体携带</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>XHR 如何提交请求体数据?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>在 send 中携带请求体数据，要按照后端要求的内容类型携带</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 05.认识_Promise</h2>\n<h3> 目标</h3>\n<p>认识 Promise 的作用和好处以及使用步骤</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>什么是 Promise ？</p>\n<ul>\n<li>Promise 对象用于表示一个异步操作的最终完成（或失败）及其结构值</li>\n</ul>\n</li>\n<li>\n<p>Promise 的好处是什么？</p>\n<ul>\n<li>\n<p>逻辑更清晰（成功或失败会关联后续的处理函数）</p>\n</li>\n<li>\n<p>了解 axios 函数内部运作的机制</p>\n<figure><figcaption>image-20230222113651404</figcaption></figure>\n</li>\n<li>\n<p>能解决回调函数地狱问题（后面会讲到），今天先来看下它的基础使用</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Promise 管理异步任务，语法怎么用？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>示例代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>什么是 Promise ?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>表示（管理）一个异步操作最终状态和结果值的对象</li>\n</ul>\n</details>\n</li>\n<li>\n<p>为什么学习 Promise ?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>成功和失败状态，可以关联对应处理函数，了解 axios 内部运作的原理</li>\n</ul>\n</details>\n</li>\n<li>\n<p>Promise 使用步骤？</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>1. new Promise 对象执行异步任务。2. 用 resolve 关联 then 的回调函数传递成功结果。3.用 reject 关联 catch 的回调函数传递失败结果。</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 06.认识_Promise 的状态</h2>\n<h3> 目标</h3>\n<p>认识 Promise 的三种状态，知道如何关联成功/失败的处理函数</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>为什么要了解 Promise 的三种状态 ？</p>\n<ul>\n<li>知道 Promise 对象如何关联的处理函数，以及代码的执行顺序</li>\n</ul>\n</li>\n<li>\n<p>Promise 有哪三种状态？</p>\n<blockquote>\n<p>每个 Promise 对象必定处于以下三种状态之一</p>\n</blockquote>\n<ol>\n<li>待定（pending）：初始状态，既没有被兑现，也没有被拒绝</li>\n<li>已兑现（fulfilled）：操作成功完成</li>\n<li>已拒绝（rejected）：操作失败</li>\n</ol>\n<blockquote>\n<p>状态的英文字符串，可以理解为 Promise 对象内的字符串标识符，用于判断什么时候调用哪一个处理函数</p>\n</blockquote>\n</li>\n<li>\n<p>Promise 的状态改变有什么用：调用对应函数，改变 Promise 对象状态后，内部触发对应回调函数传参并执行</p>\n<figure><figcaption>image-20230222120815484</figcaption></figure>\n</li>\n<li>\n<p>注意：每个 Promise 对象一旦被兑现/拒绝，那就是已敲定了，状态无法再被改变</p>\n</li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>Promise 对象有哪 3 种状态?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>待定 pending，已兑现 fulfilled，已拒绝 rejected</li>\n</ul>\n</details>\n</li>\n<li>\n<p>Promise 状态有什么用?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>状态改变后，如何关联处理函数</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 07.使用 Promise 和 XHR_获取省份列表</h2>\n<h3> 目标</h3>\n<p>尝试用 Promise 管理 XHR 异步任务</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>Promise 和 XHR 都已经学过基础语法了，我们可以来结合使用一下了</p>\n</li>\n<li>\n<p>需求：使用 Promise 和 XHR 请求省份列表数据并展示到页面上</p>\n<figure><figcaption>image-20230404140252181</figcaption></figure>\n</li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>\n<p>创建 Promise 对象</p>\n</li>\n<li>\n<p>执行 XHR 异步代码，获取省份列表数据</p>\n</li>\n<li>\n<p>关联成功或失败回调函数，做后续的处理</p>\n<blockquote>\n<p>错误情况：用地址错了404演示</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>AJAX 如何判断是否请求响应成功了?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>响应状态码在大于等于 200 并且小于 300 的范围是成功的</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 08.封装_简易axios-获取省份列表</h2>\n<h3> 目标</h3>\n<p>模拟 axios 函数封装，更深入了解 axios 内部运作原理</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：基于 Promise 和 XHR 封装 myAxios 函数，获取省份列表展示到页面</p>\n<figure><figcaption>image-20230222130217597</figcaption></figure>\n</li>\n<li>\n<p>核心语法：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>定义 myAxios 函数，接收配置对象，返回 Promise 对象</li>\n<li>发起 XHR 请求，默认请求方法为 GET</li>\n<li>调用成功/失败的处理程序</li>\n<li>使用 myAxios 函数，获取省份列表展示</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>自己封装的 myAxios 如何设置默认请求方法 GET?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>config.method 判断有值就用，无值用‘GET’方法</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 09.封装_简易axios-获取地区列表</h2>\n<h3> 目标</h3>\n<p>修改 myAxios 函数支持传递查询参数，获取辽宁省，大连市的地区列表</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：在上个封装的建议 axios 函数基础上，修改代码支持传递查询参数功能</p>\n</li>\n<li>\n<p>修改步骤：</p>\n<ol>\n<li>myAxios 函数调用后，判断 params 选项</li>\n<li>基于 URLSearchParams 转换查询参数字符串</li>\n<li>使用自己封装的 myAxios 函数显示地区列表</li>\n</ol>\n</li>\n<li>\n<p>核心代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>外面传入查询参数对象，myAxios 函数内如何转查询参数字符串?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>使用 URLSearchParams 对象转换</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 10.封装_简易axios-注册用户</h2>\n<h3> 目标</h3>\n<p>修改 myAxios 函数支持传递请求体数据，完成注册用户</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：修改 myAxios 函数支持传递请求体数据，完成注册用户功能</p>\n</li>\n<li>\n<p>修改步骤：</p>\n<ol>\n<li>myAxios 函数调用后，判断 data 选项</li>\n<li>转换数据类型，在 send 方法中发送</li>\n<li>使用自己封装的 myAxios 函数完成注册用户功能</li>\n</ol>\n</li>\n<li>\n<p>核心代码：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>外面传入 data 选项，myAxios 函数内如何携带请求体参数?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>判断外面传入了这个属性，自己转成 JSON 字符串并设置请求头并在 send 方法中携带</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 11-12.案例_天气预报-默认数据</h2>\n<h3> 目标</h3>\n<p>把北京市的数据，填充到页面默认显示</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>需求：介绍本项目要完成的效果，和要实现的步骤和分的步骤和视频</p>\n<figure><figcaption>image-20230222133327806</figcaption></figure>\n</li>\n<li>\n<p>步骤</p>\n<ol>\n<li>先获取北京市天气预报，展示</li>\n<li>搜索城市列表，展示</li>\n<li>点击城市，切换显示对应天气数据</li>\n</ol>\n</li>\n<li>\n<p>本视频先封装函数，获取城市天气并设置页面内容</p>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>做完这个项目会带来什么收货?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>可以做一个真正有意义的业务，查看城市的天气预报，测试自己封装的 myAxios 函数是否好用</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 13.案例_天气预报-搜索城市列表</h2>\n<h3> 目标</h3>\n<p>根据关键字，展示匹配的城市列表</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>介绍本视频要完成的效果：搜索匹配关键字相关城市名字，展示城市列表即可</p>\n<figure><figcaption>image-20230222133553010</figcaption></figure>\n</li>\n<li>\n<p>步骤</p>\n<ol>\n<li>绑定 input 事件，获取关键字</li>\n<li>获取展示城市列表数据</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>监听输入框实时改变的事件是什么?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>input事件</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 14.案例_天气预报-展示城市天气</h2>\n<h3> 目标</h3>\n<p>点击搜索框列表城市名字，切换对应城市天气数据</p>\n<h3> 讲解</h3>\n<ol>\n<li>\n<p>介绍本视频要完成的效果：点击城市列表名字，切换当前页面天气数据</p>\n<figure><figcaption>image-20230222134653884</figcaption></figure>\n</li>\n<li>\n<p>步骤</p>\n<ol>\n<li>检测搜索列表点击事件，获取城市 code 值</li>\n<li>复用获取展示城市天气函数</li>\n</ol>\n</li>\n<li>\n<p>核心代码如下：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 小结</h3>\n<ol>\n<li>\n<p>这次我们获取城市天气，传递的是城市名字还是 code 值?</p>\n<details>\n<summary>答案</summary>\n<ul>\n<li>看后端要求传递什么，就传什么即可</li>\n</ul>\n</details>\n</li>\n</ol>\n<h2> 今日重点(必须会)</h2>\n<ol>\n<li>了解 AJAX 原理之 XMLHttpRequest（XHR）相关语法</li>\n<li>了解 Promise 的作用和三种状态</li>\n<li>了解 axios 内部运作的过程</li>\n<li>完成案例-天气预报</li>\n</ol>\n<h2> 今日作业(必完成)</h2>\n<p>参考作业文件夹作用</p>\n<h2> 参考文档</h2>\n<ol>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started\" target=\"_blank\" rel=\"noopener noreferrer\">Ajax原生-mdn</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests\" target=\"_blank\" rel=\"noopener noreferrer\">同步异步-mdn</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Callback_function\" target=\"_blank\" rel=\"noopener noreferrer\">回调函数-mdn</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener noreferrer\">Promise-mdn</a></li>\n</ol>\n",
      "date_published": "2023-11-16T01:40:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "前端",
        "AJAX"
      ]
    },
    {
      "title": "APP一键登录-服务端集成",
      "url": "https://www.fanliu.top/art/APP%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%9B%86%E6%88%90.html",
      "id": "https://www.fanliu.top/art/APP%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%9B%86%E6%88%90.html",
      "summary": "APP一键登录-服务端集成 该篇 blog 主要记录笔者实现 app手机号一键登录 功能，集成的是阿里云号码认证服务，主要简单记录一下实现的过程： 一键登录.png 在记录一键登录实现逻辑之前，你应该了解一下阿里的认证方案、`一键登录和本机号校验: 认证方案 (https://link.juejin.cn?target=https%3A%2F%2Fhe...",
      "content_html": "<h2> APP一键登录-服务端集成</h2>\n<p>该篇 blog 主要记录笔者实现 app手机号一键登录 功能，集成的是阿里云号码认证服务，主要简单记录一下实现的过程：</p>\n<figure><figcaption>一键登录.png</figcaption></figure>\n<p>在记录一键登录实现逻辑之前，你应该了解一下阿里的<code>认证方案</code>、<code>一键登录</code>和<code>本机号校验</code>:</p>\n<ul>\n<li><a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F405281.html\" target=\"_blank\" rel=\"noopener noreferrer\">认证方案</a></li>\n<li><a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F405286.html\" target=\"_blank\" rel=\"noopener noreferrer\">GetMobile - 一键登录取号</a></li>\n<li><a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F405287.html\" target=\"_blank\" rel=\"noopener noreferrer\">VerifyMobile - 本机号码校验认证</a></li>\n</ul>\n<h2> 前提条件</h2>\n<ul>\n<li>您已注册阿里云账号。更多信息，请参见 <a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F37195.html%23concept-gpr-axx-wdb\" target=\"_blank\" rel=\"noopener noreferrer\">阿里云账号注册流程</a>。</li>\n<li>您的阿里云账号已通过企业实名认证或个人实名认证。更多信息，请参见 <a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F37172.html%23concept-gpr-3bx-wdb\" target=\"_blank\" rel=\"noopener noreferrer\">企业实名认证</a> 或 <a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F48263.html\" target=\"_blank\" rel=\"noopener noreferrer\">个人实名认证</a>。</li>\n</ul>\n<h2> 整体实现流程</h2>\n<h3> 步骤一：开通号码认证服务</h3>\n<ol>\n<li>访问<a href=\"https://link.juejin.cn?target=https%3A%2F%2Fwww.aliyun.com%2Fproduct%2Fdypns%3Fspm%3Da2c4g.11186623.0.0.2d7b1071pn3g3K\" target=\"_blank\" rel=\"noopener noreferrer\">号码认证服务产品详情页</a>。</li>\n<li>单击立即开通或访问产品控制台。</li>\n<li>进入控制台首页，勾选我已阅读并同意《号码认证服务协议》。</li>\n<li>单击立即开通，完成产品开通。</li>\n</ol>\n<h3> 步骤二：添加认证方案</h3>\n<p>具体操作，请参见 <a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F381012.htm%23task-2164806\" target=\"_blank\" rel=\"noopener noreferrer\">认证方案管理</a>。</p>\n<p><strong>认证方案管理</strong>：</p>\n<p>认证方案用于标识<code>App</code>下的认证场景，一般<code>一个认证方案对应一个App包名/包签名或者BundleId</code>。系统调用过程中需要使用对应的方案Code。本文为您介绍如何添加认证方案、修改相关配置如认证方式，以及删除认证方案。</p>\n<ol>\n<li>\n<p>登录<a href=\"https://link.juejin.cn?target=https%3A%2F%2Fdypns.console.aliyun.com%2F%3Fspm%3D5176.20967111.J_5834642020.4.28e32fdazkYFYk%23%2Foverview\" target=\"_blank\" rel=\"noopener noreferrer\">号码认证产品控制台</a>。</p>\n</li>\n<li>\n<p>在左侧导航栏上，选择号码认证服务 &gt; 认证方案管理。</p>\n</li>\n<li>\n<p>根据相应功能填写信息，添加认证方案。</p>\n<ul>\n<li>\n<p>一键登录和本机号码校验、活体认证、短信认证：</p>\n<ol>\n<li>\n<p>选择iOS或Android页签，再单击+添加认证方案。</p>\n</li>\n<li>\n<p>填写方案名称、App名称等信息。Android操作系统需要填写应用包名及包签名，iOS操作系统需要填写BundleID。</p>\n<p>短信认证功能还需在认证方式一栏勾选短信验证码，绑定对应签名。建议使用您的App名称作为签名，提高签名审核通过率。若需要添加新的签名，可单击创建签名。若没有可用的短信签名，可绑定赠送的签名进行测试，待正式签名审核通过后再修改绑定签名，详情请参见<a href=\"https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F381012.htm%3Fspm%3Da2c4g.11186623.0.0.50061071yu38Zf%23section-86a-e3a-tgp\" target=\"_blank\" rel=\"noopener noreferrer\">修改方案配置</a>。</p>\n<p>**</p>\n<p><strong>说明</strong> 方案名称和App名称建议输入实际上线的App名称。</p>\n<figure><figcaption>多个功能认证方案-框</figcaption></figure>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h2> 代码逻辑实现</h2>\n<h3> pom依赖</h3>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 核心接口</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 接口实现类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> controller控制器</h3>\n<p>笔者在调用verifyMobile完成本机号码校验认证这个接口 做了修改 验证成功后走登录的逻辑给客户端返回token</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 总结</h2>\n<p>现如今 各大头部APP都已集成手机号一键登录 方便用户的同时 更节省成本，相比传统的手机短信验证码登录 成本节省巨大 ，这无疑是一种明智之举。</p>\n<p>但我们也要考虑到一些不可忽视的问题</p>\n<ol>\n<li>在用户未插入手机卡的使用环境下</li>\n<li>在用户连接 WiFi 的使用环境下</li>\n</ol>\n<p>所以在登录这方面 一键登录只是锦上添花 并不可完全替代 传统的短信验证码登录 ，权宜之计是 “我全都要”</p>\n<figure><figcaption>我全都要表情包12-</figcaption></figure>\n<p>就酱，有需要交流的小伙伴可以联系我或留言</p>\n",
      "date_published": "2024-05-08T16:20:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "ImageIo.read() 读取图片时返回 null 的解决方法",
      "url": "https://www.fanliu.top/art/ImageIo.read()%20%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87%E6%97%B6%E8%BF%94%E5%9B%9ENull%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html",
      "id": "https://www.fanliu.top/art/ImageIo.read()%20%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87%E6%97%B6%E8%BF%94%E5%9B%9ENull%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html",
      "summary": "ImageIo.read() 读取图片时返回 null 的解决方法 在 Java 开发中，我们常常使用 ImageIO.read() 方法来读取图像文件并将其转换为 BufferedImage 对象。然而，有时候这个方法可能会返回 null，让我们困惑不解。本文将探讨导致这种情况的常见原因，并介绍解决方法。 1. 确保图像格式受支持 ImageIO.r...",
      "content_html": "<h3> <code>ImageIo.read()</code> 读取图片时返回 <code>null</code> 的解决方法</h3>\n<p>在 Java 开发中，我们常常使用 <code>ImageIO.read()</code> 方法来读取图像文件并将其转换为 <code>BufferedImage</code> 对象。然而，有时候这个方法可能会返回 <code>null</code>，让我们困惑不解。本文将探讨导致这种情况的常见原因，并介绍解决方法。</p>\n<h4> 1. 确保图像格式受支持</h4>\n<p><code>ImageIO.read()</code> 方法依赖于 Java 的 <code>ImageIO</code> 框架，它默认支持常见的图像格式，如 JPEG、PNG 和 BMP。但如果你尝试读取不受支持的格式（例如 WebP），<code>ImageIO.read()</code> 就会返回 <code>null</code>。为了处理这些格式，你需要引入额外的依赖库。</p>\n<h5> <strong>案例：支持 WebP 格式</strong></h5>\n<p>虽然有的图片是以jpg 或者 png 结尾，但是是由 webp 改后缀得来 在 java1.8 中并不支持这种格式就会导致 以下空指针</p>\n<figure><figcaption>fa1faafeab4c44d05c7ab26b7af5fe5</figcaption></figure>\n<p>WebP 是一种现代图像格式，具有高压缩比和良好的图像质量，但它并不被 Java 默认支持。要解决这个问题，你可以使用 <code>webp-imageio</code> 库。以下是添加 Maven 依赖的方法：</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>引入该依赖后，你就可以使用 <code>ImageIO</code> 来读取和写入 WebP 图像格式了：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>88fd146d6c7a74e580b40f0c4638827</figcaption></figure>\n<h4> 2. 检查文件路径和输入流</h4>\n<p>另一个导致 <code>ImageIO.read()</code> 返回 <code>null</code> 的常见原因是文件路径或输入流的问题。请确保文件路径正确且文件存在。你可以使用以下方法验证文件的可访问性：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3. 检查 <code>ImageReader</code> 的可用性</h4>\n<p><code>ImageIO.read()</code> 的工作原理是通过内部注册表查找合适的 <code>ImageReader</code> 来解码图像。如果没有找到合适的 <code>ImageReader</code>，<code>ImageIO.read()</code> 就会返回 <code>null</code>。</p>\n<p>为了更好地理解这一点，让我们看看一个简化版的 <code>getImageReaders()</code> 方法，它用于查找可以处理特定输入的 <code>ImageReader</code>：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在这个方法中，如果没有找到合适的 <code>ImageReader</code>，则可能会导致 <code>ImageIO.read()</code> 返回 <code>null</code>。要解决这个问题，你可以：</p>\n<ul>\n<li>检查并确保输入的文件格式受支持。</li>\n<li>使用 <code>ImageIO.getImageReaders()</code> 手动验证可用的 <code>ImageReader</code>，如：</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 4. 确保图像文件未损坏</h4>\n<p>如果图像文件本身损坏或不完整，<code>ImageIO.read()</code> 也可能会返回 <code>null</code>。要检测这一点，可以尝试用其他图像查看器打开文件，或者使用代码读取文件的元数据：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 5. 结论</h4>\n<p>当 <code>ImageIO.read()</code> 返回 <code>null</code> 时，可能有多种原因导致问题的发生，从不支持的图像格式、错误的文件路径，到缺少合适的 <code>ImageReader</code>。通过本文介绍的检查和解决方法，你可以更有效地诊断问题并找到解决方案。</p>\n<p>记住，处理图像文件时，务必要确保所用的库支持你所处理的图像格式，并且要仔细检查文件路径和输入流，以避免不必要的错误。</p>\n<p>希望这些技巧能够帮助你解决 <code>ImageIO.read()</code> 返回 <code>null</code> 的问题！如果你有更多的疑问或需要进一步的帮助，欢迎在评论区留言。</p>\n",
      "date_published": "2024-08-17T12:30:20.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "三步教你删除七牛云bucket所有文件",
      "url": "https://www.fanliu.top/art/%E4%B8%89%E6%AD%A5%E6%95%99%E4%BD%A0%E5%88%A0%E9%99%A4%E4%B8%83%E7%89%9B%E4%BA%91bucket%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6.html",
      "id": "https://www.fanliu.top/art/%E4%B8%89%E6%AD%A5%E6%95%99%E4%BD%A0%E5%88%A0%E9%99%A4%E4%B8%83%E7%89%9B%E4%BA%91bucket%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6.html",
      "summary": "三步教你删除七牛云bucket所有文件 今天要删除一个不再使用的空间（bucket），释放存储空间，删除时提示“空间「xxx」不为空”，意思是要先清空空间内的文件，再删除，由于文件有几TB，后台提供的删除功能没法在短时间内清空，工作量较大 image-20240509153406432 于是咨询七牛云工程师后 有了解决方案 使用 Qshell 进行删除...",
      "content_html": "<h2> 三步教你删除七牛云bucket所有文件</h2>\n<p>今天要删除一个不再使用的空间（bucket），释放存储空间，删除时提示“空间「xxx」不为空”，意思是要先清空空间内的文件，再删除，由于文件有几TB，后台提供的删除功能没法在短时间内清空，工作量较大</p>\n<figure><figcaption>image-20240509153406432</figcaption></figure>\n<p>于是咨询七牛云工程师后 有了解决方案</p>\n<h2> 使用 Qshell 进行删除</h2>\n<p>Qshell 是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具。该工具设计和开发的主要目的就是帮助开发者快速解决问题。目前该工具融合了七牛存储，CDN，以及其他的一些七牛服务中经常使用到的方法对应的便捷命令，比如b64decode，就是用来解码七牛的URL安全的Base64编码用的，所以这是一个面向开发者的工具，任何新的被认为适合加到该工具中的命令需求，都可以在<a href=\"https://github.com/qiniu/qshell/issues\" target=\"_blank\" rel=\"noopener noreferrer\">ISSUE列表</a>里面提出来，我们会尽快评估实现，以帮助大家更好地使用七牛服务。</p>\n<p>Github <a href=\"https://github.com/qiniu/qshell\" target=\"_blank\" rel=\"noopener noreferrer\">代码地址</a></p>\n<h3> 1. 下载</h3>\n<p>该工具使用 Go 语言编写而成，当然为了方便不熟悉 Go 或者急于使用工具来解决问题的开发者，我们提供了预先编译好的各主流操作系统平台的二进制文件供大家下载使用，由于平台的多样性，我们把这些二进制打包放到一个文件里面，请大家根据下面的说明各自需要选择支持合适平台来使用。</p>\n<blockquote>\n<p>更新日志 <a href=\"https://github.com/qiniu/qshell/blob/master/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">查看</a>，<code>强烈建议使用 v2.8.0 及以上版本</code>.</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">支持平台</th>\n<th style=\"text-align:left\">链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Windows X86</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-windows-386.zip\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Windows amd64</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-windows-amd64.zip\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Windows arm</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-windows-arm.zip\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Linux X86</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-linux-386.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Linux amd64</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-linux-amd64.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Linux arm</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-linux-arm.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Linux arm64</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-linux-arm64.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Mac OS amd64</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-darwin-amd64.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Mac OS arm64</td>\n<td style=\"text-align:left\"><a href=\"https://kodo-toolbox-new.qiniu.com/qshell-v2.13.0-darwin-arm64.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">下载</a></td>\n</tr>\n</tbody>\n</table>\n<h3> 2. 安装</h3>\n<p>该工具由于是命令行工具，所以只需要从上面的下载链接下载后即可执行使用。</p>\n<p><strong>Linux和Mac平台</strong></p>\n<p>（1）权限\n如果在Linux或者Mac系统上遇到<code>Permission Denied</code>的错误，请使用命令<code>chmod +x qshell</code>来为文件添加可执行权限。这里的<code>qshell</code>是上面文件重命名之后的简写。</p>\n<p>（2）任何位置运行\n对于Linux或者Mac，如果希望能够在任何位置都可以执行，那么可以把<code>qshell</code>所在的目录加入到环境变量<code>$PATH</code>中去。假设<code>qshell</code>命令被解压到路径<code>/home/jemy/tools</code>目录下面，那么我们可以把如下的命令写入到你所使用的bash所对应的配置文件中，如果是<code>/bin/bash</code>，那么就是<code>~/.bashrc</code>文件，如果是<code>/bin/zsh</code>，那么就是<code>~/.zshrc</code>文件中。写入的内容为：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>保存完毕之后，可以通过两种方式立即生效，其一为输入<code>source ~/.zshrc</code>或者<code>source ~/.bashrc</code>来使配置立即生效，或者完全关闭命令行，然后重新打开一个即可，接下来就可以在任何位置使用<code>qshell</code>命令了。</p>\n<p><strong>Windows平台</strong></p>\n<p>（1）闪退问题\n本工具是一个命令行工具，在Windows下面请先打开命令行终端，然后输入工具名称执行，不要双击打开，否则会出现闪退现象。</p>\n<p>（2）任何位置运行\n如果你希望可以在任意目录下使用<code>qshell</code>，请将<code>qshell</code>工具可执行文件所在目录添加到系统的环境变量中。由于Windows系统是图形界面，所以方便一点。假设<code>qshell.exe</code>命令被解压到路径<code>E:\\jemy\\tools</code>目录下面，那么我们把这个目录放到系统的环境变量<code>PATH</code>里面。</p>\n<figure><a href=\"https://dn-odum9helk.qbox.me/FrJbSsVTFtZyFcEPKhVMYLfsSd9e\" target=\"_blank\" rel=\"noopener noreferrer\"></a><figcaption>img</figcaption></figure>\n<p>（3）文本编码问题</p>\n<p>当使用 qupload 等需要配置文件的命令时，不要使用 Notepad++ 等编辑器来编写配置文件，在本地右键默认新建一个文本文档来进行编写。</p>\n<p>（4） Windows 平台文件路径和字符</p>\n<p>Windows 平台下的文件路径需要写为<code>\\\\</code>的写法，如<code>C:\\\\Users\\\\li\\\\Downloads</code>。</p>\n<p>在使用命令和配置文件时，需要使用 <code>“”</code> 双引号,不能使用单引号。</p>\n<h3> 3. 密钥设置</h3>\n<p>该工具有两类命令，一类需要鉴权，另一类不需要。</p>\n<p>需要鉴权的命令都需要依赖七牛账号下的 <code>AccessKey</code> 和 <code>SecretKey</code>。所以这类命令运行之前，需要使用 <code>account</code> 命令来设置下 <code>AccessKey</code> ，<code>SecretKey</code> 。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中name表示该账号的名称, 如果ak, sk, name首字母是\"-\", 需要使用如下的方式添加账号, 这样避免把该项识别成命令行选项:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以连续使用qshell account 添加账号ak, sk, name信息，qshell会保存这些账号的信息， 可以使用qshell user命令列举账号信息，在各个账号之间切换, 删除账号等</p>\n<h3> 4. 读取bucket所有文件写入到TXT文件中</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240509154002198</figcaption></figure>\n<h3> 5. 使用命令删除文件</h3>\n<p>使用batchdelete命令批量删除第2步列举出的列表文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240509154111783</figcaption></figure>\n<p>就酱，很简单是不是</p>\n",
      "date_published": "2024-05-09T15:40:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "为什么POST请求在重定向后会变成GET请求？",
      "url": "https://www.fanliu.top/art/%E4%B8%BA%E4%BB%80%E4%B9%88POST%E8%AF%B7%E6%B1%82%E5%9C%A8%E9%87%8D%E5%AE%9A%E5%90%91%E5%90%8E%E4%BC%9A%E5%8F%98%E6%88%90GET%E8%AF%B7%E6%B1%82%EF%BC%9F.html",
      "id": "https://www.fanliu.top/art/%E4%B8%BA%E4%BB%80%E4%B9%88POST%E8%AF%B7%E6%B1%82%E5%9C%A8%E9%87%8D%E5%AE%9A%E5%90%91%E5%90%8E%E4%BC%9A%E5%8F%98%E6%88%90GET%E8%AF%B7%E6%B1%82%EF%BC%9F.html",
      "summary": "为什么POST请求在重定向后会变成GET请求？ 在深入探讨这一现象之前，我们先要理解HTTP协议中重定向的基本概念以及POST和GET这两种请求方法的本质差异。本文旨在详细解析这一技术细节，帮助开发者更好地应对和理解网络请求中的重定向问题。 HTTP重定向基础 HTTP协议中，重定向是一种服务器告知客户端“你请求的资源已经不在原来的位置，请去新地址访问...",
      "content_html": "<h3> 为什么POST请求在重定向后会变成GET请求？</h3>\n<p>在深入探讨这一现象之前，我们先要理解HTTP协议中重定向的基本概念以及POST和GET这两种请求方法的本质差异。本文旨在详细解析这一技术细节，帮助开发者更好地应对和理解网络请求中的重定向问题。</p>\n<h4> HTTP重定向基础</h4>\n<p>HTTP协议中，重定向是一种服务器告知客户端“你请求的资源已经不在原来的位置，请去新地址访问”的机制。这一过程通过服务器响应特定的状态码来实现，其中最常见的是301（永久重定向）和302（临时重定向）。当客户端（如浏览器）收到这类响应时，它会自动根据响应头中的<code>Location</code>字段提供的URL发起新的请求。</p>\n<h4> POST与GET的区别</h4>\n<ul>\n<li><strong>GET</strong> 请求通常用于请求获取资源，其参数直接附加在URL后面，请求本身是幂等的，即多次请求具有同样的效果，不会对服务器产生额外的影响。</li>\n<li><strong>POST</strong> 请求则常用于提交数据到服务器，数据放在请求体中，不显示在URL上。POST请求不是幂等的，多次请求可能会有不同的结果，例如在服务器上创建多个资源。</li>\n</ul>\n<h4> 为什么POST请求在重定向时会变为GET</h4>\n<p>根据HTTP规范，当客户端接收到重定向响应时，如果原始请求是GET或HEAD，那么浏览器会自动按照新的URL重新发起相同的类型请求。然而，对于POST请求，情况就不同了。由于POST请求可能包含敏感数据或有副作用的操作（如修改服务器数据），自动重复这样的请求可能会导致不可预料的结果或数据丢失。因此，为了安全和幂等性的考虑，HTTP协议默认不允许自动以POST方式重定向。此时，大多数客户端（包括浏览器）会将POST请求降级为GET请求再进行重定向，这样可以确保重定向操作是安全且符合幂等性的要求。</p>\n<h4> 如何处理POST重定向</h4>\n<p>尽管HTTP标准并不推荐对POST请求进行外部重定向，但在某些情况下，确实存在需求。为此，HTTP/1.1引入了状态码307 Temporary Redirect和308 Permanent Redirect。这两个状态码的特点是，与302和301不同，它们在重定向时不改变请求方法，即如果原请求是POST，重定向后仍然是POST请求。然而，需要注意的是，并非所有客户端都完全支持307和308的这一特性，尤其是在一些老版本或非标准的浏览器中。</p>\n<h4> 实践建议</h4>\n<ol>\n<li><strong>避免不必要的重定向</strong>：尽量设计应用程序逻辑，减少对POST请求的重定向需求。</li>\n<li><strong>内部处理</strong>：在服务器端内部处理资源移动或逻辑重定向，而不是依赖客户端重定向。</li>\n<li><strong>使用307或308</strong>：如果必须重定向POST请求，且客户端支持，可以考虑使用307或308状态码。</li>\n<li><strong>客户端通知</strong>：在响应中包含信息，指导客户端如何处理后续操作，而不是直接依赖自动重定向。</li>\n</ol>\n<p>总之，POST请求在重定向后变为GET请求，是出于HTTP协议对安全性和幂等性的考量。开发者在设计应用时，应充分理解这一机制，合理规划请求流程，以避免数据丢失或功能异常。</p>\n",
      "date_published": "2024-05-14T17:52:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "在 Spring Boot 项目中使用自定义注解添加 Cache-Control 响应头",
      "url": "https://www.fanliu.top/art/%E5%9C%A8%20Spring%20Boot%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E6%B7%BB%E5%8A%A0%20Cache-Control%20%E5%93%8D%E5%BA%94%E5%A4%B4.html",
      "id": "https://www.fanliu.top/art/%E5%9C%A8%20Spring%20Boot%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E6%B7%BB%E5%8A%A0%20Cache-Control%20%E5%93%8D%E5%BA%94%E5%A4%B4.html",
      "summary": "在开发 Web 应用程序时，合理地设置 HTTP 响应头中的 Cache-Control 可以有效地提高应用的性能和用户体验。在这篇博客中，我们将介绍如何在 Spring Boot 项目中使用自定义注解，动态地在接口响应头中添加 Cache-Control。 1. 创建自定义注解 首先，我们需要定义一个自定义注解，用于标记需要添加 Cache-Cont...",
      "content_html": "<h1> 在 Spring Boot 项目中使用自定义注解添加 Cache-Control 响应头</h1>\n<p>在开发 Web 应用程序时，合理地设置 HTTP 响应头中的 <code>Cache-Control</code> 可以有效地提高应用的性能和用户体验。在这篇博客中，我们将介绍如何在 Spring Boot 项目中使用自定义注解，动态地在接口响应头中添加 <code>Cache-Control</code>。</p>\n<h3> 1. 创建自定义注解</h3>\n<p>首先，我们需要定义一个自定义注解，用于标记需要添加 <code>Cache-Control</code> 的控制器方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2. 创建拦截器</h3>\n<p>接下来，我们需要创建一个 Spring 的拦截器，用于在处理请求时检查方法是否有这个注解，如果有，就在响应头中添加 <code>Cache-Control</code>。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3. 注册拦截器</h3>\n<p>我们需要在 Spring 配置类中注册这个拦截器。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4. 在控制器方法上使用注解</h3>\n<p>最后，我们可以在控制器方法上使用这个注解，指定需要的 <code>Cache-Control</code> 值。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 5. 现存问题</h3>\n<p>接口报错也会设置响应头 我们该如何解决呢</p>\n<p>因为博主用的 Ruoyi框架，就以此框架举例</p>\n<p>找到全局异常处理器</p>\n<p>若依的在这个类 com.ruoyi.framework.web.exception.GlobalExceptionHandler</p>\n<p>由于他这个是后置处理 我们在基础上做响应头的覆盖就可以了，博主还对此全局异常处理做了优化</p>\n<p>使其 在接口报错的时候响应正确的状态码，不会再一股脑的返回200状态</p>\n<p>也算是解决了一个bug</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样处理后 即使报错 客户端会重新发送请求</p>\n<figure><figcaption>image-20240606182541227</figcaption></figure>\n<figure><figcaption>image-20240606182630256</figcaption></figure>\n<h3> 5. 总结</h3>\n<p>通过以上步骤，我们实现了一个自定义注解 <code>@CacheControl</code>，并使用拦截器动态地在 HTTP 响应头中添加 <code>Cache-Control</code>。这样可以根据不同的接口需求灵活地设置缓存策略，提升应用的性能和用户体验。</p>\n<p>希望这篇博客能帮助您更好地理解和实现自定义注解在 Spring Boot 项目中的应用。如果有任何问题或建议，欢迎在评论区留言讨论。</p>\n",
      "date_published": "2024-06-06T18:27:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "宝塔nginx缓存清理",
      "url": "https://www.fanliu.top/art/%E5%AE%9D%E5%A1%94nginx%E7%BC%93%E5%AD%98%E6%B8%85%E7%90%86.html",
      "id": "https://www.fanliu.top/art/%E5%AE%9D%E5%A1%94nginx%E7%BC%93%E5%AD%98%E6%B8%85%E7%90%86.html",
      "summary": "在工作中使用宝塔部署项目时，我发现宝塔会奇怪地缓存接口的数据。经过排查，发现只有设置了响应头包含 Cache-Control 的接口才会被宝塔Nginx的反向代理缓存。 于是，我开始着手解决这个问题。 首先，我找到了宝塔Nginx中反向代理的配置文件和缓存目录。一旦确定了位置，解决思路也就清晰了。 步骤一：删除缓存目录中的文件 反向代理的缓存目录位于：...",
      "content_html": "<h1> 宝塔Nginx缓存清理</h1>\n<p>在工作中使用宝塔部署项目时，我发现宝塔会奇怪地缓存接口的数据。经过排查，发现只有设置了响应头包含 <code>Cache-Control</code> 的接口才会被宝塔Nginx的反向代理缓存。</p>\n<p>于是，我开始着手解决这个问题。</p>\n<p>首先，我找到了宝塔Nginx中反向代理的配置文件和缓存目录。一旦确定了位置，解决思路也就清晰了。</p>\n<h2> 步骤一：删除缓存目录中的文件</h2>\n<p>反向代理的缓存目录位于：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>要清除缓存，只需执行以下命令：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> 步骤二：修改配置文件以禁止缓存</h2>\n<p>接下来，需要修改Nginx的配置文件，防止其继续缓存。在文件 <code>/www/server/nginx/conf/proxy.conf</code> 中找到 <code>proxy_cache cache_one;</code> 这一行，并将其注释掉：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在宝塔内对某个反向代理域名打开缓存开关时，<code>proxy_cache cache_one</code> 会自动添加到反向代理的配置代码中，此时缓存才会再次针对该反向代理域名生效。</p>\n<p>通过上述步骤，我们成功地清除了宝塔Nginx的缓存，并防止其再次缓存不必要的数据。如果需要对某个特定域名进行缓存，可以在宝塔内单独开启缓存开关。</p>\n<p>希望这篇文章能帮助到你，解决在宝塔Nginx缓存方面遇到的问题。</p>\n",
      "date_published": "2024-06-06T18:20:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "服务器挖矿病毒处理指南",
      "url": "https://www.fanliu.top/art/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92.html",
      "id": "https://www.fanliu.top/art/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92.html",
      "summary": "挖矿程序为了最大程度获取利益，会存放大量的持久化后门，导致病毒难以清理或无法杀死。如果您在未购买云安全中心服务的情况下遇到挖矿病毒，可以采取如下措施排查和处理。 0. 前言 最近公司服务器突然 cpu 的占用变成 99％ 经过排查发现是一个挖矿程序入侵 服务器的 /tmp 文件夹进行持续性的挖矿 此贴根据阿里云相关文档和自己实践整理出 找到的挖矿进程 ...",
      "content_html": "<blockquote>\n<p>挖矿程序为了最大程度获取利益，会存放大量的持久化后门，导致病毒难以清理或无法杀死。如果您在未购买云安全中心服务的情况下遇到挖矿病毒，可以采取如下措施排查和处理。</p>\n</blockquote>\n<h3> 0. 前言</h3>\n<p>最近公司服务器突然 cpu 的占用变成 99％ 经过排查发现是一个挖矿程序入侵 服务器的 /tmp 文件夹进行持续性的挖矿 此贴根据阿里云相关文档和自己实践整理出</p>\n<p>找到的挖矿进程</p>\n<figure><figcaption>0499df1640b55903adee5b83e790bd4c</figcaption></figure>\n<h3> 1. Linux系统</h3>\n<ol>\n<li>\n<p>阻断恶意网络通信。</p>\n<p>在发现主机存在挖矿行为后，由于完整地处理整个挖矿事件的周期比较长，所以为了及时控制挖矿影响，需要首先阻断挖矿木马的网络通信行为。</p>\n<ol>\n<li>\n<p>执行以下命令，查看当前系统网络连接状态。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image</figcaption></figure>\n</li>\n<li>\n<p>将以下命令中<code>c2地址</code>替换为正常业务不会使用的可疑远程地址（Foreign Address），然后执行下述命令添加防火墙规则，阻断服务器与该可疑地址之间的所有网络连接。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>清除计划任务。</p>\n<p>挖矿木马常通过计划任务实现<strong>定期下载（更新）并启动</strong>挖矿木马，如果仅清理挖矿进程、挖矿木马文件，并不能根治挖矿程序，且会出现挖矿反复的情况。</p>\n<p>排查以下计划任务文件，删除计划任务中的挖矿木马下载和启动任务。</p>\n<ul>\n<li>\n<p>查看当前用户或指定用户（<code>username</code>）的计划任务。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>主机所有计划任务文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p>清除自启动服务项。</p>\n<ol>\n<li>\n<p>执行以下命令，排查系统所有自启动服务。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>找到对应可疑服务的单元文件，排查服务详细信息。</p>\n<p>将命令中<code>*</code>替换为服务名称，<code>&lt;service_unit_name&gt;</code>替换为服务的单元文件名称。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>如果发现恶意的自启动服务项，使用以下命令禁用服务，删除对应单元文件。</p>\n<p>将命令中<code>&lt;service name&gt;</code>替换为服务名称，<code>&lt;service_unit_name&gt;</code>替换为服务的单元文件名称。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>排查以下服务路径是否有自启动服务，然后参考以上步骤进行清理。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>清除SSH公钥。</p>\n<p>挖矿木马通常会将黑客SSH公钥写入<code>**~/.ssh/authorized_keys**</code>文件中，以便黑客可以通过SSH免密登录受害主机，重新植入恶意文件。您需要排查<code>**~/.ssh/authorized_keys**</code>文件，如果发现可疑公钥，立即删除。</p>\n</li>\n<li>\n<p>清除<code>.so</code>劫持。</p>\n<p>通过<code>**/etc/ld.so.preload**</code>文件设定预加载的<code>.so</code>文件，可以劫持常见的系统命令，例如<code>top/ps/netstat</code>等，达到隐藏挖矿进程的目的。</p>\n<ol>\n<li>\n<p>执行以下命令，排查预加载的<code>.so</code>文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令，删除预加载劫持。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n<li>\n<p>清除恶意账号。</p>\n<p>部分挖矿木马家族会创建新的<strong>后门账号</strong>，以达到长期控制受害主机的目的。执行以下命令，查看恶意账号，然后手动删除相关账号信息。</p>\n<ul>\n<li>\n<p>通过日志查看近期是否有创建账号行为。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>通过<code>/etc/passwd</code>文件查看是否有可疑账号。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>通过账户的<code>home</code>目录查看可疑账户的创建或最近活跃时间，需特别关注近期创建的<code>home</code>目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p>防修改对抗。</p>\n<p>部分挖矿木马在写入计划任务、自启动等持久化文件后，会为对应文件设置一个<strong>不可更改</strong>的属性，防止对应持久化任务被删除。</p>\n<figure><figcaption>image</figcaption></figure>\n<p>如上图，遇到此类情况可以执行以下命令，恢复文件属性后再删除对应任务。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>清除挖矿木马进程。</p>\n<ol>\n<li>\n<p>挖矿进程通常占用较高的CPU，通过以下命令可以排查可疑的挖矿进程。</p>\n<ul>\n<li>\n<p>排查占用主机大量CPU的进程。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image</figcaption></figure>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image</figcaption></figure>\n</li>\n<li>\n<p>排查异常网络连接行为。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image</figcaption></figure>\n</li>\n<li>\n<p>获取可疑进程的文件路径。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>执行以下命令，终止挖矿进程，并清理挖矿文件。</p>\n</li>\n</ol>\n<p>​</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2. Linux系统（特定挖矿事件处理）</h3>\n<h4> 1. 伪装AliyunDuns的挖矿</h4>\n<ol>\n<li>\n<p>执行以下命令，排查持久化自启动项。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>如果有返回结果，表示存在自启动服务项，执行以下命令，删除自启动服务项。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>排查并处理异常用户。</p>\n<ol>\n<li>\n<p>执行下述命令查询系统用户列表，锁定异常用户名称。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行下述命令查看异常系统用户的信息。异常系统用户以<code>shaojiang99</code>为例。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行下述命令删除异常系统用户。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n</li>\n</ol>\n<h4> 2. Skidmap手动处理</h4>\n<ol>\n<li>\n<p>执行以下命令，删除自启动服务项。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>用户手动恢复SSH公钥文件<code>authorized_keys</code>。</p>\n</li>\n</ol>\n<h4> 3. Cleanfda手动处理</h4>\n<ol>\n<li>\n<p>排查以下计划任务路径，查看计划任务是否存在可疑脚本执行，例如<code>/etc/upat.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>排查被修改过的命令（<code>ps</code>、<code>pstree</code>、<code>top</code>等原程序会被加上后缀<code>.original</code>进行重命名）。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>排查SSH公钥，删除未知公钥。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<p>示例：</p>\n<div class=\"language-plain line-numbers-mode\" data-ext=\"plain\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 4. Outlaw家族挖矿</h4>\n<ol>\n<li>\n<p>排查所有<code>cron</code>计划任务，查看是否存在<code>.configrc5/</code>字符串。</p>\n<ul>\n<li>\n<p>计划任务路径：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令排查。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p>如果存在，执行以下命令，删除相关文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h4> 5. kinsing家族挖矿</h4>\n<ol>\n<li>\n<p>执行以下命令排查<code>cron</code>计划任务，查看是否存在类似<code>gi.sh | bash &gt; /dev/null</code>的内容，如存在请删除该行。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令排查是否存在<code>/lib/systemd/system/bot.service</code>服务。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>如果存在以上服务，执行以下命令排查<code>/etc/ld.so.preload</code>，查看是否存在<code>libsystem.so</code>文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>排查到<code>libsystem.so</code>文件路径后，删除<code>libsystem.so</code>文件。</p>\n</li>\n</ol>\n<h3> 3. Windows系统</h3>\n<ol>\n<li>\n<p>在PowerShell中执行以下命令，通过CPU占用情况排查可疑的挖矿进程。</p>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令，查看挖矿进程的磁盘文件、进程启动命令的参数。</p>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>结束挖矿进程，清除挖矿文件。</p>\n</li>\n<li>\n<p>执行以下命令，检查主机连接的可疑网络端口。</p>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令，检查服务器中hosts文件是否存在挖矿程序的矿池地址。</p>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令，排查是否存在挖矿程序设定的计划任务。</p>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ol>\n",
      "date_published": "2024-08-17T12:20:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "技术分享"
      ]
    },
    {
      "title": "docker安装MySQL_全网最佳教程",
      "url": "https://www.fanliu.top/docker/docker%E5%AE%89%E8%A3%85MySQL.html",
      "id": "https://www.fanliu.top/docker/docker%E5%AE%89%E8%A3%85MySQL.html",
      "summary": "docker安装MySQL_全网最佳教程 此教程适合用于企业项目中的 MySQL，配置注释详细全面，并准备了一键安装的脚本 1. 使用命令拉取mysql 拉取mysql的命令为 docker pull mysql ，但是这样的话，docker会自动帮你拉取最新的版本的mysql，一般最好就是在mysql后面指定版本号，才能拉取到想要的版本。我这里选择拉...",
      "content_html": "<h2> docker安装MySQL_全网最佳教程</h2>\n<p>此教程适合用于企业项目中的 MySQL，配置注释详细全面，并准备了一键安装的脚本</p>\n<h3> 1. 使用命令拉取mysql</h3>\n<p>拉取mysql的命令为 <strong>docker pull mysql</strong> ，但是这样的话，docker会自动帮你拉取最新的版本的mysql，一般最好就是在mysql后面指定版本号，才能拉取到想要的版本。我这里选择拉取mysql5.7，命令如下</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 2. 检查下载的mysql镜像</h3>\n<p>我们可以使用如下命令检查当前下载好的镜像：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240627224328181</figcaption></figure>\n<h3> 3. 创建对应映射挂载目录</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4. 运行docker命令初始化启动容器</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240627225413237</figcaption></figure>\n<p>运行命令查询是否启动成功（此命令查询正在运行的容器）</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240627225618358</figcaption></figure>\n<p>出现mysql的容器说明正常运行</p>\n<h3> 5. 在云服务器和防火墙开放对应端口</h3>\n<p>略</p>\n<h3> 6. 测试连接</h3>\n<p>略</p>\n<h3> 7. 查看mysql挂载的文件夹</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240627230207587</figcaption></figure>\n<h3> 8. 修改mysql默认配置</h3>\n<ol>\n<li>\n<p>进入mysql 的挂载目录</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>通过vim命令创建配置文件 my.cnf</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>复制插入一下配置并保存（可按需调整）</p>\n<p>这个配置文件包含详细的注释，帮助你理解每个配置项的作用。确保根据你的实际需求和硬件资源进一步调整这些设置。</p>\n<div class=\"language-ini line-numbers-mode\" data-ext=\"ini\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>重启mysql的docker容器进行重载我们的配置</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>进入docker中的mysql容器内部查看文件是否配置成功</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240627231411487</figcaption></figure>\n</li>\n</ol>\n<h3> 9. 设置容器随docker自启动</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 10. 懒人一键部署脚本</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>复制保存上述脚本为 <code>setup_mysql.sh</code> 文件，并赋予执行权限：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>然后运行脚本：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>该脚本将自动完成 MySQL 镜像拉取、目录创建、配置文件生成、容器启动和自启动配置</p>\n<h3> 11. docker-compose部署</h3>\n<h4> 1. 创建初始文件夹</h4>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2. 创建 <code>my.cnf</code></h4>\n<p>在 <code>/docker/mysql/conf</code> 目录中创建一个名为 <code>my.cnf</code> 的文件，内容如下：</p>\n<div class=\"language-ini line-numbers-mode\" data-ext=\"ini\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3. 创建 <code>docker-compose.yaml</code></h4>\n<p>在 <code>/docker/mysql/</code> 目录中创建一个名为 <code>docker-compose.yaml</code> 的文件，内容如下：</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 4. 启动 MySQL 容器</h4>\n<p>在 <code>mysql-docker/</code> 目录中，运行以下命令来启动 MySQL 容器：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h4> 5. 检查 MySQL 容器状态</h4>\n<p>要检查 MySQL 容器是否运行，使用以下命令：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>这个 <code>docker-compose</code> 文件将自动完成 MySQL 镜像拉取、目录创建、配置文件挂载、容器启动和自启动配置，并包含所需的注释。这样，你的 MySQL 容器就可以根据配置文件自动化启动，并且保持数据和日志持久化。</p>\n",
      "date_published": "2024-06-27T22:27:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "docker",
        "mysql",
        "linux"
      ]
    },
    {
      "title": "带你深入了解 Docker 日志",
      "url": "https://www.fanliu.top/docker/%E5%B8%A6%E4%BD%A0%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3docker%E6%97%A5%E5%BF%97.html",
      "id": "https://www.fanliu.top/docker/%E5%B8%A6%E4%BD%A0%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3docker%E6%97%A5%E5%BF%97.html",
      "summary": "带你深入了解 Docker 日志 在现代应用开发中，Docker 已成为许多开发者和运维工程师的必备工具。它简化了应用的部署和管理，而日志作为监控和调试应用的重要手段，也显得尤为重要。本文将带你深入了解 Docker 日志的相关知识，包括如何设置日志轮转、如何屏蔽日志输出、如何查看和管理日志等。 1. Docker 日志驱动 Docker 支持多种日志...",
      "content_html": "<h2> 带你深入了解 Docker 日志</h2>\n<p>在现代应用开发中，Docker 已成为许多开发者和运维工程师的必备工具。它简化了应用的部署和管理，而日志作为监控和调试应用的重要手段，也显得尤为重要。本文将带你深入了解 Docker 日志的相关知识，包括如何设置日志轮转、如何屏蔽日志输出、如何查看和管理日志等。</p>\n<h3> 1. Docker 日志驱动</h3>\n<p>Docker 支持多种日志驱动，包括 <code>json-file</code>、<code>syslog</code>、<code>journald</code>、<code>gelf</code>、<code>fluentd</code> 等。默认情况下，Docker 使用 <code>json-file</code> 驱动记录日志，即将日志记录为 JSON 格式的文件。</p>\n<h3> 2. 设置日志轮转</h3>\n<p>长时间运行的容器会生成大量日志，占用大量磁盘空间。为了解决这个问题，我们可以通过设置日志轮转和大小限制来管理日志文件。以下是配置步骤：</p>\n<ol>\n<li>\n<p><strong>编辑 Docker 守护进程的配置文件</strong></p>\n<p>Docker 的配置文件通常位于 <code>/etc/docker/daemon.json</code>。你可以通过以下命令打开并编辑该文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>添加日志驱动和日志选项</strong></p>\n<p>假设你已经有一些配置，例如配置了镜像加速器，现在需要在此基础上添加日志驱动和日志选项：</p>\n<div class=\"language-json line-numbers-mode\" data-ext=\"json\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个配置将会：</p>\n<ul>\n<li>使用 <code>json-file</code> 作为日志驱动。</li>\n<li>每个日志文件的最大大小为 10MB。</li>\n<li>最多保留 3 个日志文件。</li>\n</ul>\n</li>\n<li>\n<p><strong>重启 Docker 守护进程</strong></p>\n<p>保存并关闭配置文件后，重启 Docker 守护进程以应用更改：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h3> 3. 制作容器时屏蔽日志输出</h3>\n<p>在某些情况下，你可能希望屏蔽容器的日志输出。可以通过重定向标准输出和标准错误输出到 <code>/dev/null</code> 来实现。以下是一个示例的 Docker Compose 文件配置：</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在这个配置中，<code>command</code> 部分使用 <code>sh -c</code> 启动一个 shell，然后将标准输出和标准错误输出都重定向到 <code>/dev/null</code>，从而屏蔽所有日志输出。</p>\n<h3> 4. 查看 Docker 日志</h3>\n<p>Docker 提供了 <code>docker logs</code> 命令来查看容器的日志。例如：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>你也可以使用 <code>-f</code> 参数实时查看日志，类似于 <code>tail -f</code> 命令：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 5. 管理 Docker 日志</h3>\n<ol>\n<li>\n<p><strong>手动清理日志</strong></p>\n<p>如果需要手动清理日志，可以删除日志文件。例如：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>使用外部日志管理工具</strong></p>\n<p>可以将日志导出到外部日志管理系统（如 ELK Stack、Graylog、Fluentd 等），集中管理和分析日志。可以在 Docker 中配置这些工具作为日志驱动。例如，将日志发送到 Fluentd：</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<p>通过这些方法，你可以有效地管理 Docker 容器的日志，避免日志文件过大占用磁盘空间，同时也可以根据需要查看和分析日志。</p>\n",
      "date_published": "2024-06-21T10:27:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "docker",
        "log"
      ]
    },
    {
      "title": "管理docker必备容器--Portainer基础教程",
      "url": "https://www.fanliu.top/docker/%E7%AE%A1%E7%90%86docker%E5%BF%85%E5%A4%87%E5%AE%B9%E5%99%A8-Portainer%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B.html",
      "id": "https://www.fanliu.top/docker/%E7%AE%A1%E7%90%86docker%E5%BF%85%E5%A4%87%E5%AE%B9%E5%99%A8-Portainer%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B.html",
      "summary": "简介 porttainer其实是很方便docker管理工具，自己用了也挺熟练的，可以说linux上安装docker，那么必须安装porttainer，考虑到有些小伙伴可能对porttainer不是很熟悉，所以做一个详细的教程，以便学习 介绍 Portainer是一款开源的容器管理工具，旨在简化Docker容器和Kubernetes集群的管理。通过提供一...",
      "content_html": "<h3> 简介</h3>\n<blockquote>\n<p>porttainer其实是很方便docker管理工具，自己用了也挺熟练的，可以说linux上安装docker，那么必须安装porttainer，考虑到有些小伙伴可能对porttainer不是很熟悉，所以做一个详细的教程，以便学习</p>\n</blockquote>\n<h4> 介绍</h4>\n<p>Portainer是一款<strong>开源的容器管理工具</strong>，旨在简化Docker容器和Kubernetes集群的管理。通过提供一个直观的Web界面，Portainer可以帮助用户轻松地创建、管理和维护容器，而无需使用复杂的命令行工具。</p>\n<h4> 功能</h4>\n<p>**容器管理工具：**Portainer支持Docker和Kubernetes，提供了一个统一的管理平台，帮助用户轻松管理和监控容器。</p>\n<p>**支持Docker和Kubernetes：**Portainer与Docker和Kubernetes完美集成，为用户提供了一个简单易用的界面来管理容器和集群。</p>\n<p>**简化操作：**Portainer通过Web界面简化了容器管理，用户无需熟练掌握Docker和Kubernetes命令即可完成各种操作。</p>\n<h3> 部署</h3>\n<blockquote>\n<p>我这里用到的是Linux中安装docker的情况下，运行docker命令一键部署的方式，相对来说是比较方便的。</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>这段代码表示的是拉取portainer-ce的镜像，然后创建一个名字为prtainer的docker容器，设置为一直运行（服务器重启，portainer也会跟随启动），映射端口为9000容器端口为9000</p>\n</blockquote>\n<ul>\n<li>运行完这段代码，你的portainer就已经启动起来了</li>\n<li>现在输入你服务器的ip加上端口号9000。 例：123.123.123.123:9000</li>\n<li>等待网页刷新容器启动进入portainer的初始化界面</li>\n</ul>\n<figure><figcaption>imag1sdsd2</figcaption></figure>\n<ul>\n<li>现在要做的就是设置用户名和密码</li>\n</ul>\n<figure><figcaption>ima387sds</figcaption></figure>\n<ul>\n<li>恭喜你，点击Get Started 就可以进入portainer的主功能区了</li>\n</ul>\n<h3> 使用</h3>\n<h4> docker容器介绍</h4>\n<figure><figcaption>ima27175141163</figcaption></figure>\n<ol>\n<li>\n<p>这个界面就是服务器的一个docker,我们点击进入\n</p>\n</li>\n<li>\n<p>点击containers进入docker容器运行管理（本机容器列表：支持启动、停止、杀进程、重启、删除、添加容器等操作，和敲命令效果是一样的。）\n</p>\n</li>\n<li>\n<p>点击进入查看docker容器的运行情况</p>\n</li>\n</ol>\n<h4> 容器管理（Containers）</h4>\n<p>查看容器列表：登录Portainer后，点击左侧菜单栏的“容器”选项，你将看到当前Docker环境中所有容器的列表。</p>\n<p>启动、停止和重启容器：在容器列表中，你可以看到每个容器右侧的操作按钮，包括启动、停止和重启。点击相应的按钮，即可对容器进行相应操作。</p>\n<p>查看容器日志：点击容器列表中的容器名称，进入容器详情页面。在此页面，点击“日志”选项卡，你可以查看容器的运行日志。</p>\n<p>进入容器控制台：在容器详情页面，点击“控制台”选项卡，然后点击“连接”按钮，即可进入容器的命令行控制台。</p>\n<p>容器升级：<strong>使用Portainer更新单一容器是非常简单的事情</strong>。</p>\n<p>随意进入某个容器的详情，点击<strong>编辑（Edit)</strong>：</p>\n<figure><figcaption>image-20230927175551544</figcaption></figure>\n<p>在编辑页面，更改镜像名称：</p>\n<figure><figcaption>im7175613908</figcaption></figure>\n<p><strong>注：如果想要更新容器到最新版，只需要添加latest即可；如果是更新到特别版本，请在尾部添加特定版本号，这些在docker hub上均可找到对应的信息。</strong></p>\n<p>然后点击<strong>部署容器</strong>即可：</p>\n<figure><figcaption>image-20230927175641738</figcaption></figure>\n<h4> 管理镜像（Images）</h4>\n<h5> 查看镜像列表：</h5>\n<p>点击左侧菜单栏的“镜像”选项，你将看到当前Docker环境中所有镜像的列表。</p>\n<p>搜索和拉取镜像：在镜像页面，点击右上角的“拉取镜像”按钮，输入镜像名称和标签，然后点击“拉取镜像”按钮，即可从Docker Hub或其他镜像仓库拉取镜像。</p>\n<figure><figcaption>image-20230927175804440</figcaption></figure>\n<h5> 删除镜像：</h5>\n<p>在镜像列表中，点击每个镜像右侧的垃圾桶图标，即可删除镜像。</p>\n<figure><figcaption>image-20230927175854172</figcaption></figure>\n<h4> 管理网络（Networks）</h4>\n<h5> 查看网络列表：</h5>\n<p>点击左侧菜单栏的“网络”选项，你将看到当前Docker环境中所有网络的列表。</p>\n<h5> 创建网络：</h5>\n<p>在网络页面，点击右上角的“创建网络”按钮，选择网络类型（桥接、主机或覆盖），输入网络名称，然后点击“创建网络”按钮，即可创建新的网络。</p>\n<h5> 删除网络：</h5>\n<p>在网络列表中，点击每个网络右侧的垃圾桶图标，即可删除网络。</p>\n<figure><figcaption>image-20230927175948107</figcaption></figure>\n<h4> 管理堆栈（Stacks）</h4>\n<h5> 查看堆栈列表：</h5>\n<p>点击左侧菜单栏的“堆栈”选项，你将看到当前Docker环境中所有堆栈的列表。堆栈是一组相关联的服务，使用Docker Compose文件定义，稍后我们也会用该功能带着大家做一些很酷的事情。</p>\n<h5> 创建堆栈：</h5>\n<p>在堆栈页面，点击右上角的“创建堆栈”按钮，输入堆栈名称，选择部署方式（Web编辑器、上传Compose文件或从URL部署），然后点击“创建堆栈”按钮，即可部署新的堆栈。</p>\n<h5> 更新堆栈：</h5>\n<p>在堆栈列表中，点击堆栈名称进入堆栈详情页面。在此页面，你可以修改Docker Compose文件，然后点击“更新堆栈”按钮，以便应用新的配置。</p>\n<h5> 删除堆栈：</h5>\n<p>在堆栈列表中，点击每个堆栈右侧的垃圾桶图标，即可删除堆栈。</p>\n<h3> 高级操作</h3>\n<h4> 自定义配置阿里云镜像加速仓库</h4>\n<blockquote>\n<p>下载镜像较慢的情况下，可以使用镜像加速仓库</p>\n</blockquote>\n<ol>\n<li>创建阿里云镜像</li>\n</ol>\n<figure><figcaption>image-20230927180611834</figcaption></figure>\n<ol start=\"2\">\n<li>成功创建阿里云镜像</li>\n</ol>\n<figure><figcaption>image-20230927180739184</figcaption></figure>\n",
      "image": "https://z1.ax1x.com/2023/09/27/pPb91xJ.png",
      "date_published": "2023-09-27T17:27:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "docker",
        "Portainer"
      ]
    },
    {
      "title": "01. 面向对象高级",
      "url": "https://www.fanliu.top/javaSE/01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html",
      "id": "https://www.fanliu.top/javaSE/01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7.html",
      "summary": "各位同学，接下来的三天课程中，我们继续学习面向对象的相关课程。面向对象是写Java程序的核心套路，如何你不懂面向对象，那就相当于Java你白学了。所以在接下来的三天时间里，各位同学也需要克服重重困难好好学习。 前面我们说过面向对象最核心的套路是：设计对象来处理数据，解决问题。 如果你把面向对象高级这一部分课程学好，你设计出来的对象将更加好用。 在正式学...",
      "content_html": "<h1> 01. 面向对象高级</h1>\n<p>各位同学，接下来的三天课程中，我们继续学习面向对象的相关课程。面向对象是写Java程序的核心套路，如何你不懂面向对象，那就相当于Java你白学了。所以在接下来的三天时间里，各位同学也需要克服重重困难好好学习。</p>\n<p>前面我们说过面向对象最核心的套路是：<strong>设计对象来处理数据，解决问题。</strong> 如果你把面向对象高级这一部分课程学好，你设计出来的对象将更加好用。</p>\n<p>在正式学习面向对象高级课程之前，我给大家提一些学习上的建议。目前我们学习的面向对象高级部分的知识点，就像一个一个的螺丝钉，在学习过程中你可能并不知道这些螺丝钉是用在哪里的，解决的什么问题。必须等这些内容都学习完之后，才能知道用这些螺丝钉可以用来搞飞机、造航母、造火箭。</p>\n<figure><figcaption>1663976726206</figcaption></figure>\n<p>所以，现阶段我们在学习过程中，主要关注下面几点就可以了。等整个基础课程学习完之后，再慢慢感在到哪里用。</p>\n<figure><figcaption>1663976889900</figcaption></figure>\n<h2> 一、静态</h2>\n<p>接下来，我们学习一下面向对象编程中很常见的一个关键字static.</p>\n<p>static读作静态，可以用来修饰成员变量，也能修饰成员方法。我们先来学习static修饰成员变量。</p>\n<h3> 1.1 static修饰成员变量</h3>\n<p>Java中的成员变量按照有无static修饰分为两种：<strong>类变量、实例变量</strong>。它们的区别如下图所示：</p>\n<figure><figcaption>1663977705413</figcaption></figure>\n<p>由于静态变量是属于类的，只需要通过类名就可以调用：<strong><code>类名.静态变量</code></strong></p>\n<p>实例变量是属于对象的，需要通过对象才能调用：<strong><code>对象.实例变量</code></strong></p>\n<ul>\n<li>下面是代码演示（注意静态变量，和实例变量是如何调用的）</li>\n</ul>\n<figure><figcaption>1663978511018</figcaption></figure>\n<p>为了让大家对于这两种成员变量的执行过程理解更清楚一点，在这里给大家在啰嗦几句，我们来看一下上面代码的内存原理。</p>\n<figure><figcaption>1663978808670</figcaption></figure>\n<ul>\n<li><strong>最后总结一下</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.2 static修饰成员变量的应用场景</h3>\n<p>学习完static修饰成员变量的基本使用之后，接下来我们学习一下static修饰成员变量在实际工作中的应用。</p>\n<p>在实际开发中，如果某个数据只需要一份，且希望能够被共享（访问、修改），则该数据可以定义成类变量来记住。</p>\n<blockquote>\n<p><strong>我们看一个案例</strong>**</p>\n<p>需求：系统启动后，要求用于类可以记住自己创建了多少个用户对象。**</p>\n</blockquote>\n<ul>\n<li>第一步：先定义一个<code>User</code>类，在用户类中定义一个static修饰的变量，用来表示在线人数；</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>第二步：再写一个测试类，再测试类中创建4个User对象，再打印number的值，观察number的值是否再自增。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>运行上面的代码，查看执行结果是：<strong><code>系统创建的User对象个数：4</code></strong></p>\n<h3> 1.3 static修饰成员方法</h3>\n<p>各位同学，学习完static修饰成员变量之后，接下来我们学习static修饰成员方法。成员方法根据有无static也分为两类：<strong>类方法、实例方法</strong></p>\n<figure><figcaption>1664004813041</figcaption></figure>\n<blockquote>\n<p>有static修饰的方法，是属于类的，称为<strong>类方法</strong>；调用时直接用类名调用即可。</p>\n</blockquote>\n<blockquote>\n<p>无static修饰的方法，是属于对象的，称为实例方法；调用时，需要使用对象调用。</p>\n</blockquote>\n<p>我们看一个案例，演示类方法、实例方法的基本使用</p>\n<ul>\n<li>先定义一个Student类，在类中定义一个类方法、定义一个实例方法</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>在定义一个测试类，注意类方法、对象方法调用的区别</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>搞清楚类方法和实例方法如何调用之后，接下来再啰嗦几句，和同学们聊一聊static修饰成员方法的内存原理。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1664005554987</figcaption></figure>\n<p>关于static修饰成员变量、和静态修饰成员方法这两种用法，到这里就学习完了。</p>\n<h3> 1.4 工具类</h3>\n<p>学习完static修饰方法之后，我们讲一个有关类方法的应用知识，叫做工具类。</p>\n<p>如果一个类中的方法全都是静态的，那么这个类中的方法就全都可以被类名直接调用，由于调用起来非常方便，就像一个工具一下，所以把这样的类就叫做工具类。</p>\n<ul>\n<li>我们写一个生成验证码的工具类</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>接着可以在任何位置调用<code>MyUtils</code>的<code>createCOde()方法</code>产生任意个数的验证码</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>工具类的使用就是这样子的，学会了吗？</p>\n<blockquote>\n<p>在补充一点，工具类里的方法全都是静态的，推荐用类名调用为了防止使用者用对象调用。我们可以把工具类的构造方法私有化。</p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.5 static的注意事项</h3>\n<p>各位同学，到现在在我们已经学会了static修饰的变量、方法如何调用了。但是有一些注意事项还是需要给大家说明一下，目的是让大家知道，使用static写代码时，如果出错了，要知道为什么错、如何改正。</p>\n<figure><figcaption>1664007168869</figcaption></figure>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.6 static应用（代码块）</h3>\n<p>各位同学，接下来我们再补充讲解一个知识点，叫代码块；代码块根据有无static修饰分为两种：静态代码块、实例代码块</p>\n<blockquote>\n<p><strong>我们先类学习静态代码块：</strong></p>\n</blockquote>\n<figure><figcaption>1664007549583</figcaption></figure>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>静态代码块不需要创建对象就能够执行</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面代码时，发现没有创建对象，静态代码块就已经执行了。</p>\n<figure><figcaption>1664007747151</figcaption></figure>\n<p>关于静态代码块重点注意：<strong>静态代码块，随着类的加载而执行，而且只执行一次。</strong></p>\n<blockquote>\n<p><strong>再来学习一下实例代码块</strong></p>\n</blockquote>\n<figure><figcaption>1664008215853</figcaption></figure>\n<p>实例代码块的作用和构造器的作用是一样的，用来给对象初始化值；而且每次创建对象之前都会先执行实例代码块。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来在测试类中进行测试，观察创建对象时，实例代码块是否先执行了。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>对于实例代码块重点注意：<strong>实例代码块每次创建对象之前都会执行一次</strong></p>\n<h3> 1.7 static应用（单例设计模式）</h3>\n<p>各位同学，关于static的应用我们再补充一个使用的技巧，叫做单例设计模式。</p>\n<p>所谓设计模式指的是，一类问题可能会有多种解决方案，而设计模式是在编程实践中，多种方案中的一种最优方案。</p>\n<p>关于静态的使用到这里，我们就学习完了。</p>\n<h2> 二、继承</h2>\n<h3> 2.1 继承快速入门</h3>\n<p>各位同学，我们继续学习面向对象相关内容。面向对象编程之所以能够能够被广大开发者认可，有一个非常重要的原因，是因为它有三大特征，继承、封装和多态。封装我们在基础班已经学过了，接下来我们学习一下继承。</p>\n<figure><figcaption>1664009338913</figcaption></figure>\n<p>接下来，我们演示一下使用继承来编写代码，注意观察继承的特点。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，写一个B类，让B类继承A类。在继承A类的同时，B类中新增一个方法print3</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来，我们再演示一下，创建B类对象，能否调用父类A的成员。再写一个测试类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>到这里，关于继承的基本使用我们就算学会了。为了让大家对继承有更深入的认识，我们来看看继承的内存原理。</p>\n<p>这里我们只需要关注一点：<strong>子类对象实际上是由子、父类两张设计图共同创建出来的。</strong></p>\n<p>所以，在子类对象的空间中，既有本类的成员，也有父类的成员。但是子类只能调用父类公有的成员。</p>\n<figure><figcaption>1664010590126</figcaption></figure>\n<h3> 2.2 继承的好处</h3>\n<p>各位同学，学习完继承的快速入门之后，接下来我们学习一下继承的好处，以及它的应用场景。</p>\n<p>我们通过一个案例来学习</p>\n<figure><figcaption>1664010915416</figcaption></figure>\n<p>观察代码发现，我们会发现Teacher类中和Consultant类中有相同的代码；其实像这种两个类中有相同代码时，没必要重复写。</p>\n<p>我们可以把重复的代码提取出来，作为父类，然后让其他类继承父类就可以了，这样可以提高代码的复用性。改造后的代码如下：</p>\n<figure><figcaption>1664011136599</figcaption></figure>\n<p>接下来使用继承来完成上面的案例，这里只演示People类和Teacher类，然后你尝试自己完成Consultant类。</p>\n<ul>\n<li>先写一个父类 People，用来设计Teacher和Consultant公有的成员。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>再写两个子类Teacher继承People类，同时在子类中加上自己特有的成员。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>最后再写一个测试类，再测试类中创建Teacher、Consultant对象，并调用方法。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行代码，打印结果如下：</p>\n<figure><figcaption>1664011737379</figcaption></figure>\n<p>关于继承的好处我们只需要记住：<strong>继承可以提高代码的复用性</strong></p>\n<h3> 2.3 权限修饰符</h3>\n<p>各位同学，在刚才使用继承编写的代码中我们有用到两个权限修饰符，一个是public（公有的）、一个是private（私有的），实际上还有两个权限修饰符，一个是protected（受保护的）、一个是缺省的（不写任何修饰符）。</p>\n<p>接下来我们就学习一下这四个权限修饰符分别有什么作用。</p>\n<blockquote>\n<p><strong>什么是权限修饰符呢？</strong></p>\n<p>权限修饰符是用来限制类的成员（成员变量、成员方法、构造器...）能够被访问的范围。</p>\n</blockquote>\n<p>每一种权限修饰符能够被访问的范围如下</p>\n<figure><figcaption>1664012151488</figcaption></figure>\n<p>下面我们用代码演示一下，在本类中可以访问到哪些权限修饰的方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来，在和Fu类同一个包下，创建一个测试类Demo，演示同一个包下可以访问到哪些权限修饰的方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来，在另一个包下创建一个Fu类的子类，演示不同包下的子类中可以访问哪些权限修饰的方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来，在和Fu类不同的包下，创建一个测试类Demo2，演示一下不同包的无关类，能访问到哪些权限修饰的方法；</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.4 单继承、Object</h3>\n<p>刚才我们写的代码中，都是一个子类继承一个父类，那么有同学问到，一个子类可以继承多个父类吗？</p>\n<p><strong>Java语言只支持单继承，不支持多继承，但是可以多层继承</strong>。就像家族里儿子、爸爸和爷爷的关系一样：一个儿子只能有一个爸爸，不能有多个爸爸，但是爸爸也是有爸爸的。</p>\n<figure><figcaption>1664016601977</figcaption></figure>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.5 方法重写</h3>\n<p>各位同学，学习完继承之后，在继承的基础之上还有一个很重要的现象需要给大家说一下。</p>\n<p>叫做方法重写。为了让大家能够掌握方法重写，我们先认识什么是方法重写，再说一下方法的应用场景。</p>\n<blockquote>\n<p><strong>什么是方法重写</strong></p>\n</blockquote>\n<p>当子类觉得父类方法不好用，或者无法满足父类需求时，子类可以重写一个方法名称、参数列表一样的方法，去覆盖父类的这个方法，这就是方法重写。</p>\n<p><strong>注意：重写后，方法的访问遵循就近原则</strong>。下面我们看一个代码演示</p>\n<p>写一个A类作为父类，定义两个方法print1和print2</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再写一个B类作为A类的子类，重写print1和print2方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来，在测试类中创建B类对象，调用方法</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行代码，我们发现真正执行的是B类中的print1和print2方法</p>\n<figure><figcaption>1664149862001</figcaption></figure>\n<p>知道什么是方法重写之后，还有一些注意事项，需要和大家分享一下。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>关于这些注意事项，同学们其实只需要了解一下就可以了。实际上我们实际写代码时，只要和父类写的一样就可以（ 总结起来就8个字：<strong>声明不变，重新实现</strong>）</p>\n<blockquote>\n<p><strong>方法重写的应用场景</strong></p>\n</blockquote>\n<p>学习完方法重写之后，接下来，我们还需要大家掌握方法重写，在实际中的应用场景。方法重写的应用场景之一就是：<strong>子类重写Object的toString()方法，以便返回对象的内容。</strong></p>\n<p>比如：有一个Student类，这个类会默认继承Object类。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其实Object类中有一个toString()方法，直接通过Student对象调用Object的toString()方法，会得到对象的地址值。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1664150713665</figcaption></figure>\n<p>但是，此时不想调用父类Object的toString()方法，那就可以在Student类中重新写一个toSting()方法，用于返回对象的属性值。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>重新运行测试类，结果如下</p>\n<figure><figcaption>1664150752636</figcaption></figure>\n<p>好了，到这里方法什么是方法重写，以及方法重写的应用场景我们就学习完了。</p>\n<h3> 2.6 子类中访问成员的特点</h3>\n<p>各位同学，刚才我们已经学习了继承，我们发现继承至少涉及到两个类，而每一个类中都可能有各自的成员（成员变量、成员方法），就有可能出现子类和父类有相同成员的情况，那么在子类中访问其他成员有什么特点呢？</p>\n<ul>\n<li><strong>原则：在子类中访问其他成员（成员变量、成员方法），是依据就近原则的</strong></li>\n</ul>\n<p>定义一个父类，代码如下</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再定义一个子类，代码如下。有一个同名的name成员变量，有一个同名的print1成员方法；</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来写一个测试类，观察运行结果，我们发现都是调用的子类变量、子类方法。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>如果子类和父类出现同名变量或者方法，优先使用子类的；此时如果一定要在子类中使用父类的成员，可以加this或者super进行区分。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.7 子类中访问构造器的特点</h3>\n<p>各位同学，我们知道一个类中可以写成员变量、成员方法，还有构造器。在继承关系下，子类访问成员变量和成员方法的特点我们已经学过了；接下来再学习子类中访问构造器的特点。</p>\n<p>我们先认识子类构造器的语法特点，再讲一下子类构造器的应用场景</p>\n<blockquote>\n<p><strong>子类中访问构造器的语法规则</strong></p>\n</blockquote>\n<ul>\n<li>\n<p>首先，子类全部构造器，都会先调用父类构造器，再执行自己。</p>\n<p>执行顺序，如下图按照① ② ③ 步骤执行：</p>\n</li>\n</ul>\n<figure><figcaption>1664160225526</figcaption></figure>\n<blockquote>\n<p><strong>子类访问构造器的应用场景</strong></p>\n</blockquote>\n<ul>\n<li>如果不想使用默认的<code>super()</code>方式调用父类构造器，还可以手动使用<code>super(参数)</code>调用父类有参数构造器。</li>\n</ul>\n<figure><figcaption>1664163881728</figcaption></figure>\n<blockquote>\n<p><strong>在本类中访问自己的构造方法</strong></p>\n</blockquote>\n<p>刚才我们学习了通过<code>super()</code>和<code>super(参数)</code>可以访问父类的构造器。有时候我们也需要访问自己类的构造器。语法如下</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1664170865036</figcaption></figure>\n<blockquote>\n<p><strong>最后我们被this和super的用法在总结一下</strong></p>\n</blockquote>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2021-05-11T08:22:12.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "javaSE"
      ]
    },
    {
      "title": "增加虚拟内存：提升服务器性能的有效方法",
      "url": "https://www.fanliu.top/linux/Linux%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%EF%BC%9A%E6%8F%90%E5%8D%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD.html",
      "id": "https://www.fanliu.top/linux/Linux%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%EF%BC%9A%E6%8F%90%E5%8D%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD.html",
      "summary": "增加虚拟内存：提升服务器性能的有效方法 在日常使用服务器的过程中，我们经常会遇到内存不足的情况。为了解决这个问题，我们可以通过增加虚拟内存（交换空间）来提高服务器的性能。本文将详细介绍如何为服务器增加虚拟内存，并确保其在重启后仍然有效。 为什么需要增加虚拟内存？ 虚拟内存（或交换空间）是操作系统用于将不常用的内存页暂时存储到磁盘上的一种机制。通过增加虚...",
      "content_html": "<h2> 增加虚拟内存：提升服务器性能的有效方法</h2>\n<p>在日常使用服务器的过程中，我们经常会遇到内存不足的情况。为了解决这个问题，我们可以通过增加虚拟内存（交换空间）来提高服务器的性能。本文将详细介绍如何为服务器增加虚拟内存，并确保其在重启后仍然有效。</p>\n<h3> 为什么需要增加虚拟内存？</h3>\n<p>虚拟内存（或交换空间）是操作系统用于将不常用的内存页暂时存储到磁盘上的一种机制。通过增加虚拟内存，可以在物理内存不足时，避免应用程序崩溃或性能显著下降。因此，为服务器增加虚拟内存是提升其稳定性和性能的有效方法。</p>\n<h3> 步骤一：关闭当前的交换文件</h3>\n<p>首先，我们需要关闭当前的交换文件。如果已经存在一个交换文件，我们需要先将其关闭：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤二：删除旧的交换文件</h3>\n<p>关闭了旧的交换文件后，我们可以将其删除，以便为新的交换文件腾出空间：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤三：创建一个新的交换文件</h3>\n<p>接下来，我们将创建一个新的交换文件。在本例中，我们将创建一个8GB的交换文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>如果您的系统不支持 <code>fallocate</code> 命令，可以使用以下命令：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤四：设置交换文件权限</h3>\n<p>为了确保交换文件的安全性，我们需要设置其权限，使只有root用户可以读写：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤五：设置交换文件</h3>\n<p>接下来，我们需要将新创建的文件设置为交换文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤六：启用新的交换文件</h3>\n<p>现在，我们可以启用新的交换文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 步骤七：确认新的交换文件是否启用</h3>\n<p>为了确保交换文件已成功启用，我们可以使用以下命令进行确认：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>如果一切正常，您应该会看到类似如下的输出：</p>\n<div class=\"language-plaintext line-numbers-mode\" data-ext=\"plaintext\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 步骤八：确保新交换文件在重启后仍然有效</h3>\n<p>为了确保新的交换文件在系统重启后仍然有效，我们需要将其添加到 <code>/etc/fstab</code> 文件中：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>您可以通过以下命令查看 <code>/etc/fstab</code> 文件内容，确认已经成功添加：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 结论</h3>\n<p>通过以上步骤，您已经成功为服务器增加了虚拟内存。这将显著提升服务器在高负载下的稳定性和性能。希望本教程对您有所帮助，如果有任何问题，欢迎在评论区留言讨论。</p>\n<p>祝您的服务器运行顺利！</p>\n",
      "date_published": "2024-06-27T17:37:54.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux常见问题笔记",
      "url": "https://www.fanliu.top/linux/Linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%AC%94%E8%AE%B0.html",
      "id": "https://www.fanliu.top/linux/Linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%AC%94%E8%AE%B0.html",
      "summary": "1. VMWare安装Linux操作系统找不到IP地址 输入linux指令ip addr 查看ip端口发现ip不存在 img 从图中可以看到，没有获取到linux系统的IP地址，这是为什么呢？ 是由于启动服务器时未加载网卡，导致IP地址初始化失败而造成的。 那么接下来我们就需要来修改网络初始化配置，设定网卡在系统启动时初始化。 具体操作步骤如下： 第一...",
      "content_html": "<h3> 1. VMWare安装Linux操作系统找不到IP地址</h3>\n<p>输入linux指令ip addr  查看ip端口发现ip不存在</p>\n<figure><figcaption>img</figcaption></figure>\n<p>从图中可以看到，没有获取到linux系统的IP地址，这是为什么呢？</p>\n<p>是由于启动服务器时未加载网卡，导致IP地址初始化失败而造成的。</p>\n<p>那么接下来我们就需要来修改网络初始化配置，设定网卡在系统启动时初始化。</p>\n<p>具体操作步骤如下：</p>\n<p>第一种方法</p>\n<p>1). 修改网卡的配置项</p>\n<div class=\"language-cobol line-numbers-mode\" data-ext=\"cobol\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置内容</p>\n<figure><figcaption>img</figcaption></figure>\n<p>2). 重新启动虚拟机</p>\n<p>重启之后, 再次输入root的用户名密码，登录到Linux系统之后，可以通过指令 ip addr 来<a href=\"https://so.csdn.net/so/search?q=%E6%9F%A5%E7%9C%8BIP%E5%9C%B0%E5%9D%80&amp;spm=1001.2101.3001.7020\" target=\"_blank\" rel=\"noopener noreferrer\">查看IP地址</a>。这时候查看ip，发现ip正常可以使用</p>\n<p>注意：如果修改配置后还无法查看ip，再使用下面方法</p>\n<p>第二种方法：虚拟网络编辑器还原默认设置</p>\n<p>步骤：关闭所有虚拟机/编辑/打开虚拟网络编辑器/还原默认设置/选择是</p>\n<p>这时候可以这样操作</p>\n<figure><figcaption>img</figcaption></figure>\n<p>下一步</p>\n<figure><figcaption>img</figcaption></figure>\n<p>下一步</p>\n<figure><figcaption>img</figcaption></figure>\n<p>然后重启虚拟机，输入ip addr指令</p>\n<p>发现可以查看ip地址，问题解决</p>\n<p>注意：虚拟网络编辑器还原默认设置一定要关闭虚拟机。</p>\n<h3> 2. Linux系统root用户登录后显示 “-bash-4.2#” 解决方案</h3>\n<blockquote>\n<p>一.【问题】登录root用户的时候,不是[root@localhost ~]# 而是 -bash-4.2</p>\n</blockquote>\n<figure><figcaption>b64e82db09e344ad9b741cd4985993a7.png</figcaption></figure>\n<blockquote>\n<p>二.【*<strong>问题的原因是*</strong>】不小心删除了/root文件夹下的.bash_profile与 .bashrc两个文件，这里我们只需要将这两个文件还原即可。具体操作如下: 1.查看/root目录下是否有文件缺失，这里使用命令ls -a，以显示隐藏文件，我们可以看到. bash_profile和. bashrc两个文件缺失</p>\n</blockquote>\n<figure><figcaption>dd9f9fd7be47438494c880d0e5aac773.png</figcaption></figure>\n<blockquote>\n<p>2.*<strong>找到. bash rc和. bash_profile两个文件的位置。我们可以看到，这两个文件在录/etc/skel下*</strong></p>\n</blockquote>\n<figure><figcaption>b551aae1893140c4bdcc2339c58762ee.png</figcaption></figure>\n<blockquote>\n<p>3.复制这两个文件到目录/ root下</p>\n</blockquote>\n<figure><figcaption>5e664e9df3284db285d2fa629267b92c.png</figcaption></figure>\n<blockquote>\n<p>4.进入到目录/ root下查看，查看命令ls -a,可以看到已复制. bashrc和. bash_profile到/root目录下</p>\n</blockquote>\n<figure><figcaption>7fabe2bcb2ea4c81af3a52ffbd585edb.png</figcaption></figure>\n<blockquote>\n<p>5.此时我们只需键入reboot重启系统即可，重启后显示变为[root@localhost ~]#</p>\n</blockquote>\n<figure><figcaption>9fb4278a44ad42aa81f409e4be309091.png</figcaption></figure>\n<h3> 3.另一个程序已锁定文件的一部分，进程无法访问 打不开磁盘“”或它所依赖的某个快照磁盘。 模块“Disk”启动失败</h3>\n<p>今天虚拟机开启着，电脑意外重启。重启后导致虚拟机打不开，出现下面的问题。\n\n<strong>解决办法：</strong>\n找到报错的这个目录，然后删除里面所有的.lck后缀的文件\n\n删除之后再次启动就可以启动成功了</p>\n",
      "date_published": "2021-03-03T18:37:54.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux系统字体缺失的修复方法",
      "url": "https://www.fanliu.top/linux/Linux%E7%B3%BB%E7%BB%9F%E5%AD%97%E4%BD%93%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%B3%95.html",
      "id": "https://www.fanliu.top/linux/Linux%E7%B3%BB%E7%BB%9F%E5%AD%97%E4%BD%93%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%B3%95.html",
      "summary": "Linux系统字体缺失的修复方法 在 Linux系统中如果部署一些处理 office文档 的服务的时候，会出处理后的文档字符为□的情况，若出现这种状况，则说明此服务器下缺少对应的字体文件。接着看处理方法 复制Windows系统字体 Windows系统 有着相对全面的字体库，所以我们可以将 Windows系统 下的字体复制过来。 Windows系统里的字...",
      "content_html": "<h2> Linux系统字体缺失的修复方法</h2>\n<blockquote>\n<p>在 Linux系统中如果部署一些处理 office文档 的服务的时候，会出处理后的文档字符为□的情况，若出现这种状况，则说明此服务器下缺少对应的字体文件。接着看处理方法</p>\n</blockquote>\n<h3> 复制Windows系统字体</h3>\n<p>Windows系统 有着相对全面的字体库，所以我们可以将 Windows系统 下的字体复制过来。</p>\n<p>Windows系统里的字体目录为：C:\\Windows\\Fonts，注意：该文件夹里有三种后缀的文件：.fon，.ttf，.ttc，我们只需要复制.ttf和.ttc后缀的文件。</p>\n<p>先打开 C:\\Windows\\ 文件夹，将 Fonts目录打成zip压缩包。</p>\n<figure><figcaption>image-20240309175201582</figcaption></figure>\n<p>打开shell工具连接我们的 Linux服务器（这里推荐 FinalShell ）</p>\n<figure><figcaption>image-20240309175603950</figcaption></figure>\n<p>输入命令新建并进入 win字体的文件夹</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240309175854944</figcaption></figure>\n<p>安装上传文件工具</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20240309180710598</figcaption></figure>\n<p>输入 rz 上传文件</p>\n<figure><figcaption>image-20240309180829322</figcaption></figure>\n<p>接着输入以下命令解压并删除压缩包</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>匹配删除不需要的文件</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 生成字体的索引信息</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 更新字体缓存</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>ok，步骤走到这里，Linux服务器 上已经安装好Windows下的全部字体，可以重启您的项目试试结果了</p>\n",
      "date_published": "2024-03-09T18:00:54.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "如何更改 Linux 登录信息",
      "url": "https://www.fanliu.top/linux/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9Linux%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF.html",
      "id": "https://www.fanliu.top/linux/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9Linux%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF.html",
      "summary": "在使用 Linux 时，你可能会希望自定义登录时显示的欢迎信息和系统更新提示。本篇博客将详细介绍如何通过修改系统配置文件来实现这一目标。 步骤一：更改欢迎信息 (MOTD) MOTD (Message of the Day) 是用户每次登录系统时看到的欢迎信息。在大多数Linux发行版中，这个信息存储在 /etc/motd 文件中。我们可以通过编辑这个...",
      "content_html": "<h1> 如何更改 Linux 登录信息</h1>\n<p>在使用 Linux 时，你可能会希望自定义登录时显示的欢迎信息和系统更新提示。本篇博客将详细介绍如何通过修改系统配置文件来实现这一目标。</p>\n<h2> 步骤一：更改欢迎信息 (MOTD)</h2>\n<p>MOTD (Message of the Day) 是用户每次登录系统时看到的欢迎信息。在大多数Linux发行版中，这个信息存储在 <code>/etc/motd</code> 文件中。我们可以通过编辑这个文件来自定义欢迎信息。</p>\n<h3> 修改 <code>/etc/motd</code> 文件</h3>\n<ol>\n<li>\n<p>打开终端并以超级用户身份编辑 <code>/etc/motd</code> 文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>输入你希望显示的欢迎信息。例如：</p>\n<div class=\"language-plaintext line-numbers-mode\" data-ext=\"plaintext\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>保存并退出编辑器。在 nano 编辑器中，按 <code>Ctrl+O</code> 保存文件，按 <code>Ctrl+X</code> 退出编辑器。</p>\n</li>\n<li>\n<p>修改前</p>\n<figure><figcaption>image-20240712113748577</figcaption></figure>\n</li>\n<li>\n<p>修改后</p>\n<figure><figcaption>image-20240712113548144</figcaption></figure>\n</li>\n</ol>\n<h2> 步骤二：更改更新提示</h2>\n<p>更新提示通常由 <code>dnf</code> 或 <code>yum</code> 等包管理工具生成。我们可以通过修改它们的配置文件来禁用或调整这些提示。</p>\n<h3> 修改 <code>dnf</code> 配置文件</h3>\n<ol>\n<li>\n<p>打开并编辑 <code>dnf</code> 的自动更新配置文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>找到以下部分并进行修改：</p>\n<div class=\"language-ini line-numbers-mode\" data-ext=\"ini\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>将 <code>upgrade_type</code> 修改为 <code>none</code> 以禁用自动升级提示：</p>\n<div class=\"language-ini line-numbers-mode\" data-ext=\"ini\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>保存并退出编辑器。</p>\n</li>\n</ol>\n<h3> 禁用 <code>dnf-automatic</code> 插件</h3>\n<p>如果你使用 <code>dnf-automatic</code> 插件，可以通过以下命令禁用它：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> 步骤三：更改登录时间和IP信息</h2>\n<p>登录时间和IP信息通常是系统自动生成的。我们可以通过在SSH配置文件中指定一个自定义的Banner文件来更改这些信息。</p>\n<h3> 修改 <code>sshd_config</code> 文件</h3>\n<ol>\n<li>\n<p>打开并编辑SSH服务的配置文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>找到并修改 <code>Banner</code> 配置项，指定一个包含自定义内容的文件路径：</p>\n<div class=\"language-ini line-numbers-mode\" data-ext=\"ini\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>保存并退出编辑器。</p>\n</li>\n</ol>\n<h3> 编辑 <code>issue.net</code> 文件</h3>\n<ol>\n<li>\n<p>打开并编辑 <code>issue.net</code> 文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>输入你希望显示的内容。例如：</p>\n<div class=\"language-plaintext line-numbers-mode\" data-ext=\"plaintext\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>保存并退出编辑器。</p>\n</li>\n</ol>\n<h3> 重启SSH服务</h3>\n<p>完成以上步骤后，重新启动SSH服务以应用更改：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> 总结</h2>\n<p>通过这些配置，你不仅可以提高系统的个性化程度，还能增强用户体验。</p>\n<p>希望这篇文章对你有所帮助，如果你有任何问题或建议，欢迎在评论区留言讨论。</p>\n",
      "date_published": "2024-07-12T12:37:54.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "01_Nginx - 从入门到实践",
      "url": "https://www.fanliu.top/nginx/nginx_01.html",
      "id": "https://www.fanliu.top/nginx/nginx_01.html",
      "summary": "image-20220724221108300 1. Nginx 介绍 Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月也不需要重新启动，还能在不间断服务的情况下对软件版本进行热更新。性能是 Nginx 最重要的考量，其占用内存少、并发能力强、能支持高达 5w 个...",
      "content_html": "<h1> Nginx - 从入门到实践</h1>\n<figure><figcaption>image-20220724221108300</figcaption></figure>\n<h2> 1. Nginx 介绍</h2>\n<p>Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月也不需要重新启动，还能在不间断服务的情况下对软件版本进行热更新。性能是 Nginx 最重要的考量，其占用内存少、并发能力强、能支持高达 5w 个并发连接数，最重要的是，Nginx 是免费的并可以商业化，配置使用也比较简单。</p>\n<p>Nginx 的最重要的几个使用场景：</p>\n<ol>\n<li>静态资源服务，通过本地文件系统提供服务；</li>\n<li>反向代理服务，延伸出包括缓存、负载均衡等；</li>\n<li>API 服务，OpenResty ；</li>\n</ol>\n<p>对于前端来说 Node.js 不陌生了，Nginx 和 Node.js 的很多理念类似，HTTP 服务器、事件驱动、异步非阻塞等，且 Nginx 的大部分功能使用 Node.js 也可以实现，但 Nginx 和 Node.js 并不冲突，都有自己擅长的领域。Nginx 擅长于底层服务器端资源的处理（静态资源处理转发、反向代理，负载均衡等），Node.js 更擅长上层具体业务逻辑的处理，两者可以完美组合，共同助力前端开发。</p>\n<p>下面我们着重学习一下 Nginx 的使用。</p>\n<h2> 2. 相关概念</h2>\n<h3> 2.1 简单请求和非简单请求</h3>\n<p>首先我们来了解一下简单请求和非简单请求，如果同时满足下面两个条件，就属于简单请求：</p>\n<ol>\n<li>请求方法是 <code>HEAD</code>、<code>GET</code>、<code>POST</code> 三种之一；</li>\n<li>HTTP 头信息不超过右边着几个字段：<code>Accept</code>、<code>Accept-Language</code>、<code>Content-Language</code>、<code>Last-Event-ID</code> <code>Content-Type</code> 只限于三个值 <code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code>；</li>\n</ol>\n<p>凡是不同时满足这两个条件的，都属于非简单请求。</p>\n<p>浏览器处理简单请求和非简单请求的方式不一样：</p>\n<h4> 2.1.1 <strong>简单请求</strong></h4>\n<p>对于简单请求，浏览器会在头信息中增加 <code>Origin</code> 字段后直接发出，<code>Origin</code> 字段用来说明，本次请求来自的哪个源（协议+域名+端口）。</p>\n<p>如果服务器发现 <code>Origin</code> 指定的源不在许可范围内，服务器会返回一个正常的 HTTP 回应，浏览器取到回应之后发现回应的头信息中没有包含 <code>Access-Control-Allow-Origin</code> 字段，就抛出一个错误给 XHR 的 <code>error</code> 事件；</p>\n<p>如果服务器发现 <code>Origin</code> 指定的域名在许可范围内，服务器返回的响应会多出几个 <code>Access-Control-</code> 开头的头信息字段。</p>\n<h4> 2.1.2 <strong>非简单请求</strong></h4>\n<p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 <code>PUT</code> 或 <code>DELETE</code>，或 <code>Content-Type</code> 值为 <code>application/json</code>。浏览器会在正式通信之前，发送一次 HTTP 预检 <code>OPTIONS</code> 请求，先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 请求方法和头信息字段。只有得到肯定答复，浏览器才会发出正式的 <code>XHR</code> 请求，否则报错。</p>\n<h3> 2.2 跨域</h3>\n<p>在浏览器上当前访问的网站向另一个网站发送请求获取数据的过程就是<strong>跨域请求</strong>。</p>\n<p>跨域是浏览器的同源策略决定的，是一个重要的浏览器安全策略，用于限制一个 origin的文档或者它加载的脚本与另一个源的资源进行交互，它能够帮助阻隔恶意文档，减少可能被攻击的媒介，可以使用 CORS配置解除这个限制。</p>\n<p>关于跨域网上已经有很多解释，这里就不啰嗦，也可以直接看 MDN 的浏览器的同源策略文档进一步了解，这里就列举几个同源和不同元的例子，相信程序员都能看得懂。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.3 正向代理和反向代理</h3>\n<p>反向代理（Reverse Proxy）对应的是正向代理（Forward Proxy），他们的区别：</p>\n<p><strong>正向代理：</strong> 一般的访问流程是客户端直接向目标服务器发送请求并获取内容，使用正向代理后，客户端改为向代理服务器发送请求，并指定目标服务器（原始服务器），然后由代理服务器和原始服务器通信，转交请求并获得的内容，再返回给客户端。正向代理隐藏了真实的客户端，为客户端收发请求，使真实客户端对服务器不可见；</p>\n<p>举个具体的例子 🌰，你的浏览器无法直接访问谷哥，这时候可以通过一个代理服务器来帮助你访问谷哥，那么这个服务器就叫正向代理。</p>\n<p><strong>反向代理：</strong> 与一般访问流程相比，使用反向代理后，直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。一般在处理跨域请求的时候比较常用。现在基本上所有的大型网站都设置了反向代理。</p>\n<p>举个具体的例子 🌰，去饭店吃饭，可以点川菜、粤菜、江浙菜，饭店也分别有三个菜系的厨师 👨‍🍳，但是你作为顾客不用管哪个厨师给你做的菜，只用点菜即可，小二将你菜单中的菜分配给不同的厨师来具体处理，那么这个小二就是反向代理服务器。</p>\n<p><strong>简单的说，一般给客户端做代理的都是正向代理，给服务器做代理的就是反向代理。</strong></p>\n<p>正向代理和反向代理主要的原理区别可以参见下图：</p>\n<figure><figcaption>image-20220724222601079</figcaption></figure>\n<figure><figcaption>image-20220724222610707</figcaption></figure>\n<h3> 2.4 负载均衡</h3>\n<p>一般情况下，客户端发送多个请求到服务器，服务器处理请求，其中一部分可能要操作一些资源比如数据库、静态资源等，服务器处理完毕后，再将结果返回给客户端。</p>\n<p>这种模式对于早期的系统来说，功能要求不复杂，且并发请求相对较少的情况下还能胜任，成本也低。随着信息数量不断增长，访问量和数据量飞速增长，以及系统业务复杂度持续增加，这种做法已无法满足要求，并发量特别大时，服务器容易崩。</p>\n<p>很明显这是由于服务器性能的瓶颈造成的问题，除了堆机器之外，最重要的做法就是负载均衡。</p>\n<p>请求爆发式增长的情况下，单个机器性能再强劲也无法满足要求了，这个时候集群的概念产生了，单个服务器解决不了的问题，可以使用多个服务器，然后将请求分发到各个服务器上，将负载分发到不同的服务器，这就是<strong>负载均衡</strong>，核心是「分摊压力」。Nginx 实现负载均衡，一般来说指的是将请求转发给服务器集群。</p>\n<p>举个具体的例子 🌰，晚高峰乘坐地铁的时候，入站口经常会有地铁工作人员大喇叭“请走 B 口，B 口人少车空....”，这个工作人员的作用就是负载均衡。</p>\n<figure><figcaption>image-20220724225746333</figcaption></figure>\n<h3> 2.5 动静分离</h3>\n<p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度，降低原来单个服务器的压力。</p>\n<figure><figcaption>image-20220724225816748</figcaption></figure>\n<p>一般来说，都需要将动态资源和静态资源分开，由于 Nginx 的高并发和静态资源缓存等特性，经常将静态资源部署在 Nginx 上。如果请求的是静态资源，直接到静态资源目录获取资源，如果是动态资源的请求，则利用反向代理的原理，把请求转发给对应后台应用去处理，从而实现动静分离。</p>\n<p>使用前后端分离后，可以很大程度提升静态资源的访问速度，即使动态服务不可用，静态资源的访问也不会受到影响。</p>\n<h2> 3. Nginx 快速安装</h2>\n<h3> 3.1 安装</h3>\n<p>我们可以先看看</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20220805202351667</figcaption></figure>\n<p>然后</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>来安装 Nginx，然后我们在命令行中 <code>nginx -v</code> 就可以看到具体的 Nginx 版本信息，也就安装完毕了。</p>\n<figure><figcaption>image-20220805202424523</figcaption></figure>\n<h3> 3.2 相关文件夹</h3>\n<p>然后我们可以使用 <code>rpm -ql nginx</code> 来查看 Nginx 被安装到了什么地方，有哪些相关目录，其中位于 <code>/etc</code> 目录下的主要是配置文件，还有一些文件见下图：</p>\n<figure><figcaption>image-20220805202448958</figcaption></figure>\n<p>主要关注的文件夹有两个：</p>\n<ol>\n<li><code>/etc/nginx/conf.d/</code> 文件夹，是我们进行子配置的配置项存放处，<code>/etc/nginx/nginx.conf</code> 主配置文件会默认把这个文件夹中所有子配置项都引入；</li>\n<li><code>/usr/share/nginx/html/</code> 文件夹，通常静态文件都放在这个文件夹，也可以根据你自己的习惯放其他地方；</li>\n</ol>\n<h3> 3.3 跑起来康康</h3>\n<p>安装之后开启 Nginx，如果系统开启了防火墙，那么需要设置一下在防火墙中加入需要开放的端口，下面列举几个常用的防火墙操作（没开启的话不用管这个）：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后设置 Nginx 的开机启动：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>启动 Nginx （其他命令后面有详细讲解）：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>然后访问你的 IP，这时候就可以看到 Nginx 的欢迎页面了～ <code>Welcome to nginx！</code> 👏</p>\n<h2> 4. Nginx 操作常用命令</h2>\n<p>Nginx 的命令在控制台中输入 <code>nginx -h</code> 就可以看到完整的命令，这里列举几个常用的命令：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>systemctl</code> 是 Linux 系统应用管理工具 <code>systemd</code> 的主命令，用于管理系统，我们也可以用它来对 Nginx 进行管理，相关命令如下：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 5. Nginx 配置语法</h2>\n<p>就跟前面文件作用讲解的图所示，Nginx 的主配置文件是 <code>/etc/nginx/nginx.conf</code>，你可以使用 <code>cat -n nginx.conf</code> 来查看配置。</p>\n<p><code>nginx.conf</code> 结构图可以这样概括：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>一个 Nginx 配置文件的结构就像 <code>nginx.conf</code> 显示的那样，配置文件的语法规则：</p>\n<ol>\n<li>配置文件由指令与指令块构成；</li>\n<li>每条指令以 <code>;</code> 分号结尾，指令与参数间以空格符号分隔；</li>\n<li>指令块以 <code>{}</code> 大括号将多条指令组织在一起；</li>\n<li><code>include</code> 语句允许组合多个配置文件以提升可维护性；</li>\n<li>使用 <code>#</code> 符号添加注释，提高可读性；</li>\n<li>使用 <code>$</code> 符号使用变量；</li>\n<li>部分指令的参数支持正则表达式；</li>\n</ol>\n<h3> 5.1 典型配置</h3>\n<p>Nginx 的典型配置：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>server 块可以包含多个 location 块，location 指令用于匹配 uri，语法：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>指令后面：</p>\n<ol>\n<li><code>=</code> 精确匹配路径，用于不含正则表达式的 uri 前，如果匹配成功，不再进行后续的查找；</li>\n<li><code>^~</code> 用于不含正则表达式的 uri； 前，表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找；</li>\n<li><code>~</code> 表示用该符号后面的正则去匹配路径，区分大小写；</li>\n<li><code>~*</code> 表示用该符号后面的正则去匹配路径，不区分大小写。跟 <code>~</code> 优先级都比较低，如有多个location的正则能匹配的话，则使用正则表达式最长的那个；</li>\n</ol>\n<p>如果 uri 包含正则表达式，则必须要有 <code>~</code> 或 <code>~*</code> 标志。</p>\n<h3> 5.2 全局变量</h3>\n<p>Nginx 有一些常用的全局变量，你可以在配置的任何位置使用它们，如下表：</p>\n<table>\n<thead>\n<tr>\n<th>全局变量名</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>$host</code></td>\n<td>请求信息中的 <code>Host</code>，如果请求中没有 <code>Host</code> 行，则等于设置的服务器名，不包含端口</td>\n</tr>\n<tr>\n<td><code>$request_method</code></td>\n<td>客户端请求类型，如 <code>GET</code>、<code>POST</code></td>\n</tr>\n<tr>\n<td><code>$remote_addr</code></td>\n<td>客户端的 <code>IP</code> 地址</td>\n</tr>\n<tr>\n<td><code>$args</code></td>\n<td>请求中的参数</td>\n</tr>\n<tr>\n<td><code>$arg_PARAMETER</code></td>\n<td><code>GET</code> 请求中变量名 PARAMETER 参数的值，例如：<code>$http_user_agent</code>(Uaer-Agent 值), <code>$http_referer</code>...</td>\n</tr>\n<tr>\n<td><code>$content_length</code></td>\n<td>请求头中的 <code>Content-length</code> 字段</td>\n</tr>\n<tr>\n<td><code>$http_user_agent</code></td>\n<td>客户端agent信息</td>\n</tr>\n<tr>\n<td><code>$http_cookie</code></td>\n<td>客户端cookie信息</td>\n</tr>\n<tr>\n<td><code>$remote_addr</code></td>\n<td>客户端的IP地址</td>\n</tr>\n<tr>\n<td><code>$remote_port</code></td>\n<td>客户端的端口</td>\n</tr>\n<tr>\n<td><code>$http_user_agent</code></td>\n<td>客户端agent信息</td>\n</tr>\n<tr>\n<td><code>$server_protocol</code></td>\n<td>请求使用的协议，如 <code>HTTP/1.0</code>、<code>HTTP/1.1</code></td>\n</tr>\n<tr>\n<td><code>$server_addr</code></td>\n<td>服务器地址</td>\n</tr>\n<tr>\n<td><code>$server_name</code></td>\n<td>服务器名称</td>\n</tr>\n<tr>\n<td><code>$server_port</code></td>\n<td>服务器的端口号</td>\n</tr>\n<tr>\n<td><code>$scheme</code></td>\n<td>HTTP 方法（如http，https）</td>\n</tr>\n</tbody>\n</table>\n<p>还有更多的内置预定义变量，可以直接搜索关键字「nginx内置预定义变量」可以看到一堆博客写这个，这些变量都可以在配置文件中直接使用</p>\n<h2> 6. 设置二级域名虚拟主机</h2>\n<p>在某某云 ☁️ 上购买了域名之后，就可以配置虚拟主机了，一般配置的路径在 <code>域名管理 -&gt; 解析 -&gt; 添加记录</code> 中添加二级域名，配置后某某云会把二级域名也解析到我们配置的服务器 IP 上，然后我们在 Nginx 上配置一下虚拟主机的访问监听，就可以拿到从这个二级域名过来的请求了。</p>\n<figure><figcaption>image-20220724231052047</figcaption></figure>\n<p>现在我自己的服务器上配置了一个 fe 的二级域名，也就是说在外网访问 <code>fe.sherlocked93.club</code> 的时候，也可以访问到我们的服务器了。</p>\n<p>由于默认配置文件 <code>/etc/nginx/nginx.conf</code> 的 http 模块中有一句 <code>include /etc/nginx/conf.d/*.conf</code> 也就是说 <code>conf.d</code> 文件夹下的所有 <code>*.conf</code> 文件都会作为子配置项被引入配置文件中。为了维护方便，我在 <code>/etc/nginx/conf.d</code> 文件夹中新建一个 <code>fe.sherlocked93.club.conf</code> ：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后在 <code>/usr/share/nginx/html</code> 文件夹下新建 fe 文件夹，新建文件 <code>index.html</code>，内容随便写点，改完 <code>nginx -s reload</code> 重新加载，浏览器中输入 <code>fe.sherlocked93.club</code>，发现从二级域名就可以访问到我们刚刚新建的 fe 文件夹：</p>\n<figure><figcaption>image-20220724231559185</figcaption></figure>\n<h2> 7. 配置反向代理</h2>\n<p>反向代理是工作中最常用的服务器功能，经常被用来解决跨域问题，下面简单介绍一下如何实现反向代理。</p>\n<p>首先进入 Nginx 的主配置文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>为了看起来方便，把行号显示出来 <code>:set nu</code> （个人习惯），然后我们去 <code>http</code> 模块的 <code>server</code> 块中的 <code>location /</code>，增加一行将默认网址重定向到最大学习网站 Bilibili 的 <code>proxy_pass</code> 配置 🤓 ：</p>\n<figure><figcaption>image-20220726200525259</figcaption></figure>\n<p>改完保存退出，<code>nginx -s reload</code> 重新加载，进入默认网址，那么现在就直接跳转到 B 站了，实现了一个简单的代理。</p>\n<p>实际使用中，可以将请求转发到本机另一个服务器上，也可以根据访问的路径跳转到不同端口的服务中。</p>\n<p>比如我们监听 <code>9001</code> 端口，然后把访问不同路径的请求进行反向代理：</p>\n<ol>\n<li>把访问 <code>http://127.0.0.1:9001/edu</code> 的请求转发到 <code>http://127.0.0.1:8080</code></li>\n<li>把访问 <code>http://127.0.0.1:9001/vod</code> 的请求转发到 <code>http://127.0.0.1:8081</code></li>\n</ol>\n<p>这种要怎么配置呢，首先同样打开主配置文件，然后在 http 模块下增加一个 server 块：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>反向代理还有一些其他的指令，可以了解一下：</p>\n<ol>\n<li><code>proxy_set_header</code>：在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息。</li>\n<li><code>proxy_connect_timeout</code>：配置Nginx与后端代理服务器尝试建立连接的超时时间。</li>\n<li><code>proxy_read_timeout</code>：配置Nginx向后端服务器组发出read请求后，等待相应的超时时间。</li>\n<li><code>proxy_send_timeout</code>：配置Nginx向后端服务器组发出write请求后，等待相应的超时时间。</li>\n<li><code>proxy_redirect</code>：用于修改后端服务器返回的响应头中的Location和Refresh。</li>\n</ol>\n<h2> 8. 跨域 CORS 配置</h2>\n<p>关于简单请求、非简单请求、跨域的概念，前面已经介绍过了，还不了解的可以看看前面的讲解。现在前后端分离的项目一统天下，经常本地起了前端服务，需要访问不同的后端地址，不可避免遇到跨域问题。</p>\n<figure><figcaption>image-20220726201508633</figcaption></figure>\n<p>要解决跨域问题，我们来制造一个跨域问题。首先和前面设置二级域名的方式一样，先设置好 <code>fe.sherlocked93.club</code> 和 <code>be.sherlocked93.club</code> 二级域名，都指向本云服务器地址，虽然对应 IP 是一样的，但是在 <code>fe.sherlocked93.club</code> 域名发出的请求访问 <code>be.sherlocked93.club</code> 域名的请求还是跨域了，因为访问的 host 不一致（如果不知道啥原因参见前面跨域的内容）。</p>\n<h3> 8.1 使用反向代理解决跨域</h3>\n<p>在前端服务地址为 <code>fe.sherlocked93.club</code> 的页面请求 <code>be.sherlocked93.club</code> 的后端服务导致的跨域，可以这样配置：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样就将对前一个域名 <code>fe.sherlocked93.club</code> 的请求全都代理到了 <code>be.sherlocked93.club</code>，前端的请求都被我们用服务器代理到了后端地址下，绕过了跨域。</p>\n<p>这里对静态文件的请求和后端服务的请求都以 <code>fe.sherlocked93.club</code> 开始，不易区分，所以为了实现对后端服务请求的统一转发，通常我们会约定对后端服务的请求加上 <code>/apis/</code> 前缀或者其他的 path 来和对静态资源的请求加以区分，此时我们可以这样配置：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样，静态资源我们使用 <code>fe.sherlocked93.club/xx.html</code>，动态资源我们使用 <code>fe.sherlocked93.club/apis/getAwo</code>，浏览器页面看起来仍然访问的前端服务器，绕过了浏览器的同源策略，毕竟我们看起来并没有跨域。</p>\n<p>也可以统一一点，直接把前后端服务器地址直接都转发到另一个 <code>server.sherlocked93.club</code>，只通过在后面添加的 path 来区分请求的是静态资源还是后端服务，看需求了。</p>\n<h3> 8.2 配置 header 解决跨域</h3>\n<p>当浏览器在访问跨源的服务器时，也可以在跨域的服务器上直接设置 Nginx，从而前端就可以无感地开发，不用把实际上访问后端的地址改成前端服务的地址，这样可适性更高。</p>\n<p>比如前端站点是 <code>fe.sherlocked93.club</code>，这个地址下的前端页面请求 <code>be.sherlocked93.club</code> 下的资源，比如前者的 <code>fe.sherlocked93.club/index.html</code> 内容是这样的：</p>\n<div class=\"language-html line-numbers-mode\" data-ext=\"html\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>打开浏览器访问 <code>fe.sherlocked93.club/index.html</code> 的结果如下：</p>\n<figure><figcaption>image-20220726201934594</figcaption></figure>\n<p>很明显这里是跨域请求，在浏览器中直接访问 <code>http://be.sherlocked93.club/index.html</code> 是可以访问到的，但是在 <code>fe.sherlocked93.club</code> 的 html 页面访问就会出现跨域。</p>\n<p>在 <code>/etc/nginx/conf.d/</code> 文件夹中新建一个配置文件，对应二级域名 <code>be.sherlocked93.club</code> ：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后 <code>nginx -s reload</code> 重新加载配置。这时再访问 <code>fe.sherlocked93.club/index.html</code> 结果如下，请求中出现了我们刚刚配置的 Header：</p>\n<figure><figcaption>image-20220726202211312</figcaption></figure>\n<h2> 9. 开启 gzip 压缩</h2>\n<p>gzip 是一种常用的网页压缩技术，传输的网页经过 gzip 压缩之后大小通常可以变为原来的一半甚至更小（官网原话），更小的网页体积也就意味着带宽的节约和传输速度的提升，特别是对于访问量巨大大型网站来说，每一个静态资源体积的减小，都会带来可观的流量与带宽的节省。</p>\n<p>百度可以找到很多检测站点来查看目标网页有没有开启 gzip 压缩，在下随便找了一个 <a href=\"https://link.juejin.cn?target=http%3A%2F%2Ftool.chinaz.com%2FGzips%2FDefault.aspx%3Fq%3Djuejin.im\" target=\"_blank\" rel=\"noopener noreferrer\">&lt;网页GZIP压缩检测&gt;</a> 输入掘金 <code>juejin.im</code> 来偷窥下掘金有没有开启 gzip。</p>\n<figure><figcaption>image-20220726202442183</figcaption></figure>\n<p>这里可以看到掘金是开启了 gzip 的，压缩效果还挺不错，达到了 52% 之多，本来 <code>34kb</code> 的网页体积，压缩完只需要 <code>16kb</code>，可以想象网页传输速度提升了不少。</p>\n<h3> 9.1 Nginx 配置 gzip</h3>\n<p>使用 gzip 不仅需要 Nginx 配置，浏览器端也需要配合，需要在请求消息头中包含 <code>Accept-Encoding: gzip</code>（IE5 之后所有的浏览器都支持了，是现代浏览器的默认设置）。一般在请求 html 和 css 等静态资源的时候，支持的浏览器在 request 请求静态资源的时候，会加上 <code>Accept-Encoding: gzip</code> 这个 header，表示自己支持 gzip 的压缩方式，Nginx 在拿到这个请求的时候，如果有相应配置，就会返回经过 gzip 压缩过的文件给浏览器，并在 response 相应的时候加上 <code>content-encoding: gzip</code> 来告诉浏览器自己采用的压缩方式（因为浏览器在传给服务器的时候一般还告诉服务器自己支持好几种压缩方式），浏览器拿到压缩的文件后，根据自己的解压方式进行解析。</p>\n<p>先来看看 Nginx 怎么进行 gzip 配置，和之前的配置一样，为了方便管理，还是在 <code>/etc/nginx/conf.d/</code> 文件夹中新建配置文件 <code>gzip.conf</code> ：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>稍微解释一下：</p>\n<ol>\n<li><strong>gzip_types</strong>：要采用 gzip 压缩的 MIME 文件类型，其中 text/html 被系统强制启用；</li>\n<li><strong>gzip_static</strong>：默认 off，该模块启用后，Nginx 首先检查是否存在请求静态文件的 gz 结尾的文件，如果有则直接返回该 <code>.gz</code> 文件内容；</li>\n<li><strong>gzip_proxied</strong>：默认 off，nginx做为反向代理时启用，用于设置启用或禁用从代理服务器上收到相应内容 gzip 压缩；</li>\n<li><strong>gzip_vary</strong>：用于在响应消息头中添加 <code>Vary：Accept-Encoding</code>，使代理服务器根据请求头中的 <code>Accept-Encoding</code> 识别是否启用 gzip 压缩；</li>\n<li><strong>gzip_comp_level</strong>：gzip 压缩比，压缩级别是 1-9，1 压缩级别最低，9 最高，级别越高压缩率越大，压缩时间越长，建议 4-6；</li>\n<li><strong>gzip_buffers</strong>：获取多少内存用于缓存压缩结果，16 8k 表示以 8k*16 为单位获得；</li>\n<li><strong>gzip_min_length</strong>：允许压缩的页面最小字节数，页面字节数从header头中的 <code>Content-Length</code> 中进行获取。默认值是 0，不管页面多大都压缩。建议设置成大于 1k 的字节数，小于 1k 可能会越压越大；</li>\n<li><strong>gzip_http_version</strong>：默认 1.1，启用 gzip 所需的 HTTP 最低版本；</li>\n</ol>\n<p>这个配置可以插入到 http 模块整个服务器的配置里，也可以插入到需要使用的虚拟主机的 <code>server</code> 或者下面的 <code>location</code> 模块中，当然像上面我们这样写的话就是被 include 到 http 模块中了。</p>\n<p>其他更全的配置信息可以查看 <a href=\"https://link.juejin.cn?target=http%3A%2F%2Fnginx.org%2Fen%2Fdocs%2Fhttp%2Fngx_http_gzip_module.html\" target=\"_blank\" rel=\"noopener noreferrer\">&lt;官网文档ngx_http_gzip_module&gt;</a>，配置前是这样的：</p>\n<figure><figcaption>image-20220726202845395</figcaption></figure>\n<p>配置之后 response 的 header 里面多了一个 <code>Content-Encoding: gzip</code>，返回信息被压缩了：</p>\n<figure><figcaption>image-20220726202915387</figcaption></figure>\n<p>注意了，一般 gzip 的配置建议加上 <code>gzip_min_length 1k</code>，不加的话：</p>\n<figure><figcaption>image-20220726202946349</figcaption></figure>\n<p>由于文件太小，gzip 压缩之后得到了 -48% 的体积优化，压缩之后体积还比压缩之前体积大了，所以最好设置低于 <code>1kb</code> 的文件就不要 gzip 压缩了 🤪</p>\n<h3> 9.2 Webpack 的 gzip 配置</h3>\n<p>当前端项目使用 Webpack 进行打包的时候，也可以开启 gzip 压缩：</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由此打包出来的文件如下图：</p>\n<figure><figcaption>image-20220726203056141</figcaption></figure>\n<p>这里可以看到某些打包之后的文件下面有一个对应的 <code>.gz</code> 经过 <code>gzip</code> 压缩之后的文件，这是因为这个文件超过了 <code>10kb</code>，有的文件没有超过 <code>10kb</code> 就没有进行 <code>gzip</code> 打包，如果你期望压缩文件的体积阈值小一点，可以在 <code>compression-webpack-plugin</code> 这个插件的配置里进行对应配置。</p>\n<p>那么为啥这里 Nginx 已经有了 gzip 压缩，Webpack 这里又整了个 gzip 呢，因为如果全都是使用 Nginx 来压缩文件，会耗费服务器的计算资源，如果服务器的 <code>gzip_comp_level</code> 配置的比较高，就更增加服务器的开销，相应增加客户端的请求时间，得不偿失。</p>\n<p>如果压缩的动作在前端打包的时候就做了，把打包之后的高压缩等级文件作为静态资源放在服务器上，Nginx 会优先查找这些压缩之后的文件返回给客户端，相当于把压缩文件的动作从 Nginx 提前给 Webpack 打包的时候完成，节约了服务器资源，所以一般推介在生产环境应用 Webpack 配置 gzip 压缩。</p>\n<h2> 10. 配置负载均衡</h2>\n<p>负载均衡在之前已经介绍了相关概念了，主要思想就是把负载均匀合理地分发到多个服务器上，实现压力分流的目的。</p>\n<p>主要配置如下：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Nginx 提供了好几种分配方式，默认为<strong>轮询</strong>，就是轮流来。有以下几种分配方式：</p>\n<ol>\n<li><strong>轮询</strong>，默认方式，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务挂了，能自动剔除；</li>\n<li><strong>weight</strong>，权重分配，指定轮询几率，权重越高，在被访问的概率越大，用于后端服务器性能不均的情况；</li>\n<li><strong>ip_hash</strong>，每个请求按访问 IP 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决动态网页 session 共享问题。负载均衡每次请求都会重新定位到服务器集群中的某一个，那么已经登录某一个服务器的用户再重新定位到另一个服务器，其登录信息将会丢失，这样显然是不妥的；</li>\n<li><strong>fair</strong>（第三方），按后端服务器的响应时间分配，响应时间短的优先分配，依赖第三方插件 nginx-upstream-fair，需要先安装；</li>\n</ol>\n<h2> 11. 配置动静分离</h2>\n<p>动静分离在之前也介绍过了，就是把动态和静态的请求分开。方式主要有两种，一种 是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。另外一种方法就是动态跟静态文件混合在一起发布， 通过 Nginx 配置来分开。</p>\n<p>通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个URL，发送一个请求，比对服务器该文件最后更新时间没有变化。则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 12. 配置高可用集群（双机热备）</h2>\n<p>当主 Nginx 服务器宕机之后，切换到备份 Nginx 服务器</p>\n<figure><figcaption>image-20220726203707353</figcaption></figure>\n<p>首先安装 keepalived，</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>然后编辑 <code>/etc/keepalived/keepalived.conf</code> 配置文件，并在配置文件中增加 <code>vrrp_script</code> 定义一个外围检测机制，并在 <code>vrrp_instance</code> 中通过定义 <code>track_script</code> 来追踪脚本执行过程，实现节点转移：</p>\n<div class=\"language-json line-numbers-mode\" data-ext=\"json\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中检测脚本 <code>nginx_check.sh</code>，这里提供一个：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>复制一份到备份服务器，备份 Nginx 的配置要将 <code>state</code> 后改为 <code>BACKUP</code>，<code>priority</code> 改为比主机小。</p>\n<p>设置完毕后各自 <code>service keepalived start</code> 启动，经过访问成功之后，可以把 Master 机的 keepalived 停掉，此时 Master 机就不再是主机了 <code>service keepalived stop</code>，看访问虚拟 IP 时是否能够自动切换到备机 <code>ip addr</code>。</p>\n<p>再次启动 Master 的 keepalived，此时 vip 又变到了主机上。</p>\n<h2> 13. 适配 PC 或移动设备</h2>\n<p>根据用户设备不同返回不同样式的站点，以前经常使用的是纯前端的自适应布局，但无论是复杂性和易用性上面还是不如分开编写的好，比如我们常见的淘宝、京东......这些大型网站就都没有采用自适应，而是用分开制作的方式，根据用户请求的 <code>user-agent</code> 来判断是返回 PC 还是 H5 站点。</p>\n<p>首先在 <code>/usr/share/nginx/html</code> 文件夹下 <code>mkdir</code> 分别新建两个文件夹 <code>PC</code> 和 <code>mobile</code>，<code>vim</code> 编辑两个 <code>index.html</code> 随便写点内容。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后和设置二级域名虚拟主机时候一样，去 <code>/etc/nginx/conf.d</code> 文件夹下新建一个配置文件 <code>fe.sherlocked93.club.conf</code> ：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置基本没什么不一样的，主要多了一个 <code>if</code> 语句，然后使用 <code>$http_user_agent</code> 全局变量来判断用户请求的 <code>user-agent</code>，指向不同的 root 路径，返回对应站点。</p>\n<p>在浏览器访问这个站点，然后 F12 中模拟使用手机访问：</p>\n<figure><figcaption>image-20220726204632802</figcaption></figure>\n<p>可以看到在模拟使用移动端访问的时候，Nginx 返回的站点变成了移动端对应的 html 了。</p>\n<h2> 14. 配置 HTTPS</h2>\n<p>具体配置过程网上挺多的了，也可以使用你购买的某某云，一般都会有免费申请的服务器证书，安装直接看所在云的操作指南即可。</p>\n<p>我购买的腾讯云提供的亚洲诚信机构颁发的免费证书只能一个域名使用，二级域名什么的需要另外申请，但是申请审批比较快，一般几分钟就能成功，然后下载证书的压缩文件，里面有个 nginx 文件夹，把 <code>xxx.crt</code> 和 <code>xxx.key</code> 文件拷贝到服务器目录，再配置下：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>写完 <code>nginx -t -q</code> 校验一下，没问题就 <code>nginx -s reload</code>，现在去访问 <code>https://sherlocked93.club/</code> 就能访问 HTTPS 版的网站了。</p>\n<p>一般还可以加上几个增强安全性的命令：</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 15. 一些常用技巧</h2>\n<h3> 15.1 静态服务</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.2 图片防盗链</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.3 请求过滤</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.4 配置图片、字体等静态文件缓存</h3>\n<p>由于图片、字体、音频、视频等静态文件在打包的时候通常会增加了 hash，所以缓存可以设置的长一点，先设置强制缓存，再设置协商缓存；如果存在没有 hash 值的静态文件，建议不设置强制缓存，仅通过协商缓存判断是否需要使用缓存。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.5 单页面项目 history 路由配置</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.6 HTTP 请求转发到 HTTPS</h3>\n<p>配置完 HTTPS 后，浏览器还是可以访问 HTTP 的地址 <code>http://sherlocked93.club/</code> 的，可以做一个 301 跳转，把对应域名的 HTTP 请求重定向到 HTTPS 上</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.7 泛域名路径分离</h3>\n<p>这是一个非常实用的技能，经常有时候我们可能需要配置一些二级或者三级域名，希望通过 Nginx 自动指向对应目录，比如：</p>\n<ol>\n<li><code>test1.doc.sherlocked93.club</code> 自动指向 <code>/usr/share/nginx/html/doc/test1</code> 服务器地址；</li>\n<li><code>test2.doc.sherlocked93.club</code> 自动指向 <code>/usr/share/nginx/html/doc/test2</code> 服务器地址；</li>\n</ol>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 15.8 泛域名转发</h3>\n<p>和之前的功能类似，有时候我们希望把二级或者三级域名链接重写到我们希望的路径，让后端就可以根据路由解析不同的规则：</p>\n<ol>\n<li><code>test1.serv.sherlocked93.club/api?name=a</code> 自动转发到 <code>127.0.0.1:8080/test1/api?name=a </code>；</li>\n<li><code>test2.serv.sherlocked93.club/api?name=a</code> 自动转发到 <code>127.0.0.1:8080/test2/api?name=a</code> ；</li>\n</ol>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 16. 最佳实践</h2>\n<ol>\n<li>为了使 Nginx 配置更易于维护，建议为每个服务创建一个单独的配置文件，存储在 <code>/etc/nginx/conf.d</code> 目录，根据需求可以创建任意多个独立的配置文件。</li>\n<li>独立的配置文件，建议遵循以下命名约定 <code>&lt;服务&gt;.conf</code>，比如域名是 <code>sherlocked93.club</code>，那么你的配置文件的应该是这样的 <code>/etc/nginx/conf.d/sherlocked93.club.conf</code>，如果部署多个服务，也可以在文件名中加上 Nginx 转发的端口号，比如 <code>sherlocked93.club.8080.conf</code>，如果是二级域名，建议也都加上 <code>fe.sherlocked93.club.conf</code>。</li>\n<li>常用的、复用频率比较高的配置可以放到 <code>/etc/nginx/snippets</code> 文件夹，在 Nginx 的配置文件中需要用到的位置 include 进去，以功能来命名，并在每个 snippet 配置文件的开头注释标明主要功能和引入位置，方便管理。比如之前的 <code>gzip</code>、<code>cors</code> 等常用配置，我都设置了 snippet。</li>\n<li>Nginx 日志相关目录，内以 <code>域名.type.log</code> 命名（比如 <code>be.sherlocked93.club.access.log</code> 和 <code>be.sherlocked93.club.error.log</code> ）位于 <code>/var/log/nginx/</code> 目录中，为每个独立的服务配置不同的访问权限和错误日志文件，这样查找错误时，会更加方便快捷。</li>\n</ol>\n",
      "date_published": "2023-11-29T01:43:12.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Nginx"
      ]
    },
    {
      "title": "02_Nginx 入门实战",
      "url": "https://www.fanliu.top/nginx/nginx_02.html",
      "id": "https://www.fanliu.top/nginx/nginx_02.html",
      "summary": "简介 什么是nginx Nginx是一个高性能的HTTP和反向代理web服务器 安装要求 linux内核2.6及以上; 关闭防火墙; 安装nginx 源码安装 创建文件夹 安装依赖 下载nginx 官网下载http://nginx.org/en/download.html; 直接在服务器下载; 进行配置 配置文件详解; --prefix=PATH ng...",
      "content_html": "<h1> Nginx 入门实战</h1>\n<h2> 简介</h2>\n<blockquote>\n<p>什么是nginx</p>\n</blockquote>\n<p>Nginx是一个高性能的HTTP和反向代理web服务器</p>\n<blockquote>\n<p>安装要求</p>\n</blockquote>\n<ul>\n<li>\n<p><code>linux</code>内核2.6及以上</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>关闭防火墙</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n<h3> 安装nginx</h3>\n<h4> 源码安装</h4>\n<blockquote>\n<p>创建文件夹</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>安装依赖</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>下载nginx</p>\n</blockquote>\n<ul>\n<li>\n<p>官网下载<code>http://nginx.org/en/download.html</code></p>\n</li>\n<li>\n<p>直接在服务器下载</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n<blockquote>\n<p>进行配置</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>\n<p>配置文件详解</p>\n<table>\n<thead>\n<tr>\n<th>--prefix=PATH</th>\n<th>nginx安装目录，默认/uar/local/nginx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--sbin-path=PATH</td>\n<td>可执行文件路径，默认<code>&lt;prefix&gt;/sbin/nginx</code></td>\n</tr>\n<tr>\n<td>--modules-path=PATH</td>\n<td>动态模块的安装目录，默认<code>&lt;prefix&gt;/modules</code></td>\n</tr>\n<tr>\n<td>--conf-path=PATH</td>\n<td>配置文件路径，默认<code>&lt;prefix&gt;/conf/nginx.conf</code></td>\n</tr>\n<tr>\n<td>--error-log-path=PATH</td>\n<td>错误日志文件路径，默认<code>&lt;prefix&gt;/logs/error.log</code></td>\n</tr>\n<tr>\n<td>--http-log-path=PATH</td>\n<td>日志文件路径，默认<code>&lt;prefix&gt;/logs/access.log</code></td>\n</tr>\n<tr>\n<td>--pid-path=PATH</td>\n<td>进程id文件路径，默认<code>&lt;prefix&gt;/logs/nginx.pid</code></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<blockquote>\n<p>进行安装</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h4> yum安装</h4>\n<blockquote>\n<p>安装依赖</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>进行安装</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>查看安装目录</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 配置系统服务</h3>\n<blockquote>\n<p>编辑文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>添加以下内容</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 配置环境变量</h3>\n<blockquote>\n<p>编辑环境变量</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>最后一行添加以下内容</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>刷新环境变量</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> nginx操作</h2>\n<h3> 目录结构介绍</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> kill信号操作</h3>\n<blockquote>\n<p>查看nginx进程</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>立即关闭</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>优雅地关闭</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>重新加载配置文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>重写日志文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>平滑升级</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> nginx命令</h3>\n<blockquote>\n<p>查看帮助</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>打印内容如下：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>查看版本号</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>查看版本号和安装时的配置信息</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>测试配置文件语法</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>测试配置文件语法，如果成功则输出文件内容</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>发送信号</p>\n</blockquote>\n<ul>\n<li>\n<p>强制关闭，相当于<code>kill -term/int</code></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>优雅关闭，相当于<code>kill -quit</code></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>重新打开日志文件，相当于<code>kill -usr1</code></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>重新加载配置文件，相当于<code>kill -hup</code></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n<h2> 配置文件详解</h2>\n<h3> 全局块</h3>\n<table>\n<thead>\n<tr>\n<th>全局指令</th>\n<th>可选值</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user</td>\n<td>用户名</td>\n<td></td>\n<td>指定用户</td>\n</tr>\n<tr>\n<td>master_process</td>\n<td>on/off</td>\n<td>on</td>\n<td>是否开启工作进程worker，配置完要重启nginx</td>\n</tr>\n<tr>\n<td>worker_processes</td>\n<td>数字</td>\n<td></td>\n<td>worker进程数量，建议配置成cpu的数量，master_process开启才有用</td>\n</tr>\n<tr>\n<td>daemon</td>\n<td>on/off</td>\n<td>on</td>\n<td>是否以守护进程方式启动</td>\n</tr>\n<tr>\n<td>pid</td>\n<td></td>\n<td>logs/nginx.pid</td>\n<td>pid路径</td>\n</tr>\n<tr>\n<td>error_log</td>\n<td></td>\n<td></td>\n<td>日志级别，debug、info、notice、warn、error、crit</td>\n</tr>\n<tr>\n<td>include</td>\n<td></td>\n<td></td>\n<td>引入配置文件</td>\n</tr>\n</tbody>\n</table>\n<h3> events块</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>可选值</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>worker_connections</td>\n<td></td>\n<td>512</td>\n<td>单个worker进程最大连接数</td>\n</tr>\n<tr>\n<td>accept_mutex</td>\n<td>on/off</td>\n<td>on</td>\n<td>是否开启序列化，一个一个唤醒接收</td>\n</tr>\n<tr>\n<td>multi_accept</td>\n<td>on/off</td>\n<td>off</td>\n<td>是否允许同时接收多个网络连接</td>\n</tr>\n<tr>\n<td>use</td>\n<td>select/poll/epoll/kqueue</td>\n<td>根据操作系统定</td>\n<td>使用哪种事件驱动来处理网络消息</td>\n</tr>\n</tbody>\n</table>\n<h3> http块</h3>\n<blockquote>\n<p>default_type</p>\n</blockquote>\n<p>设置响应的MIME类型</p>\n<p>语法：<code>default_type mime-type</code></p>\n<p>默认：<code>default_type text/plain</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code></p>\n<blockquote>\n<p>access_log</p>\n</blockquote>\n<p>日志输出路径</p>\n<p>语法：<code>access_log path [format]</code></p>\n<p>默认：<code>logs/access.log</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code></p>\n<blockquote>\n<p>log_format</p>\n</blockquote>\n<p>日志格式化</p>\n<p>语法：<code>log_format name value</code></p>\n<p>作用域：<code>http</code></p>\n<blockquote>\n<p>sendfile</p>\n</blockquote>\n<p>底层使用<code>sendfile</code>发送文件</p>\n<p>语法：<code>sendfile on|off</code></p>\n<p>默认：<code>off</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code>,<code>if in location</code></p>\n<blockquote>\n<p>keepalive_timeout</p>\n</blockquote>\n<p>tcp长连接超时时间</p>\n<p>语法：<code>keepalive_timeout timeout</code></p>\n<p>默认：75，不写单位默认是s</p>\n<p>作用域：<code>http</code>, <code>server</code>,<code>location</code></p>\n<blockquote>\n<p>keepalive_requests</p>\n</blockquote>\n<p>一个连接使用次数</p>\n<p>语法：<code>keepalive_requests number</code></p>\n<p>默认：100</p>\n<p>作用域：<code>http</code>, <code>server</code>,<code>location</code></p>\n<h3> server块</h3>\n<blockquote>\n<p>listen</p>\n</blockquote>\n<p>监听的端口</p>\n<p>语法：<code>listen port</code></p>\n<p>作用域：<code>server</code></p>\n<blockquote>\n<p>server_name</p>\n</blockquote>\n<p>监听当前的ip或域名</p>\n<p>语法：<code>server_name name ...</code></p>\n<p>作用域：<code>server</code></p>\n<h3> location块</h3>\n<h4> location</h4>\n<blockquote>\n<p>模糊匹配</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>精确匹配</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>正则匹配（区分大小写）</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>正则匹配（不区分大小写）</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>注意：?后面的值不参与<code>location</code>匹配</p>\n<h4> root</h4>\n<p>资源文件目录，会拼上location的值，默认<code>root html</code></p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> alias</h4>\n<p>资源文件目录</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意：如果location匹配值以/结尾，那么alias也要以/结尾</p>\n<h4> index</h4>\n<p>默认文件</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h4> error_page</h4>\n<p>页面发生错误时跳转的路径</p>\n<blockquote>\n<p>写法1</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>写法2</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> try_files</h4>\n<p>尝试着找文件</p>\n<p>/1.html</p>\n<p>/1.html/index.html</p>\n<p>/index.html</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>尝试去找<code>$uri</code>这个文件，找不到<code>$uri</code>就去<code>$uri/</code>下的<code>index.html</code>文件，找不到就请求<code>/index.html</code></p>\n<h3> 解决跨域</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> rewrite模块详解</h3>\n<h4> 常用全局变量</h4>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$args</td>\n<td>变量中存放了请求URL中的请求参数。比如http://192.168.200.133/server?arg1=value1&amp;args2=value2中的\"arg1=value1&amp;arg2=value2\"，功能和$query_string一样</td>\n</tr>\n<tr>\n<td>$http_user_agent</td>\n<td>变量存储的是用户访问服务的代理信息(如果通过浏览器访问，记录的是浏览器的相关版本信息)</td>\n</tr>\n<tr>\n<td>$host</td>\n<td>变量存储的是访问服务器的server_name值</td>\n</tr>\n<tr>\n<td>$document_uri</td>\n<td>变量存储的是当前访问地址的URI。比如http://192.168.200.133/server?id=10&amp;name=zhangsan中的\"/server\"，功能和$uri一样</td>\n</tr>\n<tr>\n<td>$document_root</td>\n<td>变量存储的是当前请求对应location的root值，如果未设置，默认指向Nginx自带html目录所在位置</td>\n</tr>\n<tr>\n<td>$content_length</td>\n<td>变量存储的是请求头中的Content-Length的值</td>\n</tr>\n<tr>\n<td>$content_type</td>\n<td>变量存储的是请求头中的Content-Type的值</td>\n</tr>\n<tr>\n<td>$http_cookie</td>\n<td>变量存储的是客户端的cookie信息，可以通过add_header Set-Cookie 'cookieName=cookieValue'来添加cookie数据</td>\n</tr>\n<tr>\n<td>$limit_rate</td>\n<td>变量中存储的是Nginx服务器对网络连接速率的限制，也就是Nginx配置中对limit_rate指令设置的值，默认是0，不限制。</td>\n</tr>\n<tr>\n<td>$remote_addr</td>\n<td>变量中存储的是客户端的IP地址</td>\n</tr>\n<tr>\n<td>$remote_port</td>\n<td>变量中存储了客户端与服务端建立连接的端口号</td>\n</tr>\n<tr>\n<td>$remote_user</td>\n<td>变量中存储了客户端的用户名，需要有认证模块才能获取</td>\n</tr>\n<tr>\n<td>$scheme</td>\n<td>变量中存储了访问协议</td>\n</tr>\n<tr>\n<td>$server_addr</td>\n<td>变量中存储了服务端的地址</td>\n</tr>\n<tr>\n<td>$server_name</td>\n<td>变量中存储了客户端请求到达的服务器的名称</td>\n</tr>\n<tr>\n<td>$server_port</td>\n<td>变量中存储了客户端请求到达服务器的端口号</td>\n</tr>\n<tr>\n<td>$server_protocol</td>\n<td>变量中存储了客户端请求协议的版本，比如\"HTTP/1.1\"</td>\n</tr>\n<tr>\n<td>$request_body_file</td>\n<td>变量中存储了发给后端服务器的本地文件资源的名称</td>\n</tr>\n<tr>\n<td>$request_method</td>\n<td>变量中存储了客户端的请求方式，比如\"GET\",\"POST\"等</td>\n</tr>\n<tr>\n<td>$request_filename</td>\n<td>变量中存储了当前请求的资源文件的路径名</td>\n</tr>\n<tr>\n<td>$request_uri</td>\n<td>变量中存储了当前请求的URI，并且携带请求参数，比如http://192.168.200.133/server?id=10&amp;name=zhangsan中的\"/server?id=10&amp;name=zhangsan\"</td>\n</tr>\n</tbody>\n</table>\n<h3> set</h3>\n<p>设置变量</p>\n<p>语法：<code>set $variable value</code></p>\n<p>作用域：<code>server</code>, <code>location</code>, <code>if</code></p>\n<h3> if</h3>\n<p>条件判断</p>\n<p>语法：<code>if (condition) {}</code></p>\n<p>作用域：<code>server</code>, <code>location</code></p>\n<h3> break</h3>\n<p>语法：<code>break</code></p>\n<p>作用域：<code>server</code>, <code>location</code>, <code>if</code></p>\n<h3> return</h3>\n<p>语法：<code>return code URL</code> <code>return [text]</code> <code>return URL</code></p>\n<p>作用域：<code>server</code>, <code>location</code>, <code>if</code></p>\n<h3> rewrite</h3>\n<p>对请求的uri进行重写</p>\n<p>语法：<code>rewrite regex replacement [flag]</code></p>\n<p>作用域：<code>server</code>, <code>location</code>, <code>if</code></p>\n<blockquote>\n<p>flag可选值</p>\n</blockquote>\n<ul>\n<li>\n<p>last</p>\n<p>停止当前location的执行，拿着uri重新去匹配location</p>\n</li>\n<li>\n<p>break</p>\n<p>停止当前location的执行，会在当前location去找对应的资源</p>\n</li>\n<li>\n<p>redirect</p>\n<p>临时重定向</p>\n</li>\n<li>\n<p>permanent</p>\n<p>永久重定向</p>\n</li>\n</ul>\n<blockquote>\n<p>使用示例</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> rewrite_log</h3>\n<p>打印rewrite日志</p>\n<p>语法：<code>rewrite_log on | off</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code>, <code>if</code></p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 反向代理</h2>\n<h3> 正向代理</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 反向代理</h3>\n<blockquote>\n<p>被代理服务器</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>代理服务器</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> proxy_set_header</h3>\n<p>设置请求头信息</p>\n<p>语法：<code>proxy_set_header field value</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code></p>\n<h3> proxy_redirect</h3>\n<p>将被代理服务器的重定向地址替换成代理服务器的地址</p>\n<p>语法：<code>proxy_redirect redirect replacement</code></p>\n<p>作用域：<code>http</code>, <code>server</code>, <code>location</code></p>\n<blockquote>\n<p>被代理服务器</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>代理服务器</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 负载均衡</h2>\n<h3> upstream</h3>\n<p>定义一组服务器</p>\n<p>语法：<code>upstram name {}</code></p>\n<p>作用域：<code>http</code></p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 负载均衡状态</h3>\n<table>\n<thead>\n<tr>\n<th>down</th>\n<th>不参与负载均衡</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>backup</td>\n<td>备份服务器，当其他服务器挂掉了，才会启用备份服务器</td>\n</tr>\n<tr>\n<td>max_fails</td>\n<td>允许请求失败的次数，默认是1</td>\n</tr>\n<tr>\n<td>fail_timeout</td>\n<td>max_fails失败后，多少秒之内不访问失败的服务器，默认10秒</td>\n</tr>\n</tbody>\n</table>\n<h3> 负载均衡策略</h3>\n<blockquote>\n<p>weight</p>\n</blockquote>\n<p>分配权重</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>ip_hash</p>\n</blockquote>\n<p>一个ip固定被分配到某一台服务器</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>url_hash</p>\n</blockquote>\n<p>同一个url固定分配到某一台服务器</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>least_conn</p>\n</blockquote>\n<p>把请求分配到连接最少的服务器上</p>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 负载均衡之fair策略</h3>\n<p>根据页面大小、加载时间等智能分配服务器</p>\n<blockquote>\n<p>下载fair</p>\n</blockquote>\n<p>下载地址：<code>https://github.com/gnosek/nginx-upstream-fair</code></p>\n<blockquote>\n<p>上传到服务器解压缩并重命名</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>编辑nginx源码文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>找到<code>struct ngx_http_upstream_srv_conf_s</code>结构体</p>\n<p>加上<code>in_port_t default_port;</code></p>\n<blockquote>\n<p>进入nginx安装目录</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>进行配置</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>进行编译</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>删除之前的nginx二进制文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>复制新的二进制文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>进行平滑升级</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>使用fair策略</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 配置https</h2>\n<h3> 申请阿里云证书</h3>\n<blockquote>\n<p>到域名控制台解析域名</p>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>购买SSL证书</p>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>申请证书</p>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>下载证书，并上传到服务器</p>\n</blockquote>\n<h3> 安装ssl模块</h3>\n<blockquote>\n<p>进入到nginx安装包目录</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>清除之前编译的文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>重新配置</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>重新编译</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>删除之前的二进制文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>复制二进制文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>进行平滑升级</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 进行配置</h3>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 部署前端项目</h2>\n<h3> 普通部署</h3>\n<blockquote>\n<p>若依官网拉取代码</p>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>安装依赖</p>\n</blockquote>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>打包后上传到服务器上</p>\n</blockquote>\n<div class=\"language-powershell line-numbers-mode\" data-ext=\"powershell\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>打包完成后会生成dist文文件夹，将dist文件夹上传到服务器上</p>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>重新加载配置文件</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 整合Jenkins、Docker自动化部署</h3>\n<blockquote>\n<p>编写nginx配置文件</p>\n</blockquote>\n<div class=\"language-nginx line-numbers-mode\" data-ext=\"nginx\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>编写dockerignore</p>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>编写Dockerfile</p>\n</blockquote>\n<div class=\"language-docker line-numbers-mode\" data-ext=\"docker\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>编写Jenkins脚本</p>\n</blockquote>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2023-11-29T01:45:12.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Nginx"
      ]
    },
    {
      "title": "nodejs版本切换工具-nvm",
      "url": "https://www.fanliu.top/nodeJS/nodejs%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2%E5%B7%A5%E5%85%B7.html",
      "id": "https://www.fanliu.top/nodeJS/nodejs%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2%E5%B7%A5%E5%85%B7.html",
      "summary": "好久不见，别来无恙 最近在开发中，接手了几个vue的前端项目，需要用到node.js环境，但是在有些项目启动的时候不得不切换我node的版本，每次下载卸载很麻烦，这里就推荐一个node的包版本管理工具 nvm 介绍 1. Node Version Manager (NVM) 是一个用于管理 Node.js 版本的工具，它允许你在同一台计算机上轻松切换和...",
      "content_html": "<h1> nodejs版本切换工具-nvm</h1>\n<blockquote>\n<p>好久不见，别来无恙</p>\n</blockquote>\n<p>最近在开发中，接手了几个vue的前端项目，需要用到node.js环境，但是在有些项目启动的时候不得不切换我node的版本，每次下载卸载很麻烦，这里就推荐一个node的包版本管理工具 nvm</p>\n<h3> 介绍</h3>\n<ol>\n<li>Node Version Manager (NVM) 是一个用于管理 Node.js 版本的工具，它允许你在同一台计算机上轻松切换和管理不同的 Node.js 版本</li>\n<li>设计者为按用户安装并按 shell 调用。<code>nvm</code>适用于任何兼容 POSIX 的 shell（sh、dash、ksh、zsh、bash），特别是在以下平台上：unix、macOS 和 windows WSL</li>\n</ol>\n<h3> 下载安装</h3>\n<p>这里只讲windows的下载安装，若需要其他版本，请移步<a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\" rel=\"noopener noreferrer\">nvm的github仓库</a>。</p>\n<h4> 下载</h4>\n<ol>\n<li>\n<p>下载 NVM for Windows 安装器（nvm-setup.zip）：https://github.com/coreybutler/nvm-windows/releases</p>\n</li>\n<li>\n<p>解压下载的安装器，并运行 <code>nvm-setup.exe</code>。</p>\n</li>\n<li>\n<p>安装向导将引导你完成安装过程。在安装期间，你可以选择要安装的 Node.js 版本和默认版本。</p>\n</li>\n<li>\n<p>安装完成后，打开一个新的命令提示符或 PowerShell 窗口，并运行以下命令来验证安装：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20231019165023234</figcaption></figure>\n<p>现在，你已经成功安装了 NVM，可以使用它来管理和切换不同版本的 Node.js。你可以使用 <code>nvm install</code> 命令来安装特定版本的 Node.js，使用 <code>nvm use</code> 命令来切换到不同版本，以及使用 <code>nvm ls</code> 命令来列出已安装的 Node.js 版本。</p>\n</li>\n</ol>\n<h3> 使用教程</h3>\n<ol>\n<li>\n<p>在使用中，我遇到<strong>nvm下载node版本缓慢问题</strong>，为了防止大家踩坑，所以将解决方法写在前面</p>\n<ol>\n<li>\n<p>找到nvm的安装目录下的settings.txt并打开</p>\n<figure><figcaption>image-20231019165629072</figcaption></figure>\n</li>\n<li>\n<p>添加淘宝源</p>\n<figure><figcaption>image-20231019165747067</figcaption></figure>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>复制上面的地址，改成和我一样就可以了，改成国内镜像会快很多</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>安装特定版本的 Node.js：</strong></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如，要安装 Node.js 的 LTS 版本，你可以运行：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>或要安装 Node.js 14.17.0 版本，你可以运行：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>切换到已安装的 Node.js 版本</strong>：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如，要切换到 Node.js 14.17.0 版本，你可以运行：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>列出已安装的 Node.js 版本</strong>：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>这会显示你计算机上已安装的所有 Node.js 版本，并指示哪个版本是当前激活的。</p>\n</li>\n<li>\n<p><strong>列出可用的 Node.js 版本</strong>：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20231019170353134</figcaption></figure>\n<p>这会列出可用的 Node.js 版本，包括 LTS 版本和其他版本。</p>\n</li>\n<li>\n<p><strong>将 Node.js 版本设置为默认版本</strong>：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如，要将 Node.js 14.17.0 设置为默认版本，你可以运行：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>卸载特定版本的 Node.js</strong>：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如，要卸载 Node.js 14.17.0 版本，你可以运行：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>切换Node.js 版本：</strong></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如，要使用 Node.js 14.17.0 版本，你可以运行：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20231019170851948</figcaption></figure>\n</li>\n</ol>\n<p>现在，你已经可以熟练使用nvm了~~</p>\n<blockquote>\n<p>这世界太大，勇敢的少年奔赴天涯。 --荣耀同行</p>\n</blockquote>\n",
      "image": "https://img.php.cn/upload/article/000/000/024/63bffcbecff5c810.jpg",
      "date_published": "2023-10-19T22:27:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "nodejs"
      ]
    },
    {
      "title": "jeecg-boot 防止重复提交",
      "url": "https://www.fanliu.top/CodeInterpretation/jeecg-boot/jeecg-boot%20%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4.html",
      "id": "https://www.fanliu.top/CodeInterpretation/jeecg-boot/jeecg-boot%20%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4.html",
      "summary": "在现代Web开发中，防止重复提交是一个常见的问题，特别是在处理表单提交、支付操作等场景时。重复提交不仅会影响用户体验，还可能带来安全隐患和数据一致性问题。为了解决这个问题，jeecg-boot 提供了一个非常实用的工具：@JRepeat 注解。 1. 什么是 @JRepeat 注解？ JRepeat 是 jeecg-boot 中的自定义注解，主要用于防...",
      "content_html": "<h1> jeecg-boot 防止重复提交</h1>\n<p>在现代Web开发中，防止重复提交是一个常见的问题，特别是在处理表单提交、支付操作等场景时。重复提交不仅会影响用户体验，还可能带来安全隐患和数据一致性问题。为了解决这个问题，jeecg-boot 提供了一个非常实用的工具：@JRepeat 注解。</p>\n<h2> 1. 什么是 @JRepeat 注解？</h2>\n<p>@JRepeat 是 jeecg-boot 中的自定义注解，主要用于防止用户重复提交请求。它通过结合缓存机制（如 Redis）和拦截器或 AOP 切面，来确保同一请求在短时间内不会被多次处理。</p>\n<p>@JRepeat 是一个基于 Redis 实现的分布式锁注解，它可以用于方法级别的重复提交限制，保证某个方法在同一时间只能被一个请求调用。其中 lockKey 是锁的键值，支持 SpEL 表达式，可以动态生成；lockTime 是锁的过期时间，单位为秒。</p>\n<h2> 2. @JRepeat 注解的工作原理</h2>\n<ol>\n<li>\n<p><strong>注解定义</strong>：\n在方法上使用 @JRepeat 注解，标记需要防止重复提交的接口。</p>\n</li>\n<li>\n<p><strong>拦截器或 AOP 切面</strong>：\n拦截所有标记了 @JRepeat 注解的方法请求。拦截器或 AOP 切面会生成一个唯一标识符（token），并将其与请求一起存储在缓存中。</p>\n</li>\n<li>\n<p><strong>缓存校验</strong>：\n每次请求到达时，拦截器或 AOP 切面会检查缓存中是否存在相同的标识符。如果在设定的时间内（如几秒钟）存在相同标识符，则认为是重复提交，拦截请求并返回错误信息。</p>\n</li>\n<li>\n<p><strong>处理请求</strong>：\n如果缓存中不存在相同标识符，则将请求正常处理，并将标识符存储在缓存中以防止后续重复提交。</p>\n</li>\n</ol>\n<h2> 3. 如何使用 @JRepeat 注解</h2>\n<p>下面是一个简单的使用示例，演示如何在 jeecg-boot 中使用 @JRepeat 注解来防止重复提交：</p>\n<ol>\n<li>\n<p><strong>引入依赖</strong>：\n确保你的项目已经引入了 jeecg-boot 相关依赖。</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>方法上使用 @JRepeat 注解</strong>：\n在需要防止重复提交的方法上添加 @JRepeat 注解放在需要限制重复提交的方法上即可，例如：</p>\n</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>JRepeat注解使用说明</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在每次调用该方法时，会先检查 Redis 中是否存在相应的锁，如果存在，则说明该方法正在被调用，需要等待锁过期后再次尝试调用。如果不存在锁，则创建锁并执行业务逻辑，执行完成后释放锁。</p>\n<p>举个例子</p>\n<p>当多个用户同时对同一资源进行修改时，可能会发生并发冲突。为了避免这种情况，可以采用加锁机制来限制同一时间只有一个用户能够对该资源进行操作。</p>\n<p>在Spring框架中，可以使用注解来实现加锁机制，其中@JRepeat就是一个加锁注解，它的作用是对某个方法加锁。</p>\n<p>例如，假设有一个UserService的服务类，其中有一个方法updateUserName(String name)，该方法用于更新用户的用户名。为了避免多个用户同时更新同一个用户名，我们可以在该方法上加上@JRepeat注解，设置相应的锁定参数，如下所示：</p>\n<p>@Service\npublic class UserService {</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在上面的例子中，@JRepeat 注解中的 lockKey 参数设置为方法参数 name，表示对不同的 name 参数值进行加锁，lockTime 参数设置为5，表示锁定时间为5秒。</p>\n<p>当有多个用户同时调用 updateUserName 方法时，只有一个用户能够成功执行该方法，其他用户则需要等待锁定时间过后才能执行该方法。这样可以避免多个用户同时更新同一个用户名的情况发生，保证数据的一致性。</p>\n<h2> 4. @JRepeat 源码解析</h2>\n<blockquote>\n<p>想要真正掌握一件事情或一个东西，最好的方法就是真正的 明白它，理解它，所以我们看源码</p>\n</blockquote>\n<h3> 1. @JRepeat 注解</h3>\n<p>在对应依赖包下的这个目录中  org.jeecg.boot.starter.lock.annotation</p>\n<h4> 源码</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 代码解释</h4>\n<ul>\n<li><code>@Retention(RetentionPolicy.RUNTIME)</code>: 指定了该注解的生命周期为运行时，这意味着它可以在运行时通过反射机制读取。</li>\n<li><code>@Target({ElementType.METHOD})</code>: 指定了该注解可以应用于方法上。这意味着你可以在方法级别使用<code>JRepeat</code>注解来防止方法被重复调用。</li>\n<li><code>@Documented</code>: 表明这个注解应该被包含在生成的JavaDoc文档中，方便开发者理解其用途。</li>\n</ul>\n<p>​\t<code>JRepeat</code>注解定义了两个属性：</p>\n<ul>\n<li><code>lockTime()</code>：这是一个没有默认值的方法，意味着使用此注解时必须为其指定一个整数值。这个值表示锁的超时时间，单位通常取决于具体实现（但未在代码中明确），用于控制锁在Redis中自动释放的时间长度。</li>\n<li><code>lockKey() default \"\"</code>: 这个属性提供了默认值<code>\"\"</code>，即空字符串。它代表了在Redis中用于锁定的键的名称。如果未在注解使用时指定，则默认为空字符串。实际应用中，为了确保锁的唯一性，通常需要根据业务场景设置一个具有唯一性的键名。</li>\n</ul>\n<h3> 2.  RepeatSubmitAspect 切面拦截器</h3>\n<h4> 源码</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 代码解释</h4>\n<p>这段代码定义了一个AOP（面向切面编程）的切面类<code>RepeatSubmitAspect</code>，其主要作用是通过拦截带有<code>@JRepeat</code>注解的方法来实现防止重复提交的功能。这里使用了Redisson 客户端来实现分布式锁，确保在高并发环境下操作的原子性和一致性</p>\n<h5> 类注解</h5>\n<ul>\n<li><code>@Aspect</code>: 表示该类是一个切面类，用于定义切点（Pointcut）、通知（Advice）等AOP相关的操作。</li>\n<li><code>@Component</code>: 将该类标记为Spring的一个Bean，使其能够被Spring容器管理。</li>\n</ul>\n<h5> 成员变量</h5>\n<ul>\n<li><code>@Resource</code>: 用于注入<code>RedissonLockClient</code>实例，这是与Redis交互并处理锁逻辑的关键组件。</li>\n</ul>\n<h5> 方法说明</h5>\n<h6> pointCut 方法</h6>\n<ul>\n<li><strong>作用</strong>: 定义切入点表达式，匹配所有标有<code>@JRepeat</code>注解的方法。</li>\n<li><strong>参数</strong>: <code>jRepeat</code> 是一个<code>JRepeat</code>类型的参数，代表了被拦截方法上的<code>@JRepeat</code>注解实例。</li>\n</ul>\n<h6> repeatSubmit 方法</h6>\n<ul>\n<li>环绕通知(@Around): 在匹配的方法执行前后进行拦截处理。\n<ul>\n<li>参数:\n<ul>\n<li><code>joinPoint</code>: 代表了被拦截的方法的执行点，可以从中获取方法签名、参数等信息。</li>\n<li><code>jRepeat</code>: 当前执行方法上的<code>@JRepeat</code>注解实例。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>流程:\n<ol>\n<li><strong>解析参数</strong>: 使用<code>LocalVariableTableParameterNameDiscoverer</code>获取方法参数名，以便后续拼接锁的键值。</li>\n<li><strong>构建锁键</strong>: 根据<code>@JRepeat</code>注解中的<code>lockKey</code>属性和方法参数值，动态生成锁的键。</li>\n<li><strong>加锁处理</strong>: 调用<code>redissonLockClient.fairLock(key, ..., jRepeat.lockTime())</code>尝试公平锁，如果在指定的<code>lockTime</code>内获取锁成功，则执行原方法；否则抛出<code>JeecgCloudException</code>阻止重复提交。</li>\n<li><strong>执行原方法</strong>: 加锁成功后，通过<code>joinPoint.proceed()</code>执行被拦截的方法。</li>\n<li><strong>释放锁</strong>: 不论方法执行结果如何，在<code>finally</code>块中确保解锁操作执行，释放<code>Redis</code>锁资源。</li>\n</ol>\n</li>\n</ul>\n<h5> 关键技术点</h5>\n<ul>\n<li><strong>AOP切面编程</strong>: 通过定义切点和通知逻辑，实现了在不修改原有业务代码的基础上，增强了防止重复提交的功能。</li>\n<li><strong>Redisson</strong>: 提供了对Redis高级功能的支持，如分布式锁，这里利用了它的公平锁特性来保证线程安全和操作的有序性。</li>\n<li><strong>动态生成锁键</strong>: 结合方法参数值动态生成锁的键，使得每个特定的业务操作都能获得唯一的锁，避免锁的范围过大影响并发性能。</li>\n</ul>\n<h3> 3. BaseAspect 父切面拦截器</h3>\n<h4> 源码</h4>\n<p>用于解析Spring Expression Language (SpEL) 表达式的方法</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 代码解释</h4>\n<h5> <code>getValueBySpEL</code> 方法</h5>\n<ul>\n<li><strong>目的</strong>: 该方法主要用于解析传入的SpEL表达式，并根据表达式的计算结果生成一个或多个锁的键值。这些键值随后可用于分布式锁的获取与释放操作，确保操作的安全性和幂等性。</li>\n<li><strong>参数</strong>:\n<ul>\n<li><code>key</code>: 字符串类型，包含SpEL表达式，可能直接是一个字符串键值或者以<code>#</code>开头的表达式，如<code>#orderId</code>，用于引用方法参数。</li>\n<li><code>parameterNames</code>: 字符串数组，表示被拦截方法的参数名。</li>\n<li><code>values</code>: 对象数组，对应方法的实际参数值。</li>\n<li><code>keyConstant</code>: 字符串常量，用于在最终生成的锁键中添加一个固定的后缀。</li>\n</ul>\n</li>\n<li><strong>流程</strong>:\n<ol>\n<li><strong>检查直接键值</strong>: 如果<code>key</code>不包含<code>#</code>，说明是一个直接的键值，直接加上<code>keyConstant</code>后缀构造锁键并返回。</li>\n<li><strong>初始化SpEL解析环境</strong>: 创建<code>ExpressionParser</code>和<code>EvaluationContext</code>，并将方法参数绑定到上下文中。</li>\n<li><strong>解析SpEL表达式</strong>: 使用<code>parser</code>解析<code>key</code>中的SpEL表达式，并在给定的<code>context</code>中求值。</li>\n<li><strong>处理表达式结果</strong>: 根据表达式计算得到的<code>value</code>类型（可能是单个值、列表或数组），遍历并调用<code>addKeys</code>方法为每个元素添加锁键。</li>\n<li><strong>记录和返回</strong>: 打印日志并返回生成的所有锁键列表。</li>\n</ol>\n</li>\n</ul>\n<h5> <code>addKeys</code> 方法</h5>\n<ul>\n<li><strong>辅助功能</strong>: 这是一个私有方法，用于向锁键列表<code>keys</code>中添加元素。它接收一个对象<code>o</code>和一个常量<code>keyConstant</code>，构造锁键（格式为<code>redis:lock:</code> + <code>o.toString()</code> + <code>keyConstant</code>）并将其加入到<code>keys</code>列表中。</li>\n</ul>\n<h2> 总结</h2>\n<p>@JRepeat 注解是 jeecg-boot 中一个强大且简洁的工具，可以有效防止重复提交，提升应用的可靠性和用户体验。通过简单的注解和拦截配置，即可轻松实现重复提交拦截功能。如果你在实际使用中遇到任何问题或有更多的需求，可以根据具体情况调整缓存逻辑或配置，以适应你的应用场景。</p>\n<p>希望这篇博客能帮助你更好地理解和使用 @JRepeat 注解来防止重复提交。如果你有任何疑问或需要进一步的帮助，请随时留言讨论。</p>\n",
      "date_published": "2024-05-16T16:32:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "源码解读",
        "jeecg-boot"
      ]
    },
    {
      "title": "若依源码解读：图片验证码",
      "url": "https://www.fanliu.top/CodeInterpretation/ruoyi-vue/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%EF%BC%9A%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81.html",
      "id": "https://www.fanliu.top/CodeInterpretation/ruoyi-vue/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%EF%BC%9A%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81.html",
      "summary": "若依通过合理的验证码生成流程和相应的代码实现，为应用程序提供了生成图片验证码和基于数学运算的验证码文本的功能，以增加系统的安全性和防护能力。 本文讨论了若依（Ruoyi）生成图片验证码的过程以及相关代码。首先，我们了解了生成图片验证码的基本步骤，包括生成随机字符串、创建图片对象、绘制背景和文本、添加干扰线等。 接下来，我们分析了若依中的验证码生成控制器...",
      "content_html": "<h1> 若依源码解读：图片验证码</h1>\n<p>若依通过合理的验证码生成流程和相应的代码实现，为应用程序提供了生成图片验证码和基于数学运算的验证码文本的功能，以增加系统的安全性和防护能力。\n本文讨论了若依（Ruoyi）生成图片验证码的过程以及相关代码。首先，我们了解了生成图片验证码的基本步骤，包括生成随机字符串、创建图片对象、绘制背景和文本、添加干扰线等。\n接下来，我们分析了若依中的验证码生成控制器，它根据配置的验证码类型，在后台生成对应类型的验证码，并将验证码图片以Base64编码的形式返回给前端页面。\n最后，我们解释了一个自定义的验证码文本生成器，它生成基于数学运算的验证码文本，要求用户进行计算并输入结果进行验证。这种验证码形式提高了安全性和防止自动化攻击的能力。</p>\n<h3> 1. 生成图片验证码的过程</h3>\n<p>生成图片验证码的过程包括生成随机字符串、创建图片对象、绘制背景和文本、添加干扰线、图像处理和输出验证码。这样生成的验证码图片可以用于用户身份验证、防止机器人攻击等安全性相关的场景。具体步骤如下：</p>\n<ol>\n<li>生成随机字符串：首先，使用随机算法生成一串指定长度的随机字符串，通常是包含数字和字母的组合。该字符串将成为验证码的文本内容。</li>\n<li>创建验证码图片：使用Java的图形处理库，如Java 2D或JavaFX，创建一个空白图片。一般情况下，图片的尺寸是固定的，如宽度为100像素，高度为40像素。</li>\n<li>绘制背景：可以选择在验证码图片上绘制一些干扰背景，以增加验证码的安全性。例如，可以绘制一些随机的干扰线、噪点或颜色块。</li>\n<li>绘制文本：使用字体库从系统中选择一个字体，将生成的随机字符串绘制到验证码图片上。为了增加验证码的可读性，通常会随机选择一种字体、字号和颜色，并将每个字符绘制在图片上不同的位置。</li>\n<li>添加干扰线：为了增加验证码的复杂度和防止自动识别，可以在图片上绘制一些干扰线。这些干扰线可以是随机位置、随机颜色和随机形状的线条。</li>\n<li>图片处理：对生成的验证码图片进行一些图像处理操作，例如模糊、扭曲或旋转等，以增加验证码的复杂度和安全性。</li>\n<li>输出验证码：最后，将生成的验证码图片以某种方式输出给用户，通常是通过HTTP响应返回给前端页面。前端页面可以将该图片显示给用户，并且用户需要输入验证码的文本内容进行验证。</li>\n</ol>\n<p>若依中的验证码生成控制器: CaptchaController</p>\n<p>若依（Ruoyi）通过CaptchaController来生成验证码并返回给前端页面。根据配置的验证码类型，在后台生成对应类型的验证码，并将验证码的实际值存入缓存中，然后将验证码图片以Base64编码的形式返回给前端页面。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>逐步解释这段代码的主要部分：</p>\n<ol>\n<li>控制器注解：<code>@RestController</code> 注解表示这是一个RESTful风格的控制器，用于处理HTTP请求并返回JSON格式的响应。</li>\n<li>注入依赖：<code>@Resource</code> 和 <code>@Autowired</code> 注解用于依赖注入。<code>captchaProducer</code> 和 <code>captchaProducerMath</code> 是生成验证码的 <code>Producer</code> 对象，<code>redisCache</code> 是 Redis 缓存对象，<code>configService</code> 是系统配置服务。</li>\n<li>属性注入：<code>@Value</code> 注解用于从配置文件中读取属性值。<code>captchaType</code> 是验证码的类型，该值通过 <code>ruoyi.captchaType</code> 属性指定。</li>\n<li><code>getCode</code> 方法：<code>@GetMapping(\"/captchaImage\")</code> 注解表示处理GET请求的 <code>/captchaImage</code> 路径。该方法用于生成验证码并返回给前端页面。</li>\n<li>验证码开关判断：首先，通过 <code>configService.selectCaptchaOnOff()</code> 方法判断验证码的开关状态，将结果存入 <code>captchaOnOff</code> 变量，并将其放入 <code>AjaxResult</code> 对象中返回给前端。</li>\n<li>生成验证码：根据 <code>captchaType</code> 的值选择不同类型的验证码生成方式。如果 <code>captchaType</code> 是 \"math\"，则使用 <code>captchaProducerMath</code> 生成基于数学运算的验证码；如果 <code>captchaType</code> 是 \"char\"，则使用 <code>captchaProducer</code> 生成基于字符的验证码。同时，记录生成的验证码字符串 <code>capStr</code> 和验证码的实际值 <code>code</code>，并生成验证码图片 <code>image</code>。</li>\n<li>保存验证码信息：生成一个唯一的 <code>uuid</code> 作为验证码的标识符，将 <code>code</code> 存入 Redis 缓存中，并设置过期时间为 <code>Constants.CAPTCHA_EXPIRATION</code> 分钟。</li>\n<li>图片转换和返回：将生成的验证码图片转换为字节数组，使用 <code>Base64.encode</code> 方法将字节数组转换为字符串，并将 <code>uuid</code> 和图片字符串放入 <code>AjaxResult</code> 对象中返回给前端。</li>\n</ol>\n<h3> 2. 验证码文本生成器: KaptchaTextCreator</h3>\n<p>这段代码是一个验证码文本生成器，用于生成基于数学运算的验证码文本。该验证码文本生成器在生成验证码时，采用基于数学运算的方式，使得用户需要计算验证码的结果，并输入到验证码输入框中进行验证。这种验证码形式增加了安全性和防止自动化攻击的能力。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>让我逐步解释这段代码的主要部分：</p>\n<ol>\n<li>类定义和继承：<code>KaptchaTextCreator</code> 类继承自 <code>DefaultTextCreator</code>，后者是 <code>kaptcha</code> 库中提供的默认文本生成器。</li>\n<li>静态常量定义：<code>CNUMBERS</code> 是一个包含数字0到10的字符串数组。</li>\n<li><code>getText</code> 方法重写：重写了父类的 <code>getText</code> 方法，用于生成验证码的文本内容。</li>\n<li>生成验证码文本：首先，通过 <code>Random</code> 类生成两个随机数 <code>x</code> 和 <code>y</code>，范围为0到9。然后，根据随机操作数的值 <code>randomoperands</code>，进行不同的数学运算。\n<ul>\n<li>如果 <code>randomoperands</code> 是0，表示进行乘法运算。将 <code>x</code> 和 <code>y</code> 相乘，将运算表达式和结果添加到 <code>suChinese</code> 字符串中。</li>\n<li>如果 <code>randomoperands</code> 是1，表示进行除法或加法运算。如果 <code>x</code> 不为0，并且 <code>y</code> 能整除 <code>x</code>，则进行除法运算，将结果添加到 <code>suChinese</code> 中；否则进行加法运算，将结果添加到 <code>suChinese</code> 中。</li>\n<li>如果 <code>randomoperands</code> 是2，表示进行减法运算。如果 <code>x</code> 大于等于 <code>y</code>，进行 <code>x - y</code> 运算，否则进行 <code>y - x</code> 运算，将结果添加到 <code>suChinese</code> 中。</li>\n<li>如果 <code>randomoperands</code> 不是上述情况，表示进行加法运算，将 <code>x</code> 和 <code>y</code> 相加，将运算表达式和结果添加到 <code>suChinese</code> 中。</li>\n</ul>\n</li>\n<li>返回验证码文本：最后，将运算表达式和结果连接为一个字符串，并添加特殊字符 \"=?@\"，最终返回生成的验证码文本。</li>\n</ol>\n<h3> 3.注册到 Spring 容器中</h3>\n<p>若你想用在项目，需要去配置验证码生成器，别忘了在合适的位置加上以下代码，并根据实际情况去调整。</p>\n<p>以下代码<code>CaptchaConfig</code>，用于配置验证码生成器——Google的Kaptcha库。这个配置类通过两个<code>@Bean</code>方法定义了两种不同风格的验证码生成器实例，并将它们分别注入到Spring容器中，以便在应用程序中使用。</p>\n<ol>\n<li><code>getKaptchaBean()</code> 方法：\n<ul>\n<li>创建一个 <code>DefaultKaptcha</code> 实例，这是 Kaptcha 库默认的验证码生成器。</li>\n<li>定义一系列属性（以 <code>KAPTCHA_</code> 开头），这些属性用来配置验证码的样式和行为，如边框、文本颜色、大小、长度等。</li>\n<li>将所有属性封装到 <code>Properties</code> 对象中。</li>\n<li>使用 <code>Config</code> 类将 <code>Properties</code> 对象转换为 Kaptcha 配置对象。</li>\n<li>设置 <code>DefaultKaptcha</code> 的配置，使其按照给定的属性生成验证码图片。</li>\n<li>最后，返回配置好的 <code>DefaultKaptcha</code> 实例，并将其注册到 Spring 容器中，bean 名称为 \"captchaProducer\"。</li>\n</ul>\n</li>\n<li><code>getKaptchaBeanMath()</code> 方法：\n<ul>\n<li>与上一个方法类似，创建并配置另一个 <code>DefaultKaptcha</code> 实例，但这次有一些不同的属性设置，例如文本颜色、字符间距、字符长度以及验证码类型（这里通过自定义的 <code>KaptchaTextCreator</code> 文本生成器实现数学算式验证码）。</li>\n<li>其他配置项包括噪音效果、背景色等，也进行了自定义设置。</li>\n<li>同样地，将配置好的 <code>DefaultKaptcha</code> 注入到 Spring 容器中，bean 名称为 \"captchaProducerMath\"。</li>\n</ul>\n</li>\n</ol>\n<p>代码提供了两种不同类型的验证码生成器配置，分别用于生成普通字符验证码和数学算式验证码，在Spring应用启动时会加载这些配置，并根据需要注入到相关服务或组件中。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-03-16T16:32:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "源码解读",
        "ruoyi"
      ]
    },
    {
      "title": "若依源码解读：防止表单重复提交",
      "url": "https://www.fanliu.top/CodeInterpretation/ruoyi-vue/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%EF%BC%9A%E9%98%B2%E6%AD%A2%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4.html",
      "id": "https://www.fanliu.top/CodeInterpretation/ruoyi-vue/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%EF%BC%9A%E9%98%B2%E6%AD%A2%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4.html",
      "summary": "1. 如何防止请求重复提交 在接口方法上添加@RepeatSubmit注解即可，注解参数说明： 参数 类型 默认值 描述 -------- ------ -------------------------- ------------------------------------ interval int 5000 间隔时间(ms)，小于此时间视为重复...",
      "content_html": "<h1> 若依源码解读：防止表单重复提交</h1>\n<h2> 1. 如何防止请求重复提交</h2>\n<p>在接口方法上添加<code>@RepeatSubmit</code>注解即可，注解参数说明：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>interval</td>\n<td>int</td>\n<td>5000</td>\n<td>间隔时间(ms)，小于此时间视为重复提交</td>\n</tr>\n<tr>\n<td>message</td>\n<td>String</td>\n<td>不允许重复提交，请稍后再试</td>\n<td>提示消息</td>\n</tr>\n</tbody>\n</table>\n<p><strong>示例1：采用默认参数</strong></p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>示例2：指定防重复时间和错误消息</strong></p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.2 如何进行流量限制控制</h3>\n<p>后端可以通过<code>@RateLimiter</code>注解控制</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 2. 代码解读</h2>\n<blockquote>\n<p>若依（Ruoyi）是一款基于Spring Boot和MyBatis的开源后台管理系统，它提供了一系列的拦截器（Interceptor）用于处理请求。其中，RepeatSubmitInterceptor（重复提交拦截器）是若依系统中的一个关键拦截器，用于防止用户重复提交表单请求。</p>\n<p>在Web应用程序中，用户可能会重复提交表单，例如在点击提交按钮后多次点击或者网络延迟造成用户误以为提交未成功而再次提交。这可能导致一些问题，例如重复的数据插入或重复的业务逻辑处理。</p>\n<p>RepeatSubmitInterceptor 的主要作用是在用户提交表单请求时，对请求进行拦截和处理，防止重复提交。判断该url是否有RepeatSubmit注解，如果有的话，就里面取到了：【参数，url，用户】然后和RepeatSubmit里的过期时间一起放到了redis。</p>\n<p>下次再来的时候会去redis里面去查询，如果已经过期没有，那么通过，然后再重新放入redis.如果还有，那么就不通过。</p>\n<p>但这里有个问题，如果参数是从body里面去取来的，那么流会只读一次就再读不到了。于是在此之前使用了RepeatableFilter做了关于这个的封装的字节数组Requestwrapper。</p>\n</blockquote>\n<h3> 2.1 配置拦截器：WebMvcConfigurer</h3>\n<p>WebMvcConfigurer配置RepeatSubmitInterceptor ：\n在继承自WebMvcConfigurer的ResourcesConfig会加入RepeatSubmitInterceptor ，RepeatSubmitInterceptor 最主要的方法：this.isRepeatSubmit(request, annotation)是由继承自ResourcesConfig 的SameUrlDataInterceptor 实现的。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2 RepeatSubmit注解</h3>\n<p>在需要防止重复提交的Controller方法上添加 @RepeatSubmit 注解，该注解是若依框架提供的，用于启用重复提交拦截器。\n只有标注了@RepeatSubmit 注解才需要防止表单重复提交。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.3 拦截器具体实现：RepeatSubmitInterceptor和SameUrlDataInterceptor</h3>\n<h3> preHandle：在请求处理之前进行拦截处理。</h3>\n<p>它会从请求中提取出重复提交所需的标识，并进行重复提交的检查。如果检查到重复提交，可以返回错误信息或者采取其他处理方式。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此处的核心是：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.4 验证是否重复提交由子类实现具体的防重复提交的规则</h3>\n<p>RepeatSubmitInterceptor 最主要的方法：this.isRepeatSubmit(request, annotation)是由继承自ResourcesConfig 的SameUrlDataInterceptor 实现的。\n判断该url是否有RepeatSubmit注解，如果有的话，就里面取到了：【参数，url，用户】然后和RepeatSubmit里的过期时间一起放到了redis</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.5 解决参数读取问题：HttpServletRequest和RepeatedlyRequestWrapper</h3>\n<p>在项目中经常出现多次读取HTTP请求体的情况，这时候可能就会报错，原因是读取HTTP请求体的操作，最终都要调用HttpServletRequest的getInputStream()方法和getReader()方法，而这两个方法总共只能被调用一次，第二次调用就会报错。</p>\n<p>RepeatableFilter用RepeatedlyRequestWrapper 包装了HttpServletRequest。将HttpServletRequest的字节流的数据，保存到一个变量中，重写getInputStream()方法和getReader()方法，从变量中读取数据，返回给调用者。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-03-16T14:52:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "源码解读",
        "ruoyi"
      ]
    },
    {
      "title": "mysql学习笔记_01",
      "url": "https://www.fanliu.top/db/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01.html",
      "id": "https://www.fanliu.top/db/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01.html",
      "summary": "1. Mysql的安装和下载 一、下载 点开下面的链接：https://dev.mysql.com/downloads/mysql/ !image-20221020012302873 (./MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/image-20221020012302873.png) 点击Downlo...",
      "content_html": "<h1> mysql</h1>\n<h2> 1. Mysql的安装和下载</h2>\n<h3> 一、下载</h3>\n<p>点开下面的链接：https://dev.mysql.com/downloads/mysql/</p>\n<figure><figcaption>image-20221020012302873</figcaption></figure>\n<p>点击Download 就可以下载对应的安装包了, 安装包如下: </p>\n<h3> 二、解压</h3>\n<p>下载完成后我们得到的是一个压缩包，将其解压，我们就可以得到MySQL 8.0.31 的软件本体了(就是一个文件夹)，我们可以把它放在你想安装的位置 。</p>\n<figure><figcaption>image-20221020013011737</figcaption></figure>\n<h3> 三、配置</h3>\n<h4> 1. 添加环境变量</h4>\n<blockquote>\n<p>环境变量里面有很多选项，这里我们只用到<code>Path</code>这个参数。为什么在初始化的开始要添加环境变量呢？</p>\n<p>在黑框(即CMD)中输入一个可执行程序的名字，Windows会先在环境变量中的<code>Path</code>所指的路径中寻找一遍，如果找到了就直接执行，没找到就在当前工作目录找，如果还没找到，就报错。我们添加环境变量的目的就是能够在任意一个黑框直接调用MySQL中的相关程序而不用总是修改工作目录，大大简化了操作。</p>\n</blockquote>\n<p>右键<code>此电脑</code>→<code>属性</code>，点击<code>高级系统设置</code></p>\n<figure><figcaption>img</figcaption></figure>\n<p>点击<code>环境变量</code></p>\n<figure><figcaption>img</figcaption></figure>\n<p>在<code>系统变量</code>中新建MYSQL_HOME</p>\n<figure><figcaption>image-20221020013128323</figcaption></figure>\n<p>在<code>系统变量</code>中找到并<strong>双击</strong><code>Path</code></p>\n<figure><figcaption>img</figcaption></figure>\n<p>点击<code>新建</code></p>\n<figure><figcaption>image-20201109135248104</figcaption></figure>\n<p>最后点击确定。</p>\n<p><strong>如何验证是否添加成功？</strong></p>\n<p>右键开始菜单(就是屏幕左下角)，选择<code>命令提示符(管理员)</code>，打开黑框，敲入<code>mysql</code>，回车。</p>\n \n<p>如果提示<code>Can't connect to MySQL server on 'localhost'</code>则证明添加成功；</p>\n  \n<p>如果提示<code>mysql不是内部或外部命令，也不是可运行的程序或批处理文件</code>则表示添加添加失败，请重新检查步骤并重试。</p>\n<h4> 2. 初始化MySQL</h4>\n<p><mark>以管理员身份，运行命令行窗口：</mark></p>\n\n<p>在刚才的命令行中，输入如下的指令：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20201109140955772</figcaption></figure>\n<p>稍微等待一会，如果出现没有出现报错信息，则证明data目录初始化没有问题，此时再查看MySQL目录下已经有data目录生成。</p>\n<p>tips：如果出现如下错误</p>\n<figure><figcaption>image-20201109135848054</figcaption></figure>\n<p>是由于权限不足导致的，以管理员方式运行 cmd</p>\n \n<h4> 3. 注册MySQL服务</h4>\n<p>命令行（注意必须以管理员身份启动）中，输入如下的指令，回车执行：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20201109141325810</figcaption></figure>\n<p>现在你的计算机上已经安装好了MySQL服务了。</p>\n<h4> 4. 启动MySQL服务</h4>\n<p>在黑框里敲入<code>net start mysql</code>，回车。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20220518183747072</figcaption></figure>\n<h4> 5. 修改默认账户密码</h4>\n<p>在黑框里敲入<code>mysqladmin -u root password 1234</code>，这里的<code>1234</code>就是指默认管理员(即root账户)的密码，可以自行修改成你喜欢的。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>img</figcaption></figure>\n<h3> 四、登录MySQL</h3>\n<p>右键开始菜单，选择<code>命令提示符</code>，打开黑框。\n在黑框中输入，<code>mysql -uroot -p1234</code>，回车，出现下图且左下角为<code>mysql&gt;</code>，则登录成功。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>  \n<p><strong>到这里你就可以开始你的MySQL之旅了！</strong></p>\n<p>退出mysql：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>登陆参数：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 五、卸载MySQL</h3>\n<p>如果你想卸载MySQL，也很简单。</p>\n<p>点击开始菜单，输入cmd，选择 \"命令提示符\"，选择右侧的 \"以管理员身份运行\"。</p>\n \n<ol>\n<li>敲入<code>net stop mysql</code>，回车。</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption> </figcaption></figure>\n<ol start=\"2\">\n<li>再敲入<code>mysqld -remove mysql</code>，回车。</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>img</figcaption></figure>\n<ol start=\"3\">\n<li>最后删除MySQL目录及相关的环境变量。</li>\n</ol>\n<p><strong>至此，MySQL卸载完成！</strong></p>\n<h2> 2.MySQL概述</h2>\n<h3> 介绍</h3>\n<p>MySQL是一个<strong>关系型数据库管理系统</strong>由瑞典<strong>MySQL AB</strong>公司开发，属于 <a href=\"https://baike.baidu.com/item/Oracle?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">Oracle</a> 旗下产品。MySQL 是最流行的<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/696511?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">关系型数据库管理系统</a>之一，在 <a href=\"https://baike.baidu.com/item/WEB/150564?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">WEB</a> 应用方面，MySQL是最好的 <a href=\"https://baike.baidu.com/item/RDBMS/1048260?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">RDBMS</a> (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p>\n<p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p>\n<p>MySQL所使用的 SQL 语言是用于访问<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">数据库</a>的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和<a href=\"https://baike.baidu.com/item/%E5%95%86%E4%B8%9A%E7%89%88/1817444?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">商业版</a>，由于其体积小、速度快、总体拥有成本低，尤其是<a href=\"https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E7%A0%81/7176422?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">开放源码</a>这一特点，一般中小型和大型网站的开发都选择 MySQL 作为<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE%E5%BA%93/6399264?fromModule=lemma_inlink\" target=\"_blank\" rel=\"noopener noreferrer\">网站数据库</a>。</p>\n<h3> MySql数据模型</h3>\n<p><strong>关系型数据库（RDBMS):建立在关系模型基础上，由多张互相连接的二维表组成的数据库。</strong></p>\n\n<ul>\n<li><strong>使用表存储数据，格式统一，便于维护</strong></li>\n<li><strong>使用SQL语言操作，标准统一，使用方便，可用于复杂查询</strong></li>\n</ul>\n<h3> SQL简介</h3>\n<p>sql：一门操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准</p>\n<h3> SQL分类</h3>\n<p>SQL语句通常分为四大类：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>全称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DDL</td>\n<td>Data Definition Language</td>\n<td>数据定义语言，用来定义数据库对象(数据库，表，字段)</td>\n</tr>\n<tr>\n<td>DML</td>\n<td>Data Manipulation Language</td>\n<td>数据操作语言，用来对数据库表中的数据进行增删改</td>\n</tr>\n<tr>\n<td>DQL</td>\n<td>Data Query Language</td>\n<td>数据查询语言，用来查询数据库中表的记录</td>\n</tr>\n<tr>\n<td>DCL</td>\n<td>Data Control Language</td>\n<td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td>\n</tr>\n</tbody>\n</table>\n<h3> SQL通用语法</h3>\n<ul>\n<li><strong>SQL语句可以单行/多行书写，以分号结束。</strong></li>\n<li><strong>SQL语句中可以增加缩进/空格来增强可读性。</strong></li>\n<li><strong>SQL语句中的关键字不区分大小写。</strong></li>\n<li><em><em>SQL语句注释：单行注释（-- 注释），多行注释（/</em> 注释 <em>/）</em></em></li>\n</ul>\n<h3> DDL（数据库操作）</h3>\n<h4> 查询</h4>\n<p>查询所有数据库</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205094908137</figcaption></figure>\n<p>查询当前数据库</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205095136562</figcaption></figure>\n<h4> 创建</h4>\n<p>创建数据库</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205095919779</figcaption></figure>\n<p>看看效果吧</p>\n<figure><figcaption>image-20230205100011944</figcaption></figure>\n<p><mark>注意：在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。</mark></p>\n<figure><figcaption>image-20230205100304775</figcaption></figure>\n<ul>\n<li>可以使用if not exists来避免这个问题</li>\n</ul>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>命令行执行效果如下：</p>\n<figure><figcaption>image-20230205100617631</figcaption></figure>\n<h4> 使用</h4>\n<p><strong>语法：</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则不能操作。</p>\n</blockquote>\n<p>案例：切换到itcast数据</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>命令执行效果如下：</p>\n<figure><figcaption>image-20220829124929708</figcaption></figure>\n<h4> 删除</h4>\n<p><strong>语法：</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>如果删除一个不存在的数据库，将会报错。</p>\n<p>可以加上参数 if exists ，如果数据库存在，再执行删除，否则不执行删除。</p>\n</blockquote>\n<p>案例：删除itcast数据库</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>命令执行效果如下：</p>\n<figure><figcaption>image-20220829125006142</figcaption></figure>\n<blockquote>\n<p>说明：上述语法中的database，也可以替换成 schema</p>\n<ul>\n<li>如：create schema db01;</li>\n<li>如：show schemas;</li>\n</ul>\n<figure><figcaption>image-20221205180608004</figcaption></figure>\n</blockquote>\n<h3> DDL(表操作)</h3>\n<p>关于表结构的操作也是包含四个部分：创建表、查询表、修改表、删除表。</p>\n<h4> 创建表(create)</h4>\n<h5> 语法</h5>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意： [ ] 中的内容为可选参数； 最后一个字段后面没有逗号</p>\n</blockquote>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205101521439</figcaption></figure>\n<h5> 约束</h5>\n<p>概念：约束就是作用在表中的字段上的规则，限制储存在表中的数据。</p>\n<p>作用：就是来保证数据库当中数据的正确性、有效性和完整性。</p>\n<p>在MySQL数据库当中，有种约束：</p>\n<table>\n<thead>\n<tr>\n<th><strong>约束</strong></th>\n<th><strong>描述</strong></th>\n<th><strong>关键字</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>非空约束</td>\n<td>限制该字段值不能为null</td>\n<td>not null</td>\n</tr>\n<tr>\n<td>唯一约束</td>\n<td>保证字段的所有数据都是唯一、不重复的</td>\n<td>unique</td>\n</tr>\n<tr>\n<td>主键约束</td>\n<td>主键是一行数据的唯一标识，要求非空且唯一</td>\n<td>primary key</td>\n</tr>\n<tr>\n<td>默认约束</td>\n<td>保存数据时，如果未指定该字段值，则采用默认值</td>\n<td>default</td>\n</tr>\n<tr>\n<td>外键约束</td>\n<td>让两张表的数据建立连接，保证数据的一致性和完整性</td>\n<td>foreign key</td>\n</tr>\n<tr>\n<td>自增约束</td>\n<td>让数值类型自增</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>无负数倍增</td>\n<td>用途1是起到约束数值的作用，2是可以增加数值范围（相当于把负数那部分加到正数上）</td>\n<td>unsigned</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>约束是作用在表中的字段上的，可以在创建/修改表的时候添加约束。</p>\n</blockquote>\n<h5> 数据类型</h5>\n<ul>\n<li>java有八种基本数据类型分为四类八种，四类分别为整型、浮点型、布尔型、字符型；分为四类（整型、浮点型、布尔型、字符型）八种分别为byte、short、int、long、float、double、boolean、char；</li>\n</ul>\n<figure><figcaption>img</figcaption></figure>\n<p><strong>MySQL中的类型也有很多，主要分成三类：数值类型、字符串类型、日期时间类型。</strong></p>\n<h6> 数值类型</h6>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>大小</th>\n<th>有符号(SIGNED)范围</th>\n<th>无符号(UNSIGNED)范围</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TINYINT</td>\n<td>1byte</td>\n<td>(-128，127)</td>\n<td>(0，255)</td>\n<td>小整数值</td>\n</tr>\n<tr>\n<td>SMALLINT</td>\n<td>2bytes</td>\n<td>(-32768，32767)</td>\n<td>(0，65535)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>MEDIUMINT</td>\n<td>3bytes</td>\n<td>(-8388608，8388607)</td>\n<td>(0，16777215)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>INT/INTEGER</td>\n<td>4bytes</td>\n<td>(-2147483648，2147483647)</td>\n<td>(0，4294967295)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>8bytes</td>\n<td>(-2<sup>63，2</sup>63-1)</td>\n<td>(0，2^64-1)</td>\n<td>极大整数值</td>\n</tr>\n<tr>\n<td>FLOAT</td>\n<td>4bytes</td>\n<td>(-3.402823466 E+38，3.402823466351 E+38)</td>\n<td>0 和 (1.175494351  E-38，3.402823466 E+38)</td>\n<td>单精度浮点数值</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>8bytes</td>\n<td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td>\n<td>0 和  (2.2250738585072014 E-308，1.7976931348623157 E+308)</td>\n<td>双精度浮点数值</td>\n</tr>\n<tr>\n<td>DECIMAL</td>\n<td></td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>小数值(精确定点数)</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h6> 字符串类型</h6>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>大小</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CHAR</td>\n<td>0-255 bytes</td>\n<td>定长字符串(需要指定长度)</td>\n</tr>\n<tr>\n<td>VARCHAR</td>\n<td>0-65535 bytes</td>\n<td>变长字符串(需要指定长度)</td>\n</tr>\n<tr>\n<td>TINYBLOB</td>\n<td>0-255 bytes</td>\n<td>不超过255个字符的二进制数据</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>0-255 bytes</td>\n<td>短文本字符串</td>\n</tr>\n<tr>\n<td>BLOB</td>\n<td>0-65 535 bytes</td>\n<td>二进制形式的长文本数据</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>0-65 535 bytes</td>\n<td>长文本数据</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB</td>\n<td>0-16 777 215 bytes</td>\n<td>二进制形式的中等长度文本数据</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>0-16 777 215 bytes</td>\n<td>中等长度文本数据</td>\n</tr>\n<tr>\n<td>LONGBLOB</td>\n<td>0-4 294 967 295 bytes</td>\n<td>二进制形式的极大文本数据</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>0-4 294 967 295 bytes</td>\n<td>极大文本数据</td>\n</tr>\n</tbody>\n</table>\n<p>char 与 varchar 都可以描述字符串，char是定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关 。而varchar是变长字符串，指定的长度为最大占用长度 。相对来说，char的性能会更高些。</p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h6> 日期时间类型</h6>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>大小(bytes)</th>\n<th>范围</th>\n<th>格式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DATA</td>\n<td>3</td>\n<td>1000-01-01到 9999-12-31</td>\n<td>YYYY-MM-DD</td>\n<td>日期</td>\n</tr>\n<tr>\n<td>TIME</td>\n<td>3</td>\n<td>-838:59:59 到 838:59:59</td>\n<td>HH:MM:SS</td>\n<td>时间值或者持续的时间</td>\n</tr>\n<tr>\n<td>YEAR</td>\n<td>1</td>\n<td>1901 到 2155</td>\n<td>YYYY</td>\n<td>年份值</td>\n</tr>\n<tr>\n<td>DATETIME</td>\n<td>8</td>\n<td>1000-01-01 到 9999-12-31 23:59:59</td>\n<td>YYYY-MM-DD HH:MM:SS</td>\n<td>混合日期的时间值</td>\n</tr>\n<tr>\n<td>TIMETAMP</td>\n<td>4</td>\n<td>1970-01-01 到 2038-01-19 03:14 :07/</td>\n<td>YYYY-MM-DD HH:MM:SS</td>\n<td>混合日期和时间值</td>\n</tr>\n</tbody>\n</table>\n\n<h6> 案例</h6>\n<p>需求：根据产品原型/需求创建表((设计合理的数据类型、长度、约束)</p>\n<figure><figcaption>image-20230205165156336</figcaption></figure>\n<p><strong>步骤：</strong></p>\n<ol>\n<li>\n<p>阅读产品原型及需求文档，看看里面涉及到哪些字段。</p>\n</li>\n<li>\n<p>查看需求文档说明，确认各个字段的类型以及字段存储数据的长度限制。</p>\n</li>\n<li>\n<p>在页面原型中描述的基础字段的基础上，再增加额外的基础字段。</p>\n</li>\n</ol>\n<p>使用SQL创建表：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 查询表(show)</h4>\n<blockquote>\n<p>关于表结构的查询操作，工作中一般都是直接基于<strong>图形化界面操作</strong>。</p>\n</blockquote>\n<p><strong>查询当前数据库所有表</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205101649699</figcaption></figure>\n<p><strong>查看指定表结构</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205101806613</figcaption></figure>\n<p><strong>查找表数据</strong></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205170320136</figcaption></figure>\n<p><strong>查询指定表的建表语句</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<h4> 修改表（alter）</h4>\n<p><strong>添加字段</strong></p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例： 为emp03表添加字段qq，字段类型为 varchar(10)</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p><strong>修改字段</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：修改qq字段的字段类型，将其长度由10修改为11</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>案例：修改qq字段名为 qq_num，字段类型varchar(12)</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n<p><strong>删除字段</strong></p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：删除tb_emp表中的qq_num字段</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p><strong>修改表名</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：将emp03表名修改为emp04</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205173136873</figcaption></figure>\n<h4> 删除表（drop）</h4>\n<p>删除表语法</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>if exists ：只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不加该参数项，删除一张不存在的表，执行将会报错)。</p>\n</blockquote>\n<p>案例：如果emp02表存在，则删除emp02表</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205173637529</figcaption></figure>\n<h3> DML(数据库操作)</h3>\n<p>DML是用来对数据库中的数据记录进行增删改查操作的。</p>\n<ul>\n<li>添加数据(INSERT)</li>\n<li>修改数据(UPDATE)</li>\n<li>删除数据(DELETE)</li>\n</ul>\n<h4> 增加(insert)</h4>\n<p>insert语法：</p>\n<ul>\n<li>\n<p>向指定字段添加数据</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>全部字段添加数据</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>批量添加数据（指定字段）</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>批量添加数据（全部字段）</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n<p><strong>案例</strong></p>\n<p><strong>向emp04表的所有字段添加数据</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205174732481</figcaption></figure>\n<p><strong>向tb_emp表的username、password，name、gender字段插入数据</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205175414398</figcaption></figure>\n<p><strong>批量向emp04表的username、password、name、gender字段插入数据</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230205175914736</figcaption></figure>\n<h4> 修改(update)</h4>\n<p>update语法：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例1：将emp04表中id为1的员工，姓名name字段更新为'张三'</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p>案例2：将emp04表的所有员工入职日期更新为'2010-01-01'</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<blockquote>\n<p><strong>注意：1.不带where的修改语句会修改整张表的所有数据</strong></p>\n<p>​\t\t\t<strong>2.在修改数据的时候，一般要修改公共字段update_time ,将其修改为 now() 当前操作时间 。</strong></p>\n</blockquote>\n<h4> 删除（delete）</h4>\n<p>delete语法</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例1：删除emp04表中id为1的员工</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p>案例2：删除emp04表中所有员工</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p>不小心删除的数据在mysql中可以恢复，在mysql中delete支持事务回滚，但是事先要开启事务</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n<h3> 数据库操作-DQL</h3>\n<ul>\n<li>\n<p>DQL英文全称是Data Query Language(数据查询语言)，用来查询数据库表中的记录。</p>\n</li>\n<li>\n<p>查询关键字：SELECT</p>\n<p>语法</p>\n</li>\n</ul>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> DQL-基本查询</h4>\n<ul>\n<li>\n<p>查询多个字段</p>\n<div class=\"language-MYSQL line-numbers-mode\" data-ext=\"MYSQL\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>查询所有字段（使用通配符）</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>设置别名</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>去除重复记录</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n</ul>\n<h5> DQL案例1</h5>\n<p>导入建表SQL</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>1.查询所有员工的 name,entrydate，并起别名(姓名、入职日期)</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p><strong>2.查询所有员工的职位</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<h4> 条件查询</h4>\n<p><strong>语法:</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>学习条件查询就是学习条件的构建方式，而在SQL语句当中构造条件的运算符分为两类：</p>\n<ul>\n<li>比较运算符</li>\n<li>逻辑运算符</li>\n</ul>\n<p>常用的比较运算符如下:</p>\n<table>\n<thead>\n<tr>\n<th><strong>比较运算符</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于等于</td>\n</tr>\n<tr>\n<td>=</td>\n<td>等于</td>\n</tr>\n<tr>\n<td>&lt;&gt; 或 !=</td>\n<td>不等于</td>\n</tr>\n<tr>\n<td>between ...  and ...</td>\n<td>在某个范围之内(含最小、最大值)</td>\n</tr>\n<tr>\n<td>in(...)</td>\n<td>在in之后的列表中的值，多选一</td>\n</tr>\n<tr>\n<td>like 占位符</td>\n<td>模糊匹配(_匹配单个字符, %匹配任意个字符)</td>\n</tr>\n<tr>\n<td>is null</td>\n<td>是null</td>\n</tr>\n</tbody>\n</table>\n<p>常用的逻辑运算符如下:</p>\n<table>\n<thead>\n<tr>\n<th><strong>逻辑运算符</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>and 或 &amp;&amp;</td>\n<td>并且 (多个条件同时成立)</td>\n</tr>\n<tr>\n<td>or 或 ||</td>\n<td>或者 (多个条件任意一个成立)</td>\n</tr>\n<tr>\n<td>not 或 !</td>\n<td>非 , 不是</td>\n</tr>\n</tbody>\n</table>\n<h5> 案例</h5>\n<ol>\n<li><strong>查询 姓名 为 杨逍 的员工</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206155654039</figcaption></figure>\n<ol start=\"2\">\n<li><strong>查询 id 小于等于 5 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"3\">\n<li><strong>查询 没有分配职位 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206160456181</figcaption></figure>\n<ol start=\"4\">\n<li><strong>查询 有职位 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><ol start=\"5\">\n<li><strong>查询 密码不等于 '123456' 的员工信息</strong></li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206160819059</figcaption></figure>\n<ol start=\"6\">\n<li><strong>查询入职日期 在 '2000-01-01' (包含) 到 '2010-01-01'(包含) 之间的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"7\">\n<li><strong>查询入职日期 不在 '2000-01-01' (包含) 到 '2010-01-01'(包含) 之间的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"8\">\n<li><strong>查询 入职时间 在 '2000-01-01' (包含) 到 '2010-01-01'(包含) 之间 且 性别为女 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206162022595</figcaption></figure>\n<ol start=\"9\">\n<li><strong>查询 职位是 2 (讲师), 3 (学工主管), 4 (教研主管) 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"10\">\n<li><strong>查询 姓名 为两个字的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"11\">\n<li><strong>查询 姓 '张' 的员工信息</strong></li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 聚合函数</h4>\n<p>聚合函数查询就是纵向查询，它是对一列的值进行计算，然后返回一个结果值。</p>\n<p>语法：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意 : 聚合函数会忽略空值，对NULL值不作为统计。</p>\n</blockquote>\n<p>常用聚合函数：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>count</td>\n<td>统计数量</td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n</tr>\n<tr>\n<td>avg</td>\n<td>平均值</td>\n</tr>\n<tr>\n<td>sum</td>\n<td>求和</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>count ：按照列去统计有多少行数据。</p>\n<ul>\n<li>在根据指定的列统计的时候，如果这一列中有null的行，该行不会被统计在其中。</li>\n</ul>\n<p>sum ：计算指定列的数值和，如果不是数值类型，那么计算结果为0</p>\n<p>max ：计算指定列的最大值</p>\n<p>min ：计算指定列的最小值</p>\n<p>avg ：计算指定列的平均值</p>\n</blockquote>\n<p>语法</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h5> 案例</h5>\n<ol>\n<li>\n<p><strong>统计该企业员工数量</strong></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206170843214</figcaption></figure>\n</li>\n<li>\n<p><strong>统计该企业员工 ID 的平均值</strong></p>\n</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206171343676</figcaption></figure>\n<ol start=\"3\">\n<li><strong>统计该企业最早入职的员工</strong></li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206172226146</figcaption></figure>\n<ol start=\"4\">\n<li><strong>统计该企业最迟入职的员工</strong></li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206172314816</figcaption></figure>\n<ol start=\"5\">\n<li><strong>统计该企业员工的 ID 之和</strong></li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206172405499</figcaption></figure>\n<h4> 分组查询</h4>\n<p>分组： 按照某一列或者某几列，把相同的数据进行合并输出。</p>\n<blockquote>\n<p>分组其实就是按列进行分类(指定列下相同的数据归为一类)，然后可以对分类完的数据进行合并计算。</p>\n<p>分组查询通常会使用聚合函数进行计算。</p>\n</blockquote>\n<p>语法：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h5> 案例</h5>\n<ol>\n<li><strong>根据性别分组 , 统计男性和女性员工的数量</strong></li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206174334518</figcaption></figure>\n<ol start=\"2\">\n<li><strong>先查询入职时间在 '2015-01-01' (包含) 以前的员工 , 并对结果根据职位分组 , 获取员工数量大于等于2的职位</strong></li>\n</ol>\n<p>1.先查入职时间在 '2015-01-01' (包含) 以前的员工 , 并对结果根据职位分组 , 获取员工数量</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<p>2.获取员工数量大于等于2的职位</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230206174747276</figcaption></figure>\n<h4> 排序查询</h4>\n<p>排序在日常开发中是非常常见的一个操作，有升序排序，也有降序排序。</p>\n<p>语法：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>\n<p>排序方式：</p>\n<ul>\n<li>\n<p>ASC ：升序（默认值）</p>\n</li>\n<li>\n<p>DESC：降序</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5> 案例</h5>\n<ol>\n<li>根据入职时间, 对员工进行升序排序</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"2\">\n<li>根据入职时间, 对员工进行降序排序</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"3\">\n<li>根据 入职时间 对公司的员工进行 升序排序 ， 入职时间相同 , 再按照 更新时间 进行降序排序</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<h4> 分页查询</h4>\n<p>语法</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h5> 案例</h5>\n<ol>\n<li>从起始索引0开始查询员工数据, 每页展示5条记录</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"2\">\n<li>查询 第1页 员工数据, 每页展示5条记录</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"3\">\n<li>查询 第2页 员工数据, 每页展示5条记录</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<ol start=\"4\">\n<li>查询 第3页 员工数据, 每页展示5条记录</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>\n<h3> 多表设计</h3>\n<p>关于单表的操作(单表的设计、单表的增删改查)我们就已经学习完了。接下来我们就要来学习多表的操作，首先来学习多表的设计。</p>\n<p>项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</p>\n<ul>\n<li>\n<p>一对多(多对一)</p>\n</li>\n<li>\n<p>多对多</p>\n</li>\n<li>\n<p>一对一</p>\n</li>\n</ul>\n<h5> 外键约束</h5>\n<p>语法</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 一对多</h4>\n<h5> 案例</h5>\n<img src=\"http://yun.fanliu.top/笔记/image-20230206202127411.png\" alt=\"image-20230206202127411\" style=\"zoom: 67%;\">\n\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n\n<p><strong>物理外键和逻辑外键</strong></p>\n<ul>\n<li>\n<p>物理外键</p>\n<ul>\n<li>概念：使用foreign key定义外键关联另外一张表。</li>\n<li>缺点：\n<ul>\n<li>影响增、删、改的效率（需要检查外键关系）。</li>\n<li>仅用于单节点数据库，不适用与分布式、集群场景。</li>\n<li>容易引发数据库的死锁问题，消耗性能。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>逻辑外键</p>\n<ul>\n<li>概念：在业务层逻辑中，解决外键关联。</li>\n<li>通过逻辑外键，就可以很方便的解决上述问题。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>**在现在的企业开发中，很少会使用物理外键，都是使用逻辑外键。 甚至在一些数据库开发规范中，会明确指出禁止使用物理外键 foreign key **</p>\n</blockquote>\n<h4> 一对一</h4>\n<p>一对一关系表在实际开发中应用起来比较简单，通常是用来做单表的拆分，也就是将一张大表拆分成两张小表，将大表中的一些基础字段放在一张表当中，将其他的字段放在另外一张表当中，以此来提高数据的操作效率。</p>\n<h5> 案例</h5>\n<blockquote>\n<p>一对一的应用场景： 用户表(基本信息+身份信息)</p>\n<figure><figcaption>image-20221207104508080</figcaption></figure>\n<ul>\n<li>基本信息：用户的ID、姓名、性别、手机号、学历</li>\n<li>身份信息：民族、生日、身份证号、身份证签发机关，身份证的有效期(开始时间、结束时间)</li>\n</ul>\n<p>如果在业务系统当中，对用户的基本信息查询频率特别的高，但是对于用户的身份信息查询频率很低，此时出于提高查询效率的考虑，我就可以将这张大表拆分成两张小表，第一张表存放的是用户的基本信息，而第二张表存放的就是用户的身份信息。他们两者之间一对一的关系，一个用户只能对应一个身份证，而一个身份证也只能关联一个用户。</p>\n</blockquote>\n<p>那么在数据库层面怎么去体现上述两者之间是一对一的关系呢？</p>\n<p>其实一对一我们可以看成一种特殊的一对多。一对多我们是怎么设计表关系的？是不是在多的一方添加外键。同样我们也可以通过外键来体现一对一之间的关系，我们只需要在任意一方来添加一个外键就可以了。</p>\n<figure><figcaption>image-20221207105632634</figcaption></figure>\n<blockquote>\n<p>一对一 ：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)</p>\n</blockquote>\n<p>建表语句</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>添加外键约束</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n<h4> 多对多</h4>\n<p>多对多的关系在开发中属于也比较常见的。比如：学生和老师的关系，一个学生可以有多个授课老师，一个授课老师也可以有多个学生。在比如：学生和课程的关系，一个学生可以选修多门课程，一个课程也可以供多个学生选修。</p>\n<h5> 案例</h5>\n<p>学生与课程的关系</p>\n<ul>\n<li>\n<p>关系：一个学生可以选修多门课程，一门课程也可以供多个学生选择</p>\n</li>\n<li>\n<p>实现关系：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p>\n</li>\n</ul>\n<p>SQL脚本：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>添加约束（建表完成后）</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>添加约束（建表完成前）</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2021-02-07T19:52:19.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "数据库",
        "mysql"
      ]
    },
    {
      "title": "mysql学习笔记_02",
      "url": "https://www.fanliu.top/db/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02.html",
      "id": "https://www.fanliu.top/db/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02.html",
      "summary": "1.1 概述 1.1.1 数据准备 SQL脚本： ~~~mysql #建议：创建新的数据库 create database db04; use db04; -- 部门表 create table tb_dept ( id int unsigned primary key auto_increment comment '主键ID', name varch...",
      "content_html": "<h1> mysql学习笔记_02</h1>\n<h1> 1. 多表查询</h1>\n<h2> 1.1 概述</h2>\n<h3> 1.1.1 数据准备</h3>\n<p>SQL脚本：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.1.2 介绍</h3>\n<p>多表查询：查询时从多张表中获取所需数据</p>\n<blockquote>\n<p>单表查询的SQL语句：select  字段列表  from  表名;</p>\n<p>那么要执行多表查询，只需要使用逗号分隔多张表即可，如： select   字段列表  from  表1, 表2;</p>\n</blockquote>\n<p>查询用户表和部门表中的数据：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20220901093654673</figcaption></figure>\n<p>此时,我们看到查询结果中包含了大量的结果集，总共85条记录，而这其实就是员工表所有的记录(17行)与部门表所有记录(5行)的所有组合情况，这种现象称之为笛卡尔积。</p>\n<p>笛卡尔积：笛卡尔乘积是指在数学中，两个集合(A集合和B集合)的所有组合情况。</p>\n<figure><figcaption>image-20221207155509696</figcaption></figure>\n<blockquote>\n<p>在多表查询时，需要消除无效的笛卡尔积，只保留表关联部分的数据</p>\n</blockquote>\n<figure><figcaption></figcaption></figure>\n<p>在SQL语句中，如何去除无效的笛卡尔积呢？只需要给多表查询加上连接查询的条件即可。</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221207164518904</figcaption></figure>\n<blockquote>\n<p>由于id为17的员工，没有dept_id字段值，所以在多表查询时，根据连接查询的条件并没有查询到。</p>\n</blockquote>\n<h3> 1.1.3 分类</h3>\n<p>多表查询可以分为：</p>\n<ol>\n<li>\n<p>连接查询</p>\n<ul>\n<li>内连接：相当于查询A、B交集部分数据</li>\n</ul>\n<figure><figcaption>image-20221207165446062</figcaption></figure>\n</li>\n<li>\n<p>外连接</p>\n<ul>\n<li>\n<p>左外连接：查询左表所有数据(包括两张表交集部分数据)</p>\n</li>\n<li>\n<p>右外连接：查询右表所有数据(包括两张表交集部分数据)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>子查询</p>\n</li>\n</ol>\n<h2> 1.2 内连接</h2>\n<p>内连接查询：查询两表或多表中交集部分数据。</p>\n<p>内连接从语法上可以分为：</p>\n<ul>\n<li>\n<p>隐式内连接</p>\n</li>\n<li>\n<p>显式内连接</p>\n</li>\n</ul>\n<p>隐式内连接语法：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>显式内连接语法：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：查询员工的姓名及所属的部门名称</p>\n<ul>\n<li>隐式内连接实现</li>\n</ul>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>显式内连接实现</li>\n</ul>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n<p>多表查询时给表起别名：</p>\n<ul>\n<li>\n<p>tableA  as  别名1  ,  tableB  as  别名2 ;</p>\n</li>\n<li>\n<p>tableA  别名1  ,  tableB  别名2 ;</p>\n</li>\n</ul>\n<figure><figcaption>image-20221207174234522</figcaption></figure>\n<p>使用了别名的多表查询：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意事项:</p>\n<p>一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。</p>\n</blockquote>\n<h2> 1.3外连接</h2>\n<p>外连接分为两种：左外连接 和 右外连接。</p>\n<p>左外连接语法结构：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>左外连接相当于查询表1(左表)的所有数据，当然也包含表1和表2交集部分的数据。</p>\n</blockquote>\n<p>右外连接语法结构：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>右外连接相当于查询表2(右表)的所有数据，当然也包含表1和表2交集部分的数据。</p>\n</blockquote>\n<p>案例：查询员工表中所有员工的姓名, 和对应的部门名称</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n<p>案例：查询部门表中所有部门的名称, 和对应的员工名称</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230207203055254</figcaption></figure>\n<blockquote>\n<p>注意事项：</p>\n<p>左外连接和右外连接是可以相互替换的，只需要调整连接查询时SQL语句中表的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。</p>\n</blockquote>\n<h2> 1.4 子查询</h2>\n<h3> 1.4.1 介绍</h3>\n<p>SQL语句中嵌套select语句，称为嵌套查询，又称子查询。</p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>子查询外部的语句可以是insert / update / delete / select 的任何一个，最常见的是 select。</p>\n</blockquote>\n<p>根据子查询结果的不同分为：</p>\n<ol>\n<li>\n<p>标量子查询（子查询结果为单个值[一行一列]）</p>\n</li>\n<li>\n<p>列子查询（子查询结果为一列，但可以是多行）</p>\n</li>\n<li>\n<p>行子查询（子查询结果为一行，但可以是多列）</p>\n</li>\n<li>\n<p>表子查询（子查询结果为多行多列[相当于子查询结果是一张表]）</p>\n</li>\n</ol>\n<p>子查询可以书写的位置：</p>\n<ol>\n<li>where之后</li>\n<li>from之后</li>\n<li>select之后</li>\n</ol>\n<h3> 1.4.2 标量子查询</h3>\n<p>子查询返回的结果是单个值(数字、字符串、日期等)，最简单的形式，这种子查询称为标量子查询。</p>\n<p>常用的操作符： =   &lt;&gt;   &gt;    &gt;=    &lt;   &lt;=</p>\n<p>案例1：查询\"教研部\"的所有员工信息</p>\n<blockquote>\n<p>可以将需求分解为两步：</p>\n<ol>\n<li>查询 \"教研部\" 部门ID</li>\n<li>根据 \"教研部\" 部门ID，查询员工信息</li>\n</ol>\n</blockquote>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230207203553658</figcaption></figure>\n<p>案例2：查询在 \"方东白\" 入职之后的员工信息</p>\n<blockquote>\n<p>可以将需求分解为两步：</p>\n<ol>\n<li>查询 方东白 的入职日期</li>\n<li>查询 指定入职日期之后入职的员工信息</li>\n</ol>\n</blockquote>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221207203000445</figcaption></figure>\n<h3> 1.4.3 列子查询</h3>\n<p>子查询返回的结果是一列(可以是多行)，这种子查询称为列子查询。</p>\n<p>常用的操作符：</p>\n<table>\n<thead>\n<tr>\n<th><strong>操作符</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IN</td>\n<td>在指定的集合范围之内，多选一</td>\n</tr>\n<tr>\n<td>NOT IN</td>\n<td>不在指定的集合范围之内</td>\n</tr>\n</tbody>\n</table>\n<p>案例：查询\"教研部\"和\"咨询部\"的所有员工信息</p>\n<blockquote>\n<p>分解为以下两步：</p>\n<ol>\n<li>查询 \"销售部\" 和 \"市场部\" 的部门ID</li>\n<li>根据部门ID, 查询员工信息</li>\n</ol>\n</blockquote>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230207205344503</figcaption></figure>\n<h3> 1.4.4 行子查询</h3>\n<p>子查询返回的结果是一行(可以是多列)，这种子查询称为行子查询。</p>\n<p>常用的操作符：= 、&lt;&gt; 、IN 、NOT IN</p>\n<p>案例：查询与\"韦一笑\"的入职日期及职位都相同的员工信息</p>\n<blockquote>\n<p>可以拆解为两步进行：</p>\n<ol>\n<li>查询 \"韦一笑\" 的入职日期 及 职位</li>\n<li>查询与\"韦一笑\"的入职日期及职位相同的员工信息</li>\n</ol>\n</blockquote>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230207205901253</figcaption></figure>\n<h3> 1.4.5 表子查询</h3>\n<p>子查询返回的结果是多行多列，常作为临时表，这种子查询称为表子查询。</p>\n<p>案例：查询入职日期是 \"2006-01-01\" 之后的员工信息 , 及其部门信息</p>\n<blockquote>\n<p>分解为两步执行：</p>\n<ol>\n<li>查询入职日期是 \"2006-01-01\" 之后的员工信息</li>\n<li>基于查询到的员工信息，在查询对应的部门信息</li>\n</ol>\n</blockquote>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 1.5 案例</h2>\n<p>基于之前设计的多表案例的表结构，我们来完成今天的多表查询案例需求。</p>\n<p><strong>准备环境</strong></p>\n<p>将资料中准备好的多表查询的数据准备的SQL脚本导入数据库中。</p>\n<figure><figcaption>image-20221208143318921</figcaption></figure>\n<ul>\n<li>分类表：category</li>\n<li>菜品表：dish</li>\n<li>套餐表：setmeal</li>\n<li>套餐菜品关系表：setmeal_dish</li>\n</ul>\n<figure><figcaption>image-20221208143312292</figcaption></figure>\n<p><strong>需求实现</strong></p>\n<ol>\n<li>查询价格低于 10元 的菜品的名称 、价格 及其 菜品的分类名称</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230208103358130</figcaption></figure>\n<ol start=\"2\">\n<li>查询所有价格在 10元(含)到50元(含)之间 且 状态为'起售'的菜品名称、价格 及其 菜品的分类名称 (即使菜品没有分类 , 也需要将菜品查询出来).</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230208105026381</figcaption></figure>\n<ol start=\"3\">\n<li>查询每个分类下最贵的菜品, 展示出分类的名称、最贵的菜品的价格 .</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230208110121714</figcaption></figure>\n<ol start=\"4\">\n<li>查询各个分类下 状态为 '起售' , 并且 该分类下菜品总数量大于等于3 的 分类名称</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230208110736393</figcaption></figure>\n<ol start=\"5\">\n<li>查询出 \"商务套餐A\" 中包含了哪些菜品 （展示出套餐名称、价格, 包含的菜品名称、价格、份数）</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"6\">\n<li>查询出低于菜品平均价格的菜品信息 (展示出菜品名称、菜品价格).</li>\n</ol>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20230208112936884</figcaption></figure>\n<h1> 2. 事务</h1>\n<p>场景：学工部整个部门解散了，该部门及部门下的员工都需要删除了。</p>\n<ul>\n<li>\n<p>操作：</p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>问题：如果删除部门成功了，而删除该部门的员工时失败了，此时就造成了数据的不一致。</p>\n</li>\n</ul>\n<p>​\t要解决上述的问题，就需要通过数据库中的事务来解决。</p>\n<h2> 2.2 操作</h2>\n<p>MYSQL中有两种方式进行事务的操作：</p>\n<ol>\n<li>自动提交事务：即执行一条sql语句提交一次事务。（默认MySQL的事务是自动提交）</li>\n<li>手动提交事务：先开启，再提交</li>\n</ol>\n<p>事务操作有关的SQL语句：</p>\n<table>\n<thead>\n<tr>\n<th>SQL语句</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start transaction;  /  begin ;</td>\n<td>开启手动控制事务</td>\n</tr>\n<tr>\n<td>commit;</td>\n<td>提交事务</td>\n</tr>\n<tr>\n<td>rollback;</td>\n<td>回滚事务</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>手动提交事务使用步骤：</p>\n<ul>\n<li>第1种情况：开启事务  =&gt;  执行SQL语句   =&gt;  成功  =&gt;  提交事务</li>\n<li>第2种情况：开启事务  =&gt;  执行SQL语句   =&gt;  失败  =&gt;  回滚事务</li>\n</ul>\n</blockquote>\n<p>使用事务控制删除部门和删除该部门下的员工的操作：</p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>上述的这组SQL语句，如果如果执行成功，则提交事务</li>\n</ul>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>上述的这组SQL语句，如果如果执行失败，则回滚事务</li>\n</ul>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 2.3 四大特性</h2>\n<p>面试题：事务有哪些特性？</p>\n<ul>\n<li>原子性（Atomicity）：事务是不可分割的最小单元，要么全部成功，要么全部失败。</li>\n<li>一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。</li>\n<li>隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li>\n<li>持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li>\n</ul>\n<blockquote>\n<p>事务的四大特性简称为：ACID</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>原子性（Atomicity）</strong> ：原子性是指事务包装的一组sql是一个不可分割的工作单元，事务中的操作要么全部成功，要么全部失败。</p>\n</li>\n<li>\n<p><strong>一致性（Consistency）</strong>：一个事务完成之后数据都必须处于一致性状态。</p>\n</li>\n</ul>\n<p>​\t\t如果事务成功的完成，那么数据库的所有变化将生效。</p>\n<p>​\t\t如果事务执行出现错误，那么数据库的所有变化将会被回滚(撤销)，返回到原始状态。</p>\n<ul>\n<li><strong>隔离性（Isolation）</strong>：多个用户并发的访问数据库时，一个用户的事务不能被其他用户的事务干扰，多个并发的事务之间要相互隔离。</li>\n</ul>\n<p>​\t\t一个事务的成功或者失败对于其他的事务是没有影响。</p>\n<ul>\n<li><strong>持久性（Durability）</strong>：一个事务一旦被提交或回滚，它对数据库的改变将是永久性的，哪怕数据库发生异常，重启之后数据亦然存在。</li>\n</ul>\n<h1> 3. 索引</h1>\n<h2> 3.1 介绍</h2>\n<p>索引(index)：是帮助数据库高效获取数据的数据结构 。</p>\n<ul>\n<li>简单来讲，就是使用索引可以提高查询的效率。</li>\n</ul>\n<p>测试没有使用索引的查询：</p>\n<figure><figcaption>image-20221209115617429</figcaption></figure>\n<p>添加索引后查询：</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221209120107543</figcaption></figure>\n<p>优点：</p>\n<ol>\n<li>提高数据查询的效率，降低数据库的IO成本。</li>\n<li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU消耗。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>索引会占用存储空间。</li>\n<li>索引大大提高了查询效率，同时却也降低了insert、update、delete的效率。</li>\n</ol>\n<h2> 3.2 结构</h2>\n<p>MySQL数据库支持的索引结构有很多，如：Hash索引、B+Tree索引、Full-Text索引等。</p>\n<p>我们平常所说的索引，如果没有特别指明，都是指默认的 B+Tree 结构组织的索引。</p>\n<p>在没有了解B+Tree结构前，我们先回顾下之前所学习的树结构：</p>\n<blockquote>\n<p>二叉查找树：左边的子节点比父节点小，右边的子节点比父节点大</p>\n</blockquote>\n<figure><figcaption>image-20221208174135229</figcaption></figure>\n<blockquote>\n<p>当我们向二叉查找树保存数据时，是按照从大到小(或从小到大)的顺序保存的，此时就会形成一个单向链表，搜索性能会打折扣。</p>\n</blockquote>\n<figure><figcaption>image-20221208174859866</figcaption></figure>\n<blockquote>\n<p>可以选择平衡二叉树或者是红黑树来解决上述问题。（红黑树也是一棵平衡的二叉树）</p>\n</blockquote>\n<figure><figcaption>image-20221209100647867</figcaption></figure>\n<blockquote>\n<p>但是在Mysql数据库中并没有使用二叉搜索数或二叉平衡数或红黑树来作为索引的结构。</p>\n</blockquote>\n<p>思考：采用二叉搜索树或者是红黑树来作为索引的结构有什么问题？</p>\n<details>\n    <summary>答案</summary>\n    最大的问题就是在数据量大的情况下，树的层级比较深，会影响检索速度。因为不管是二叉搜索数还是红黑数，一个节点下面只能有两个子节点。此时在数据量大的情况下，就会造成数的高度比较高，树的高度一旦高了，检索速度就会降低。\n</details>\n<blockquote>\n<p>说明：如果数据结构是红黑树，那么查询1000万条数据，根据计算树的高度大概是23左右，这样确实比之前的方式快了很多，但是如果高并发访问，那么一个用户有可能需要23次磁盘IO，那么100万用户，那么会造成效率极其低下。所以为了减少红黑树的高度，那么就得增加树的宽度，就是不再像红黑树一样每个节点只能保存一个数据，可以引入另外一种数据结构，一个节点可以保存多个数据，这样宽度就会增加从而降低树的高度。这种数据结构例如BTree就满足。</p>\n</blockquote>\n<p>下面我们来看看B+Tree(多路平衡搜索树)结构中如何避免这个问题：</p>\n<figure><figcaption>image-20221208181315728</figcaption></figure>\n<p>B+Tree结构：</p>\n<ul>\n<li>每一个节点，可以存储多个key（有n个key，就有n个指针）</li>\n<li>节点分为：叶子节点、非叶子节点\n<ul>\n<li>叶子节点，就是最后一层子节点，所有的数据都存储在叶子节点上</li>\n<li>非叶子节点，不是树结构最下面的节点，用于索引数据，存储的的是：key+指针</li>\n</ul>\n</li>\n<li>为了提高范围查询效率，叶子节点形成了一个双向链表，便于数据的排序及区间范围查询</li>\n</ul>\n<blockquote>\n<p><strong>拓展：</strong></p>\n<p>非叶子节点都是由key+指针域组成的，一个key占8字节，一个指针占6字节，而一个节点总共容量是16KB，那么可以计算出一个节点可以存储的元素个数：16*1024字节 / (8+6)=1170个元素。</p>\n<ul>\n<li>查看mysql索引节点大小：show global status like 'innodb_page_size';    -- 节点大小：16384</li>\n</ul>\n<p>当根节点中可以存储1170个元素，那么根据每个元素的地址值又会找到下面的子节点，每个子节点也会存储1170个元素，那么第二层即第二次IO的时候就会找到数据大概是：1170*1170=135W。也就是说B+Tree数据结构中只需要经历两次磁盘IO就可以找到135W条数据。</p>\n<p>对于第二层每个元素有指针，那么会找到第三层，第三层由key+数据组成，假设key+数据总大小是1KB，而每个节点一共能存储16KB，所以一个第三层一个节点大概可以存储16个元素(即16条记录)。那么结合第二层每个元素通过指针域找到第三层的节点，第二层一共是135W个元素，那么第三层总元素大小就是：135W*16结果就是2000W+的元素个数。</p>\n<p>结合上述分析B+Tree有如下优点：</p>\n<ul>\n<li>千万条数据，B+Tree可以控制在小于等于3的高度</li>\n<li>所有的数据都存储在叶子节点上，并且底层已经实现了按照索引进行排序，还可以支持范围查询，叶子节点是一个双向链表，支持从小到大或者从大到小查找</li>\n</ul>\n</blockquote>\n<h2> 3.3 语法</h2>\n<p><strong>创建索引</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：为tb_emp表的name字段建立一个索引</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221209105119159</figcaption></figure>\n<blockquote>\n<p>在创建表时，如果添加了主键和唯一约束，就会默认创建：主键索引、唯一约束</p>\n<figure><figcaption>image-20221209105846211</figcaption></figure>\n</blockquote>\n<p><strong>查看索引</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：查询 tb_emp 表的索引信息</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221209110317092</figcaption></figure>\n<p><strong>删除索引</strong></p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>案例：删除 tb_emp 表中name字段的索引</p>\n<div class=\"language-mysql line-numbers-mode\" data-ext=\"mysql\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意事项：</p>\n<ul>\n<li>\n<p>主键字段，在建表时，会自动创建主键索引</p>\n</li>\n<li>\n<p>添加唯一约束时，数据库实际上会添加唯一索引</p>\n</li>\n</ul>\n</blockquote>\n",
      "date_published": "2021-02-08T11:45:28.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "数据库",
        "mysql"
      ]
    },
    {
      "title": "RabbitMQ_01 入门 - 开篇",
      "url": "https://www.fanliu.top/mq/rabbitMQ/RabbitMQ_01.html",
      "id": "https://www.fanliu.top/mq/rabbitMQ/RabbitMQ_01.html",
      "summary": "1. 什么是消息队列 消息指的是两个应用间传递的数据。数据的类型有很多种形式，可能只包含文本字符串，也可能包含嵌入对象。 “消息队列(Message Queue)”是在消息的传输过程中保存消息的容器。在消息队列中，通常有生产者和消费者两个角色。生产者只负责发送数据到消息队列，谁从消息队列中取出数据处理，他不管。消费者只负责从消息队列中取出数据处理，他不...",
      "content_html": "<h1> RabbitMQ_01 入门 - 开篇</h1>\n<h2> 1. 什么是消息队列</h2>\n<p><strong>消息</strong>指的是两个应用间传递的数据。数据的类型有很多种形式，可能只包含文本字符串，也可能包含嵌入对象。</p>\n<p><strong>“消息队列(Message Queue)”是在消息的传输过程中保存消息的容器</strong>。在消息队列中，通常有生产者和消费者两个角色。生产者只负责发送数据到消息队列，谁从消息队列中取出数据处理，他不管。消费者只负责从消息队列中取出数据处理，他不管这是谁发送的数据。</p>\n<figure><figcaption>image-20220922195726878</figcaption></figure>\n<h2> 2. 为什么使用消息队列</h2>\n<p>主要有三个作用：</p>\n<ul>\n<li><strong>解耦</strong>。如图所示。假设有系统B、C、D都需要系统A的数据，于是系统A调用三个方法发送数据到B、C、D。这时，系统D不需要了，那就需要在系统A把相关的代码删掉。假设这时有个新的系统E需要数据，这时系统A又要增加调用系统E的代码。为了降低这种强耦合，就可以使用MQ，<strong>系统A只需要把数据发送到MQ，其他系统如果需要数据，则从MQ中获取即可</strong>。</li>\n</ul>\n<figure><figcaption>image-20220922195842827</figcaption></figure>\n<ul>\n<li>异步。如图所示。一个客户端请求发送进来，系统A会调用系统B、C、D三个系统，同步请求的话，响应时间就是系统A、B、C、D的总和，也就是800ms。<strong>如果使用MQ，系统A发送数据到MQ，然后就可以返回响应给客户端，不需要再等待系统B、C、D的响应，可以大大地提高性能</strong>。对于一些非必要的业务，比如发送短信，发送邮件等等，就可以采用MQ。</li>\n</ul>\n<figure><figcaption>image-20220922200103149</figcaption></figure>\n<ul>\n<li>削峰。如图所示。这其实是MQ一个很重要的应用。假设系统A在某一段时间请求数暴增，有5000个请求发送过来，系统A这时就会发送5000条SQL进入MySQL进行执行，MySQL对于如此庞大的请求当然处理不过来，MySQL就会崩溃，导致系统瘫痪。<strong>如果使用MQ，系统A不再是直接发送SQL到数据库，而是把数据发送到MQ，MQ短时间积压数据是可以接受的，然后由消费者每次拉取2000条进行处理，防止在请求峰值时期大量的请求直接发送到MySQL导致系统崩溃</strong>。</li>\n</ul>\n<figure><figcaption>image-20220922200337872</figcaption></figure>\n<h2> 3. RabbitMQ 简介</h2>\n<p>RabbitMQ是一款使用Erlang语言开发的，实现AMQP(Advanced Message Queuing Protocol，高级消息队列协议)的开源消息中间件，最初起源于金融系统，用于在分布式系统中存储转发消息。</p>\n<h3> 3.1 特点</h3>\n<ul>\n<li><strong>可靠性</strong>：支持持久化，传输确认，发布确认等保证了MQ的可靠性。</li>\n<li><strong>灵活的分发消息策略(路由)</strong>：这应该是RabbitMQ的一大特点。在消息进入MQ前由Exchange(交换机)进行路由消息。分发消息策略有：简单模式、工作队列模式、发布订阅模式、路由模式、通配符模式。</li>\n<li><strong>支持集群</strong>：多台RabbitMQ服务器可以组成一个集群，形成一个逻辑Broker。</li>\n<li><strong>多种协议</strong>：RabbitMQ支持多种消息队列协议，比如 STOMP、MQTT 等等。</li>\n<li><strong>支持多种语言客户端</strong>：RabbitMQ几乎支持所有常用编程语言，包括 Java、.NET、Ruby 等等。</li>\n<li><strong>可视化管理界面</strong>：RabbitMQ提供了一个易用的用户界面，使得用户可以监控和管理消息 Broker。</li>\n<li><strong>插件机制</strong>：RabbitMQ提供了许多插件，可以通过插件进行扩展，也可以编写自己的插件。</li>\n</ul>\n<h2> 4. RabbitMQ中的组成部分</h2>\n<ul>\n<li>Broker：消息队列服务进程。此进程包括两个部分：Exchange和Queue。</li>\n<li>Exchange：消息队列交换机。<strong>按一定的规则将消息路由转发到某个队列</strong>。</li>\n<li>Queue：消息队列，存储消息的队列。</li>\n<li>Producer：消息生产者。生产方客户端将消息同交换机路由发送到队列中。</li>\n<li>Consumer：消息消费者。消费队列中存储的消息。</li>\n</ul>\n<p>这些组成部分是如何协同工作的呢，大概的流程如下，请看下图：</p>\n<figure><figcaption>image-20220922203245154</figcaption></figure>\n<ul>\n<li>消息生产者连接到RabbitMQ Broker，创建connection，开启channel。</li>\n<li>生产者声明交换机类型、名称、是否持久化等。</li>\n<li>生产者发送消息，并指定消息是否持久化等属性和routing key。</li>\n<li>exchange收到消息之后，<strong>根据routing key路由到跟当前交换机绑定的相匹配的队列</strong>里面。</li>\n<li>消费者监听接收到消息之后开始业务处理。</li>\n</ul>\n<h2> 5. Exchange的四种类型以及用法</h2>\n<p>从上面的工作流程可以看出，实际上有个关键的组件Exchange，因为<strong>消息发送到RabbitMQ后首先要经过Exchange路由才能找到对应的Queue</strong>。</p>\n<p>实际上Exchange类型有四种，根据不同的类型工作的方式也有所不同。在HelloWord例子中，我们就使用了比较简单的<strong>Direct Exchange</strong>，翻译就是直连交换机。其余三种分别是：<strong>Fanout exchange、Topic exchange、Headers exchange</strong>。</p>\n<h3> 5.1 Direct Exchange(直连)</h3>\n<p>见文知意，直连交换机意思是此交换机需要绑定一个队列，要求<strong>该消息与一个特定的路由键完全匹配</strong>。简单点说就是一对一的，点对点的发送。</p>\n<figure><figcaption>image-20220922203746317</figcaption></figure>\n<h3> 5.2 Fanout exchange(发布订阅)</h3>\n<p>这种类型的交换机需要将队列绑定到交换机上。<strong>一个发送到交换机的消息都会被转发到与该交换机绑定的所有队列上</strong>。很像子网广播，每台子网内的主机都获得了一份复制的消息。简单点说就是发布订阅。</p>\n<figure><figcaption>image-20220922204506785</figcaption></figure>\n<h3> 5.3 Topic Exchange(通配符)</h3>\n<p>直接翻译的话叫做主题交换机，如果从用法上面翻译可能叫通配符交换机会更加贴切。这种交换机是使用通配符去匹配，路由到对应的队列。通配符有两种：\"*\" 、 \"#\"。需要注意的是通配符前面必须要加上\".\"符号。</p>\n<p><code>*</code> 符号：有且只匹配一个词。比如 <code>a.*</code>可以匹配到\"a.b\"、\"a.c\"，但是匹配不了\"a.b.c\"。</p>\n<p><code>#</code> 符号：匹配一个或多个词。比如\"rabbit.#\"既可以匹配到\"rabbit.a.b\"、\"rabbit.a\"，也可以匹配到\"rabbit.a.b.c\"。</p>\n<figure><figcaption>image-20220922204704979</figcaption></figure>\n<p>比较常用的就是以上三种：直连(DirectExchange)，发布订阅(FanoutExchange)，通配符(TopicExchange)。熟练运用这三种交换机类型，基本上可以解决大部分的业务场景。</p>\n<p>实际上稍微思考一下，可以发现通配符(TopicExchange)这种模式其实是可以达到直连(DirectExchange)和发布订阅(FanoutExchange)这两种的效果的。</p>\n<p>FanoutExchange不需要绑定routingKey，所以性能相对TopicExchange会好一点。</p>\n<h3> 5.4 Headers Exchange(请求头匹配，不推荐)</h3>\n<p>这种交换机用的相对没这么多。<strong>它跟上面三种有点区别，它的路由不是用routingKey进行路由匹配，而是在匹配请求头中所带的键值进行路由</strong>。如图所示：</p>\n<figure><figcaption>image-20220922204955736</figcaption></figure>\n<p>创建队列需要设置绑定的头部信息，有两种模式：<strong>全部匹配和部分匹配</strong>。如上图所示，交换机会根据生产者发送过来的头部信息携带的键值去匹配队列绑定的键值，路由到对应的队列。</p>\n<h2> 6. 交换器无法根据自身类型和路由键找到符合条件队列时，有哪些处理？</h2>\n<p>mandatory ：true 返回消息给生产者。</p>\n<p>mandatory: false 直接丢弃。</p>\n<h2> 参考文章</h2>\n<p><a href=\"https://developer.aliyun.com/article/769883\" target=\"_blank\" rel=\"noopener noreferrer\">超详细的RabbitMQ入门，看这篇就够了！</a></p>\n<p><a href=\"https://medium.com/@zamhuang/rabbitmq-%E4%BA%94%E5%88%86%E9%90%98%E8%BC%95%E9%AC%86%E4%BA%86%E8%A7%A3-rabbitmq-%E9%81%8B%E4%BD%9C-fcaecbaa69d4\" target=\"_blank\" rel=\"noopener noreferrer\">【RabbitMQ】五分鐘輕鬆了解 RabbitMQ 運作</a></p>\n<p><a href=\"https://www.cnblogs.com/vipstone/p/9275256.html\" target=\"_blank\" rel=\"noopener noreferrer\">RabbitMQ系列（二）深入了解RabbitMQ工作原理及简单使用</a></p>\n",
      "date_published": "2023-12-04T12:00:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "RabbitMQ"
      ]
    },
    {
      "title": "RabbitMQ_02 进阶 - 过期时间TTL",
      "url": "https://www.fanliu.top/mq/rabbitMQ/RabbitMQ_02.html",
      "id": "https://www.fanliu.top/mq/rabbitMQ/RabbitMQ_02.html",
      "summary": "Time to Live 简称 TTL，即过期时间。RabbitMQ 可以对 消息 和 队列 设置 TTL。 1. 设置消息的 TTL 通过队列设置：队列中的消息都有相同的过期时间; 对消息本身设置：每条消息的 TTL 可以不同; 如果两种一起设置，则以最小的 TTL 生效。 消息在队列中生存时间一旦超过 TTL，就会变成「死信（Dead Messag...",
      "content_html": "<h1> RabbitMQ进阶 - 过期时间TTL</h1>\n<p>Time to Live 简称 TTL，即过期时间。RabbitMQ 可以对 <strong>消息</strong> 和 <strong>队列</strong> 设置 TTL。</p>\n<h2> 1. 设置消息的 TTL</h2>\n<ul>\n<li>通过队列设置：队列中的消息都有相同的过期时间</li>\n<li>对消息本身设置：每条消息的 TTL 可以不同</li>\n</ul>\n<p>如果两种一起设置，则以最小的 TTL 生效。</p>\n<p>消息在队列中生存时间一旦超过 TTL，就会变成「死信（Dead Message）」，消费者将无法收到该消息。（具体细节后续章节讲解）</p>\n<h3> 1.1 在队列上设置</h3>\n<p>定义队列时，通过参数 <code>x-message-ttl</code> 设置，单位是 <strong>毫秒</strong></p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>TTL 值得几种情况：</p>\n<ul>\n<li>值为 0 ：表示，除非此时可以直接将消息投递到消费者，否则该消息被立即丢弃</li>\n<li>大于 0：将在该时间内过期，</li>\n</ul>\n<h3> 1.2 在消息设置</h3>\n<p>通过 BasicProperties 来设置 expiration 属性：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此种方式当超过 TTL 时，并不会立即从队列中抹去，而是在投递消费者时判定的。而在队列上一旦过期，则立即从队列中抹去。</p>\n<p>这是因为内部实现的原因导致的：</p>\n<ul>\n<li>队列中已过期的消息肯定在队列头部，只要定期从队头开始扫描是否有过期的消息即可</li>\n<li>在消息中设置的过期，需要扫描整个队列。</li>\n</ul>\n<blockquote>\n<p>因为第一种方法里，队列中已过期的消息肯定在队列头部，RabbitMQ只要定期从队头开始扫描是否有过期消息即可，而第二种方法里，每条消息的过期时间不同，如果要删除所有过期消息，势必要扫描整个队列，所以不如等到此消息即将被消费时再判定是否过期，如果过期，再进行删除。</p>\n</blockquote>\n<h2> 2. 设置队列的 TTL</h2>\n<blockquote>\n<p>注意这是队列TTL，上面两个都是消息TTL,只是1.1 的是在队列中设置消息ttl</p>\n</blockquote>\n<p>定义队列时间，通过参数 <code>x-expires</code> 参数，单位为毫秒</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>队列的 TTL 其实就是在声明：当队列空闲多久时，被自动删除。</p>\n<p><strong>空闲多久指的是</strong>：队列上没有任何消费者、也没有被重新声明、并且在过期时间内也未调用过 Basic.Get 命令</p>\n<p>适合使用的场景：可以应用在类似 RPC 方式的回复队列，在 RPC 中，许多队列会被创建出来，但是未被使用。</p>\n<h2> 参考文章</h2>\n<p><a href=\"https://zq99299.github.io/mq-tutorial/rabbitmq-ac/04/02.html\" target=\"_blank\" rel=\"noopener noreferrer\">过期时间 TTL</a></p>\n<p><a href=\"https://hiddenpps.blog.csdn.net/article/details/54916011\" target=\"_blank\" rel=\"noopener noreferrer\">RabbitMQ之TTL（Time-To-Live 过期时间）</a></p>\n<p><a href=\"https://juejin.cn/post/6844904002996404231\" target=\"_blank\" rel=\"noopener noreferrer\">RabbitMQ高级特性-TTL队列/消息</a></p>\n",
      "date_published": "2023-12-04T12:01:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "RabbitMQ"
      ]
    },
    {
      "title": "我的世界MCSM面板搭建",
      "url": "https://www.fanliu.top/other/game/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CMCSM%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA.html",
      "id": "https://www.fanliu.top/other/game/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CMCSM%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA.html",
      "summary": "Linux 如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了） Linux 系统快速安装（适用于 Ubuntu/Centos/Debian/Arch） 安装成功后，使用 systemctl start mcsm-{(web, daemon)} 命令即可启动面板 wget -qO- https://gitee.com/mcsma...",
      "content_html": "<h1> 我的世界MCSM面板搭建</h1>\n<h2> Linux</h2>\n<p>如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了）</p>\n<details class=\"custom-block details\"><summary>Linux 系统快速安装（适用于 Ubuntu/Centos/Debian/Arch）</summary> <p>安装成功后，使用 <code>systemctl start mcsm-{(web, daemon)}</code> 命令即可启动面板</p> <div class=\"language- line-numbers-mode\"> <div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div></div></details>\n<h2> 前期需要软件</h2>\n<ol>\n<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）[<a href=\"https://vlssu.lanzoui.com/i88wyvi\" target=\"_blank\" rel=\"noopener noreferrer\">点我下载(此软件为Xshell)]  (opens new window)</a></li>\n<li>支持Sftp的FTP软件（本教程使用 FileZilla）[<a href=\"https://www.lanzoui.com/i88wyqd\" target=\"_blank\" rel=\"noopener noreferrer\">点我下载]  (opens new window)</a></li>\n<li>服务端（本教程使用 Spigot）</li>\n<li>Centos或Ubuntu主机一台 （教程使用 centos7.9）</li>\n</ol>\n<h2> 注意事项</h2>\n<ol>\n<li>极力推荐Centos系统，Ubuntu系统未经博主测试</li>\n<li>未标注哪个系统指令则两者都可适用</li>\n<li>若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令</li>\n</ol>\n<h2> 环境部署</h2>\n<h3> 系统更新</h3>\n<ul>\n<li>首先你要确保你的系统是最新的</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 安装node.js</h3>\n<ul>\n<li><strong>若发现国内下载很慢可以参考这篇来使用国内镜像部署</strong>[**<a href=\"\">Linux系统如何安装node管理器]**</a></li>\n</ul>\n<ol>\n<li>安装Git</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>安装node.js管理器等组件</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）</p>\n<h3> 安装java</h3>\n<ul>\n<li>如果要看更精细的步骤可以看这个文章 [<a href=\"\">如何在Linux系统中安装Java8]</a></li>\n</ul>\n<h4> Centos</h4>\n<ul>\n<li>使用<code>yum</code>安装<code>java</code>。</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> Ubuntu</h4>\n<ol>\n<li>安装<code>java</code></li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><ol>\n<li>如果我们在服务器上安装了多个Java版本，我们可以使用<strong>update-alternatives</strong>系统更改默认版本</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：\n在出现提示时输入号码并按Enter键。</p>\n<ol>\n<li>查看<code>java</code>版本</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3> 安装MCSM</h3>\n<p>克隆<strong>MCSManager前端</strong>并安装依赖</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>克隆<strong>MCSManager后端</strong>并安装依赖</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">访问地址</th>\n<th style=\"text-align:center\">localhost:24444</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">访问密钥</td>\n<td style=\"text-align:center\">[你的密钥，是一串16进制数字]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">密钥作为守护进程唯一认证手段</td>\n</tr>\n</tbody>\n</table>\n<h2> 保持后台运行</h2>\n<p>我们使用<code>pm2</code>软件来让面板保持后台运行</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>PM2命令：</strong></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 端口开放</h2>\n<p>面板需要 23333（主功能） 端口\n24444（后端api）端口（可选）</p>\n<p>如果你使用阿里云，腾讯云或者服务商，<strong>请进入控制台到防火墙安全组策略，放行以上端口。</strong></p>\n<p>如果依然无法访问，请关闭系统自带防火墙：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 修改站点配置文件</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">配置文件</th>\n<th style=\"text-align:center\"><code>data/SystemConfig/config.json</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">用户数据文件</td>\n<td style=\"text-align:center\"><code>data/User/*.json</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">远程守护进程配置</td>\n<td style=\"text-align:center\"><code>data/RemoteServiceConfig/*.json</code></td>\n</tr>\n</tbody>\n</table>\n<h2> 默认账户</h2>\n<p>现在，访问 http://你的ip:23333/ 即可进入面板。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>请及时修改密码。</p>\n<h2> 服务端</h2>\n<ul>\n<li><a href=\"https://getbukkit.org/download/spigot\" target=\"_blank\" rel=\"noopener noreferrer\">Spigot  (opens new window)</a> [可以装插件]</li>\n<li><a href=\"https://papermc.io/downloads\" target=\"_blank\" rel=\"noopener noreferrer\">paper  (opens new window)</a> [可以装插件]</li>\n<li><a href=\"https://files.minecraftforge.net\" target=\"_blank\" rel=\"noopener noreferrer\">Forge  (opens new window)</a> [可以装MOD]</li>\n</ul>\n<h2> 服务器插件/MOD</h2>\n<ul>\n<li><a href=\"https://dev.bukkit.org\" target=\"_blank\" rel=\"noopener noreferrer\">bukkit  (opens new window)</a> [下载插件]</li>\n<li><a href=\"https://www.spigotmc.org\" target=\"_blank\" rel=\"noopener noreferrer\">spigotmc  (opens new window)</a> [下载插件]</li>\n<li><a href=\"https://www.curseforge.com/minecraft/modpacks\" target=\"_blank\" rel=\"noopener noreferrer\">curseforge  (opens new window)</a> [下载MOD]</li>\n</ul>\n",
      "date_published": "2021-02-07T16:06:18.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "游戏",
        "我的世界"
      ]
    },
    {
      "title": "git 分布式版本控制工具",
      "url": "https://www.fanliu.top/other/tool/git.html",
      "id": "https://www.fanliu.top/other/tool/git.html",
      "summary": "课程内容 Git概述; Git代码托管服务; Git常用命令; 在IDEA中使用Git; 1. 前言 1.1 什么是Git Git是一个分布式版本控制工具，主要用于管理开发过程中的源代码文件（Java类、xml文件、html页面等），在软件开发过程中被广泛使用。 在IDEA开发工具中可以集成Git（后面会讲解Git安装和集成过程）： image-202...",
      "content_html": "<h1> Git 分布式版本控制工具</h1>\n<h2> 课程内容</h2>\n<ul>\n<li>Git概述</li>\n<li>Git代码托管服务</li>\n<li>Git常用命令</li>\n<li>在IDEA中使用Git</li>\n</ul>\n<h2> 1. 前言</h2>\n<h3> 1.1 什么是Git</h3>\n<p>Git是一个<strong>分布式</strong>版本控制工具，主要用于管理开发过程中的源代码文件（Java类、xml文件、html页面等），在软件开发过程中被广泛使用。</p>\n<p>在IDEA开发工具中可以集成Git（后面会讲解Git安装和集成过程）：</p>\n<figure><figcaption>image-20210924171926037</figcaption></figure>\n<p>集成后在IDEA中可以看到Git相关图标：</p>\n<p>可以通过启动两个IDEA窗口模拟两个开发人员来展示Git的使用：</p>\n<figure><figcaption>image-20210926080623416</figcaption></figure>\n<p>其他的版本控制工具：</p>\n<ul>\n<li>SVN</li>\n<li>CVS</li>\n<li>VSS</li>\n</ul>\n<h3> 1.2 使用Git能做什么</h3>\n<ul>\n<li>代码回溯：Git在管理文件过程中会记录日志，方便回退到历史版本</li>\n<li>版本切换：Git存在分支的概念，一个项目可以有多个分支（版本），可以任意切换</li>\n<li>多人协作：Git支持多人协作，即一个团队共同开发一个项目，每个团队成员负责一部分代码，通过Git就可以管理和协调</li>\n<li>远程备份：Git通过仓库管理文件，在Git中存在远程仓库，如果本地文件丢失还可以从远程仓库获取</li>\n</ul>\n<h2> 2. Git概述</h2>\n<h3> 2.1 Git简介</h3>\n<p>Git 是一个分布式版本控制工具，通常用来对软件开发过程中的源代码文件进行管理。通过Git 仓库来存储和管理这些文件，Git 仓库分为两种：</p>\n<ul>\n<li>本地仓库：开发人员自己电脑上的 Git 仓库</li>\n<li>远程仓库：远程服务器上的 Git 仓库</li>\n</ul>\n\n<p>解释说明：</p>\n<blockquote>\n<p>commit：提交,将本地文件和版本信息保存到本地仓库</p>\n<p>push：推送,将本地仓库文件和版本信息上传到远程仓库</p>\n<p>pull：拉取,将远程仓库文件和版本信息下载到本地仓库</p>\n</blockquote>\n<h3> 2.2 Git下载与安装</h3>\n<p>下载地址： https://git-scm.com/download</p>\n<figure><figcaption>image-20210924174639182</figcaption></figure>\n<p>下载完成后得到安装文件：</p>\n<p>直接双击完成安装即可，安装完成后可以在任意目录下点击鼠标右键，如果能够看到如下菜单则说明安装成功：</p>\n<figure><figcaption>image-20210924174934683</figcaption></figure>\n<p>Git GUI Here：打开Git 图形界面</p>\n<figure><figcaption>image-20210924175209242</figcaption></figure>\n<p>Git Bash Here：打开Git 命令行</p>\n<figure><figcaption>image-20210924175314485</figcaption></figure>\n<p>Git安装目录结构如下：</p>\n<figure><figcaption>image-20210926094227522</figcaption></figure>\n<h2> 3. Git代码托管服务</h2>\n<h3> 3.1 常用的Git代码托管服务</h3>\n<p>Git中存在两种类型的仓库，即<strong>本地仓库</strong>和<strong>远程仓库</strong>。那么我们如何搭建Git<strong>远程仓库</strong>呢？</p>\n<p>我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>网址</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gitHub</td>\n<td>https://github.com/</td>\n<td>一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub</td>\n</tr>\n<tr>\n<td>码云</td>\n<td>https://gitee.com/</td>\n<td>国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快</td>\n</tr>\n<tr>\n<td>GitLab</td>\n<td>https://about.gitlab.com/</td>\n<td>一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务</td>\n</tr>\n<tr>\n<td>BitBucket</td>\n<td>https://bitbucket.org/</td>\n<td>一家源代码托管网站，采用Mercurial和Git作为分布式版本控制系统，同时提供商业计划和免费账户</td>\n</tr>\n</tbody>\n</table>\n<h3> 3.2 码云代码托管服务</h3>\n<p>码云网址：https://gitee.com/</p>\n<figure><figcaption>image-20210926082758518</figcaption></figure>\n<p>使用码云的操作流程如下：</p>\n<ol>\n<li>注册码云账号</li>\n<li>登录码云</li>\n<li>创建远程仓库</li>\n<li>邀请其他用户成为仓库成员</li>\n</ol>\n<h4> 3.2.1 注册码云账号</h4>\n<p>注册网址： https://gitee.com/signup</p>\n<figure><figcaption>image-20210926083229013</figcaption></figure>\n<h4> 3.2.2 登录码云</h4>\n<p>注册完成后可以使用刚刚注册的邮箱进行登录（地址： https://gitee.com/login ）</p>\n<figure><figcaption>image-20210926083328306</figcaption></figure>\n<h4> 3.2.3 创建远程仓库</h4>\n<p>登录成功后可以创建远程仓库，操作方式如下：</p>\n<figure><figcaption>image-20210926083510298</figcaption></figure>\n<p>页面跳转到新建仓库页面：</p>\n<figure><figcaption>image-20210926083629924</figcaption></figure>\n<p>解释说明：</p>\n<blockquote>\n<p>仓库名称：必填，每个仓库都需要有一个名称，同一个码云账号下的仓库名称不能重复</p>\n<p>路径：访问远程仓库时会使用到，一般无需手动指定，和仓库名称自动保持一致</p>\n<p>开源：所有人都可以查看此仓库</p>\n<p>私有：只有此仓库的成员可见，其他人不可见</p>\n</blockquote>\n<p>创建完成后可以查看仓库信息：</p>\n<figure><figcaption>image-20210926090131032</figcaption></figure>\n<p><strong>注意</strong>：每个Git远程仓库都会对应一个网络地址，点击【克隆/下载】按钮，在弹出窗口点击【复制】按钮即可复制网络地址，地址如下：</p>\n<p>https://gitee.com/ChuanZhiBoKe/myGitRepo.git</p>\n<h4> 3.2.4 邀请其他用户成为仓库成员</h4>\n<p>前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人（身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。</p>\n<p>点击管理按钮进入仓库管理页面，左侧菜单中可以看到【仓库成员管理】：</p>\n<figure><figcaption>image-20210926090608272</figcaption></figure>\n<p>点击【开发者】菜单，跳转到如下页面：</p>\n<figure><figcaption>image-20210926091027151</figcaption></figure>\n<p>点击【添加仓库成员】菜单下的【邀请用户】菜单，跳转到如下页面：</p>\n<figure><figcaption>image-20210926091204422</figcaption></figure>\n<p>可以看到邀请用户有多种方式：链接邀请、直接添加、通过仓库邀请成员</p>\n<p><strong>注意</strong>：被邀请用户必须为码云的注册用户，否则无法成为仓库成员</p>\n<h2> 4. Git常用命令</h2>\n<h3> 4.1 Git全局设置</h3>\n<p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息。在Git 命令行中执行下面命令：</p>\n<p><strong>设置用户信息</strong></p>\n<p>git config --global user.name \"itcast\"</p>\n<p>git config --global user.email \"hello@itcast.cn\"</p>\n<p><strong>查看配置信息</strong></p>\n<p>git config --list</p>\n<figure><figcaption>image-20210926092820321</figcaption></figure>\n<p>注意：上面设置的user.name和user.email并不是我们在注册码云账号时使用的用户名和邮箱，此处可以任意设置。</p>\n<h3> 4.2 获取Git仓库</h3>\n<p>要使用Git对我们的代码进行管理，首先需要获得Git仓库。</p>\n<p>获取Git仓库通常有两种方式：</p>\n<ul>\n<li>在本地初始化Git仓库（不常用）</li>\n<li>从远程仓库克隆（常用）</li>\n</ul>\n<h4> 4.2.1 在本地初始化Git仓库</h4>\n<p><strong>操作步骤如下</strong>：</p>\n<ol>\n<li>在任意目录下创建一个空目录（例如repo1）作为我们的本地Git仓库</li>\n<li>进入这个目录中，点击右键打开Git bash窗口</li>\n<li>执行命令<strong>git</strong> <strong>init</strong></li>\n</ol>\n<p>如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功</p>\n<figure><figcaption>image-20210926093721515</figcaption></figure>\n<h4> 4.2.2 从远程仓库克隆</h4>\n<p>可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地</p>\n<p><strong>命令格式</strong>：git clone 远程仓库地址</p>\n<figure><figcaption>image-20210926094404332</figcaption></figure>\n<h3> 4.3 工作区、暂存区、版本库</h3>\n<p>为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到。</p>\n<p><strong>版本库</strong>：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等</p>\n<p><strong>工作区</strong>：包含.git文件夹的目录就是工作区，也称为工作目录，主要用于存放开发的代码</p>\n<p><strong>暂存区</strong>：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方</p>\n<figure><figcaption>image-20210926094831386</figcaption></figure>\n<h3> 4.4 Git工作区中文件的状态</h3>\n<p>Git工作区中的文件存在两种状态：</p>\n<ul>\n<li>\n<p>untracked 未跟踪（未被纳入版本控制）</p>\n</li>\n<li>\n<p>tracked 已跟踪（被纳入版本控制）</p>\n<p>​     1）Unmodified 未修改状态</p>\n<p>​     2）Modified 已修改状态</p>\n<p>​     3）Staged 已暂存状态</p>\n</li>\n</ul>\n<p><strong>注意</strong>：文件的状态会随着我们执行Git的命令发生变化</p>\n<h3> 4.5 本地仓库操作</h3>\n<p>本地仓库常用命令如下：</p>\n<ul>\n<li>git status 查看文件状态</li>\n<li>git add 将文件的修改加入暂存区</li>\n<li>git reset 将暂存区的文件取消暂存或者是切换到指定版本</li>\n<li>git commit 将暂存区的文件修改提交到版本库</li>\n<li>git log  查看日志</li>\n</ul>\n<h4> 4.5.1 git status</h4>\n<p>git status 命令用于查看文件状态</p>\n<figure><figcaption>image-20210926095623297</figcaption></figure>\n<p>注意：由于工作区中文件状态的不同，执行 git status 命令后的输出也会不同</p>\n<h4> 4.5.2 git add</h4>\n<p>git add 命令的作用是将文件的修改加入暂存区，命令格式：git add fileName</p>\n<figure><figcaption>image-20210926100003056</figcaption></figure>\n<p>加入暂存区后再执行 git status 命令，可以发现文件的状态已经发生变化。</p>\n<h4> 4.5.3 git reset</h4>\n<p>git reset 命令的作用是将暂存区的文件<strong>取消暂存</strong>或者是<strong>切换到指定版本</strong></p>\n<p>取消暂存命令格式：git reset 文件名</p>\n<figure><figcaption>image-20210926101346514</figcaption></figure>\n<p>切换到指定版本命令格式：git reset --hard 版本号</p>\n<figure><figcaption>image-20210926101401721</figcaption></figure>\n<p>注意：每次Git提交都会产生新的版本号，通过版本号就可以回到历史版本</p>\n<h4> 4.5.4 git commit</h4>\n<p>git commit 命令的作用是将暂存区的文件修改提交到版本库，命令格式：git commit -m msg 文件名</p>\n<figure><figcaption>image-20210926101859601</figcaption></figure>\n<p>解释说明：</p>\n<blockquote>\n<p>-m：代表message，每次提交时需要设置，会记录到日志中</p>\n<p>可以使用通配符*一次提交多个文件</p>\n</blockquote>\n<h4> 4.5.5 git log</h4>\n<p>git log 命令的作用是查看提交日志</p>\n<figure><figcaption>image-20210926102305539</figcaption></figure>\n<p>通过git log命令查看日志，可以发现每次提交都会产生一个版本号，提交时设置的message、提交人、邮箱、提交时间等信息都会记录到日志中</p>\n<h3> 4.6 远程仓库操作</h3>\n<p>前面执行的命令操作都是针对的本地仓库，本节我们会学习关于远程仓库的一些操作，具体包括：</p>\n<ul>\n<li>git remote  查看远程仓库</li>\n<li>git remote add 添加远程仓库</li>\n<li>git clone 从远程仓库克隆</li>\n<li>git pull 从远程仓库拉取</li>\n<li>git push 推送到远程仓库</li>\n</ul>\n<h4> 4.6.1 git remote</h4>\n<p>如果要查看已经配置的远程仓库服务器，可以执行 git remote 命令，它会列出每一个远程服务器的简称。</p>\n<p>如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字。</p>\n<figure><figcaption>image-20210926103746721</figcaption></figure>\n<p>解释说明：</p>\n<blockquote>\n<p>可以通过-v参数查看远程仓库更加详细的信息</p>\n<p>本地仓库配置的远程仓库都需要一个简称，后续在和远程仓库交互时会使用到这个简称</p>\n</blockquote>\n<h4> 4.6.2 git remote add</h4>\n<p>添加远程仓库命令格式：git remote add 简称 远程仓库地址</p>\n<figure><figcaption>image-20210926104723901</figcaption></figure>\n<p>注意：一个本地仓库可以关联多个远程仓库</p>\n<h4> 4.6.3 git clone</h4>\n<p>如果你想获得一份已经存在了的 Git 远程仓库的拷贝，这时就要用到 git clone 命令。 Git 克隆的是该 Git 仓库服务器上的几乎所有数据（包括日志信息、历史记录等）。</p>\n<p>克隆仓库的命令格式： git clone 远程仓库地址</p>\n<figure><figcaption>image-20210926105017148</figcaption></figure>\n<h4> 4.6.4 git push</h4>\n<p>将本地仓库内容推送到远程仓库，命令格式：git push 远程仓库简称 分支名称</p>\n<figure><figcaption>image-20210926105413681</figcaption></figure>\n<p>在使用git push命令将本地文件推送至码云远程仓库时，如果是第一次操作，需要进行身份认证，认证通过才可以推送，如下：</p>\n<figure><figcaption>image-20210926105913504</figcaption></figure>\n<p>注意：上面的用户名和密码对应的就是我们在码云上注册的用户名和密码，认证通过后会将用户名和密码保存到windows系统中（如下图），后续再推送则无需重复输入用户名和密码。</p>\n<figure><figcaption>image-20210926110810630</figcaption></figure>\n<p>推送完成后可以到远程仓库中查看文件的变化。</p>\n<p>解释说明：</p>\n<blockquote>\n<p>一个仓库可以有多个分支，默认情况下在创建仓库后会自动创建一个master分支</p>\n<p>后面会讲解分支相关的操作</p>\n</blockquote>\n<h4> 4.6.5 git pull</h4>\n<p><strong>git</strong> <strong>pull</strong> 命令的作用是从远程仓库获取最新版本并合并到本地仓库</p>\n<p>命令格式：git pull 远程仓库简称 分支名称</p>\n<figure><figcaption>image-20210926111013002</figcaption></figure>\n<p><strong>注意</strong>：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ）</p>\n<p>解决此问题可以在git pull命令后加入参数--allow-unrelated-histories</p>\n<h3> 4.7 分支操作</h3>\n<p>分支是Git 使用过程中非常重要的概念。使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。</p>\n<p>本地仓库和远程仓库中都有分支，同一个仓库可以有多个分支，各个分支相互独立，互不干扰。</p>\n<p>通过git init 命令创建本地仓库时默认会创建一个master分支。</p>\n<p>本节我们会学习关于分支的相关命令，具体命令如下：</p>\n<ul>\n<li>git branch                                     查看分支</li>\n<li>git branch [name]                       创建分支</li>\n<li>git checkout [name]                    切换分支</li>\n<li>git push [shortName] [name]   推送至远程仓库分支</li>\n<li>git merge [name]                        合并分支</li>\n</ul>\n<h4> 4.7.1 查看分支</h4>\n<p>查看分支命令：git branch</p>\n<p>git branch \t\t列出所有本地分支</p>\n<p>git branch -r \t列出所有远程分支</p>\n<p>git branch -a \t列出所有本地分支和远程分支</p>\n<figure><figcaption>image-20210926124843275</figcaption></figure>\n<h4> 4.7.2 创建分支</h4>\n<p>创建分支命令格式：git branch 分支名称</p>\n<figure><figcaption>image-20210926125053711</figcaption></figure>\n<h4> 4.7.3 切换分支</h4>\n<p>一个仓库中可以有多个分支，切换分支命令格式：git checkout 分支名称</p>\n<figure><figcaption>image-20210926125259155</figcaption></figure>\n<p>注意：在命令行中会显示出当前所在分支，如上图所示。</p>\n<h4> 4.7.4 推送至远程仓库分支</h4>\n<p>推送至远程仓库分支命令格式：git push 远程仓库简称 分支命令</p>\n<figure><figcaption>image-20210926125628894</figcaption></figure>\n<p>推送完成后可以查看远程仓库：</p>\n<figure><figcaption>image-20210926125810878</figcaption></figure>\n<h4> 4.7.5 合并分支</h4>\n<p>合并分支就是将两个分支的文件进行合并处理，命令格式：git merge 分支命令</p>\n<figure><figcaption>image-20210926130213015</figcaption></figure>\n<p>注意：分支合并时需注意合并的方向，如上图所示，在Master分支执行操作，结果就是将b3分支合并到Master分支。</p>\n<h3> 4.8 标签操作</h3>\n<p>Git 中的标签，指的是某个分支某个特定时间点的状态。通过标签，可以很方便的切换到标记时的状态。</p>\n<p>比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 、v1.2等）。下面是mybatis-plus的标签：</p>\n<figure><figcaption>image-20210926130452557</figcaption></figure>\n<p>在本节中，我们将学习如下和标签相关的命令：</p>\n<ul>\n<li>git tag                                                查看标签</li>\n<li>git tag [name]                                  创建标签</li>\n<li>git push [shortName] [name]       将标签推送至远程仓库</li>\n<li>git checkout -b [branch] [name]   检出标签</li>\n</ul>\n<h4> 4.8.1 查看标签</h4>\n<p>查看标签命令：git tag</p>\n<figure><figcaption>image-20210926151333473</figcaption></figure>\n<h4> 4.8.2 创建标签</h4>\n<p>创建标签命令：git tag 标签名</p>\n<figure><figcaption>image-20210926151452581</figcaption></figure>\n<h4> 4.8.3 将标签推送至远程仓库</h4>\n<p>将标签推送至远程仓库命令：git push 远程仓库简称 标签名</p>\n<figure><figcaption>image-20210926151621286</figcaption></figure>\n<p>推送完成后可以在远程仓库中查看标签。</p>\n<h4> 4.8.4 检出标签</h4>\n<p>检出标签时需要新建一个分支来指向某个标签，检出标签的命令格式：git checkout -b 分支名 标签名</p>\n<figure><figcaption>image-20210926152111514</figcaption></figure>\n<h2> 5. 在IDEA中使用Git</h2>\n<p>通过Git命令可以完成Git相关操作，为了简化操作过程，我们可以在IEDA中配置Git，配置好后就可以在IDEA中通过图形化的方式来操作Git。</p>\n<h3> 5.1 在IDEA中配置Git</h3>\n<p>在IDEA中使用Git，本质上还是使用的本地安装的Git软件，所以需要提前安装好Git并在IDEA中配置Git。</p>\n<p>Git安装目录：</p>\n<figure><figcaption>image-20210926152847948</figcaption></figure>\n<p>解释说明：</p>\n<blockquote>\n<p>git.exe：Git安装目录下的可执行文件，前面执行的git命令，其实就是执行的这个文件</p>\n</blockquote>\n<p>IDEA中的配置：</p>\n<figure><figcaption>image-20210926152950420</figcaption></figure>\n<p>说明：如果Git安装在默认目录中（C:\\Program Files\\Git），则IDEA中无需再手动配置，直接就可以使用。</p>\n<h3> 5.2 获取Git仓库</h3>\n<p>在IDEA中获取Git仓库有两种方式：</p>\n<ul>\n<li>本地初始化仓库，本质就是执行 git init 命令</li>\n<li>从远程仓库克隆，本质就是执行 git clone 命令</li>\n</ul>\n<h4> 5.2.1 本地初始化仓库</h4>\n<p>在IDEA中通过如下操作可以在本地初始化一个本地仓库，其实底层就是执行的 git init 命令。操作过程如下：</p>\n<p>1）依次选择菜单【VCS】---【Import into Version Control】---【Create Git Repository】</p>\n<figure><figcaption>image-20210926153806414</figcaption></figure>\n<p>2）在弹出的【Create Git Repository】对话框中选择当前项目根目录，点击【OK】按钮：</p>\n<figure><figcaption>image-20210926154201744</figcaption></figure>\n<p>操作完成后可以看到当前项目根目录下出现了.git隐藏目录：</p>\n<figure><figcaption>image-20210926154757082</figcaption></figure>\n<p>操作完成后可以在IDEA的工具栏中看到Git的相关操作图标：</p>\n<h4> 5.2.2 从远程仓库克隆</h4>\n<p>在IDEA中从远程仓库克隆本质就是执行的 git clone 命令，具体操作过程如下：</p>\n<p>1）在IDEA开始窗口中点击【Get from Version Control】</p>\n<figure><figcaption>image-20210926155434202</figcaption></figure>\n<p>2）在弹出的【Get from Version Control】窗口中输入远程仓库的URL地址和对应的本地仓库存放目录，点击【Clone】按钮进行仓库克隆操作</p>\n<figure><figcaption>image-20210926155750107</figcaption></figure>\n<h3> 5.3 Git忽略文件</h3>\n<p>在Git工作区中有一个特殊的文件 .gitignore，通过此文件可以指定工作区中的哪些文件不需要Git管理。我们在码云上创建Git远程仓库时可以指定生成此文件，如下：</p>\n<figure><figcaption>image-20210926161050169</figcaption></figure>\n<p>创建完成后效果如下：</p>\n<figure><figcaption>image-20210926161233052</figcaption></figure>\n<p>解释说明：</p>\n<blockquote>\n<p>1）我们在使用Git管理项目代码时，并不是所有文件都需要Git管理，例如Java项目中编译的.class文件、开发工具自带的配置文件等，这些文件没有必要交给Git管理，所以也就不需要提交到Git版本库中</p>\n<p>2）注意忽略文件的名称是固定的，不能修改</p>\n<p>3）添加到忽略列表中的文件后续Git工具就会忽略它</p>\n</blockquote>\n<p>一个参考的.gitignore文件内容如下：</p>\n<div class=\"language-file line-numbers-mode\" data-ext=\"file\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 5.4 本地仓库操作</h3>\n<p>本地仓库操作：</p>\n<ul>\n<li>将文件加入暂存区，本质就是执行 git add 命令</li>\n<li>将暂存区的文件提交到版本库，本质就是执行 git commit 命令</li>\n<li>查看日志，本质就是执行 git log 命令</li>\n</ul>\n<h4> 5.4.1 将文件加入暂存区</h4>\n<p>当在Git工作区新增文件或者对已有文件修改后，就需要将文件的修改加入暂存区，具体操作如下：</p>\n<figure><figcaption>image-20210926162515597</figcaption></figure>\n<h4> 5.4.2 将暂存区文件提交到版本库</h4>\n<p>将暂存区文件提交到版本库，可以选择一个文件进行提交，也可以选择整个项目提交多个文件。在IEDA中对文件的提交进行了简化操作，也就是如果文件修改后，无需再加入暂存区，可以直接提交。</p>\n<p>1）提交一个文件：</p>\n<figure><figcaption>image-20210926162809740</figcaption></figure>\n<p>可以看到，如果选中一个文件提交，则菜单名称为【Commit File...】</p>\n<p>2）提交多个文件：</p>\n<figure><figcaption>image-20210926162843891</figcaption></figure>\n<p>可以看到，如果提交多个文件，则菜单名称为【Commit Directory...】</p>\n<p>由于提交操作属于高频操作，所以为了进一步方便操作，在IDEA的工具栏中提供了提交操作的快捷按钮：</p>\n<h4> 5.4.3 查看日志</h4>\n<p>查看日志，既可以查看整个仓库的提交日志，也可以查看某个文件的提交日志。</p>\n<p>1）查看整个项目的提交日志：</p>\n<figure><figcaption>image-20210926163902184</figcaption></figure>\n<figure><figcaption>image-20210926164138430</figcaption></figure>\n<p>2）查看某个文件的提交日志</p>\n<figure><figcaption>image-20210926164210056</figcaption></figure>\n<figure><figcaption>image-20210926164233935</figcaption></figure>\n<h3> 5.5 远程仓库操作</h3>\n<p>远程仓库操作：</p>\n<ul>\n<li>查看远程仓库，本质就是执行 git remote 命令</li>\n<li>添加远程仓库，本质就是执行 git remote add 命令</li>\n<li>推送至远程仓库，本质就是执行 git push 命令</li>\n<li>从远程仓库拉取，本质就是执行 git pull 命令</li>\n</ul>\n<h4> 5.5.1 查看远程仓库</h4>\n<p>操作过程如下：</p>\n<figure><figcaption>image-20210926165935756</figcaption></figure>\n<p>在弹出的【Git Remotes】窗口中可以看到配置的远程仓库：</p>\n<figure><figcaption>image-20210926170143160</figcaption></figure>\n<h4> 5.5.2 添加远程仓库</h4>\n<p>一个本地仓库可以配置多个远程仓库，在【Git Remotes】窗口中点击【+】来添加一个新的远程仓库：</p>\n<figure><figcaption>image-20210926170653126</figcaption></figure>\n<h4> 5.5.3 推送至远程仓库</h4>\n<p>可以通过如下操作将本地仓库文件推送至远程仓库：</p>\n<figure><figcaption>image-20210926170908769</figcaption></figure>\n<p>在弹出的【Push Commits】窗口中可以看到本次推送的文件，点击【Push】按钮即可推送至远程仓库：</p>\n<figure><figcaption>image-20210926171058705</figcaption></figure>\n<p>由于推送至远程仓库操作属于高频操作，所以可以通过IDEA工具栏中的提交快捷按钮同时完成提交和推送：</p>\n<figure><figcaption>image-20210926171408649</figcaption></figure>\n<p>点击【Commit and Push...】按钮同时完成提交和推送操作</p>\n<h4> 5.5.4 从远程仓库拉取</h4>\n<p>可以通过如下操作从远程仓库拉取：</p>\n<figure><figcaption>image-20210926171646041</figcaption></figure>\n<p>由于从远程仓库拉取文件属于高频操作，所以在IDEA的工具栏中提供了对应的快捷按钮：</p>\n<p>在弹出的【Update Project】窗口中点击【OK】：</p>\n<figure><figcaption>image-20210926171950911</figcaption></figure>\n<h3> 5.6 分支操作</h3>\n<p>分支操作：</p>\n<ul>\n<li>查看分支，本质就是执行 git branch 命令</li>\n<li>创建分支，本质就是执行 git branch 分支名 命令</li>\n<li>切换分支，本质就是执行 git checkout 命令</li>\n<li>将分支推送到远程仓库，本质就是执行 git push 命令</li>\n<li>合并分支，本质就是执行 git merge 命令</li>\n</ul>\n<h4> 5.6.1 查看分支</h4>\n<p>可以通过如下操作查看分支：</p>\n<figure><figcaption>image-20210926172752562</figcaption></figure>\n<p>在弹出的窗口中可以看到本地分支和远程分支：</p>\n<figure><figcaption>image-20210926172903493</figcaption></figure>\n<p>由于分支操作属于高频操作，所以在IDEA的状态栏中提供了分支操作的快捷按钮：</p>\n<figure><figcaption>image-20210926173622605</figcaption></figure>\n<p>点击【master】快捷按钮即可弹出【Git Branches】分支窗口：</p>\n<figure><figcaption>image-20210926173744979</figcaption></figure>\n<h4> 5.6.2 创建分支</h4>\n<p>在【Git Branches】分支窗口中点击【New Branch】，弹出如下窗口：</p>\n<figure><figcaption>image-20210926173903894</figcaption></figure>\n<p>在弹出的【Create New Branch】窗口中输入新分支的名称，点击【Create】按钮完成分支创建</p>\n<h4> 5.6.3 切换分支</h4>\n<p>通过如下操作可以切换分支：</p>\n<figure><figcaption>image-20210926174358500</figcaption></figure>\n<h4> 5.6.4 将分支推送到远程仓库</h4>\n<p>通过如下操作可以将分支推送到远程仓库：</p>\n<figure><figcaption>image-20210926175004502</figcaption></figure>\n<h4> 5.6.5 合并分支</h4>\n<p>通过下面操作可以进行分支的合并：</p>\n<figure><figcaption>image-20210926175216197</figcaption></figure>\n",
      "date_published": "2021-02-28T08:36:14.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "工具"
      ]
    },
    {
      "title": "Spring核心_01_控制反转(IOC)",
      "url": "https://www.fanliu.top/spring/Framework/Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC(IOC).html",
      "id": "https://www.fanliu.top/spring/Framework/Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC(IOC).html",
      "summary": "0. 引入 1. Spring框架管理这些Bean的创建工作，即由用户管理Bean转变为框架管理Bean，这个就叫控制反转 - Inversion of Control (IoC) 2. Spring 框架托管创建的Bean放在哪里呢？ 这便是IoC Container; 3. Spring 框架为了更好让用户配置Bean，必然会引入不同方式来配置Be...",
      "content_html": "<h2> 0. 引入</h2>\n<ol>\n<li>Spring框架管理这些Bean的创建工作，即由用户管理Bean转变为框架管理Bean，这个就叫<strong>控制反转 - Inversion of Control (IoC)</strong></li>\n<li>Spring 框架托管创建的Bean放在哪里呢？ 这便是<strong>IoC Container</strong>;</li>\n<li>Spring 框架为了更好让用户配置Bean，必然会引入<strong>不同方式来配置Bean？ 这便是xml配置，Java配置，注解配置</strong>等支持</li>\n<li>Spring 框架既然接管了Bean的生成，必然需要<strong>管理整个Bean的生命周期</strong>等；</li>\n<li>应用程序代码从Ioc Container中获取依赖的Bean，注入到应用程序中，这个过程叫 <strong>依赖注入(Dependency Injection，DI)</strong> ； 所以说控制反转是通过依赖注入实现的，其实它们是同一个概念的不同角度描述。通俗来说就是<strong>IoC是设计思想，DI是实现方式</strong></li>\n<li>在依赖注入时，有哪些方式呢？这就是构造器方式，@Autowired, @Resource, @Qualifier... 同时Bean之间存在依赖（可能存在先后顺序问题，以及<strong>循环依赖问题</strong>等）</li>\n</ol>\n<h2> 1. 如何理解IoC</h2>\n<p>如果你有精力看英文，首推 Martin Fowler大师的 <a href=\"https://www.martinfowler.com/articles/injection.html\" target=\"_blank\" rel=\"noopener noreferrer\">Inversion of Control Containers and the Dependency Injection pattern在新窗口打开</a>；其次IoC作为一种设计思想，不要过度解读，而是应该简化理解，所以我这里也整合了 张开涛早前的博客<a href=\"https://www.iteye.com/blog/jinnianshilongnian-1413846\" target=\"_blank\" rel=\"noopener noreferrer\">IoC基础在新窗口打开</a>并加入了自己的理解。</p>\n<h3> 1. Spring Bean是什么</h3>\n<blockquote>\n<p>IoC Container管理的是Spring Bean， 那么Spring Bean是什么呢？</p>\n</blockquote>\n<p>Spring里面的bean就类似是定义的一个组件，而这个组件的作用就是实现某个功能的，这里所定义的bean就相当于给了你一个更为简便的方法来调用这个组件去实现你要完成的功能。</p>\n<h3> 2. IoC是什么</h3>\n<blockquote>\n<p>Ioc—Inversion of Control，即“控制反转”，<strong>不是什么技术，而是一种设计思想</strong>。在Java开发中，Ioc意味着将你设计好的对象交给容器控制，而不是传统的在你的对象内部直接控制。</p>\n</blockquote>\n<p>我们来深入分析一下：</p>\n<ul>\n<li><strong>谁控制谁，控制什么</strong>？</li>\n</ul>\n<p>传统Java SE程序设计，我们直接在对象内部通过new进行创建对象，是程序主动去创建依赖对象；而IoC是有专门一个容器来创建这些对象，即由Ioc容器来控制对 象的创建；谁控制谁？当然是IoC 容器控制了对象；控制什么？那就是主要控制了外部资源获取（不只是对象包括比如文件等）。</p>\n<ul>\n<li><strong>为何是反转，哪些方面反转了</strong>?</li>\n</ul>\n<p>有反转就有正转，传统应用程序是由我们自己在对象中主动控制去直接获取依赖对象，也就是正转；而反转则是由容器来帮忙创建及注入依赖对象；为何是反转？因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是反转；哪些方面反转了？依赖对象的获取被反转了。</p>\n<ul>\n<li><strong>用图例说明一下</strong>?</li>\n</ul>\n<p>传统程序设计下，都是主动去创建相关对象然后再组合起来：</p>\n<figure><figcaption>image-20231204180814908</figcaption></figure>\n<p>当有了IoC/DI的容器后，在客户端类中不再主动去创建这些对象了，如图</p>\n<figure><figcaption>image-20231204180842505</figcaption></figure>\n<h3> 3. IoC能做什么</h3>\n<blockquote>\n<p>IoC <strong>不是一种技术，只是一种思想</strong>，一个重要的面向对象编程的法则，它能指导我们如何设计出松耦合、更优良的程序。</p>\n</blockquote>\n<p>传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IoC容器后，<strong>把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是 松散耦合，这样也方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活</strong>。</p>\n<p>其实IoC对编程带来的最大改变不是从代码上，而是从思想上，发生了“主从换位”的变化。应用程序原本是老大，要获取什么资源都是主动出击，但是在IoC/DI思想中，应用程序就变成被动的了，被动的等待IoC容器来创建并注入它所需要的资源了。</p>\n<p>IoC很好的体现了面向对象设计法则之一—— <strong>好莱坞法则：“别找我们，我们找你”</strong>；即由IoC容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。</p>\n<h3> 4. IoC和DI是什么关系</h3>\n<blockquote>\n<p>控制反转是通过依赖注入实现的，其实它们是同一个概念的不同角度描述。通俗来说就是<strong>IoC是设计思想，DI是实现方式</strong>。</p>\n</blockquote>\n<p>DI—Dependency Injection，即依赖注入：组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态的将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。</p>\n<p>我们来深入分析一下：</p>\n<ul>\n<li><strong>谁依赖于谁</strong>？</li>\n</ul>\n<p>当然是应用程序依赖于IoC容器；</p>\n<ul>\n<li><strong>为什么需要依赖</strong>？</li>\n</ul>\n<p>应用程序需要IoC容器来提供对象需要的外部资源；</p>\n<ul>\n<li><strong>谁注入谁</strong>？</li>\n</ul>\n<p>很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象；</p>\n<ul>\n<li><strong>注入了什么</strong>？</li>\n</ul>\n<p>就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。</p>\n<ul>\n<li><strong>IoC和DI有什么关系呢</strong>？</li>\n</ul>\n<p>其实它们是同一个概念的不同角度描述，由于控制反转概念比较含糊（可能只是理解为容器控制对象这一个层面，很难让人想到谁来维护对象关系），所以2004年大师级人物Martin Fowler又给出了一个新的名字：“依赖注入”，相对IoC 而言，“依赖注入”明确描述了“被注入对象依赖IoC容器配置依赖对象”。通俗来说就是<strong>IoC是设计思想，DI是实现方式</strong>。</p>\n<h2> 2. Ioc 配置的三种方式</h2>\n<blockquote>\n<p>在<a href=\"\">Spring基础 - Spring简单例子引入Spring的核心</a>已经给出了三种配置方式，这里再总结下；总体上目前的主流方式是 <strong>注解 + Java 配置</strong>。</p>\n</blockquote>\n<h3> 1. xml 配置</h3>\n<p>顾名思义，就是将bean的信息配置.xml文件里，通过Spring加载文件为我们创建bean。这种方式出现很多早前的SSM项目中，将第三方类库或者一些配置工具类都以这种方式进行配置，主要原因是由于第三方类不支持Spring注解。</p>\n<ul>\n<li><strong>优点</strong>： 可以使用于任何场景，结构清晰，通俗易懂</li>\n<li><strong>缺点</strong>： 配置繁琐，不易维护，枯燥无味，扩展性差</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<ol>\n<li>配置xx.xml文件</li>\n<li>声明命名空间和配置bean</li>\n</ol>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2. Java 配置</h3>\n<p>将类的创建交给我们配置的JavcConfig类来完成，Spring只负责维护和管理，采用纯Java创建方式。其本质上就是把在XML上的配置声明转移到Java配置类中</p>\n<ul>\n<li><strong>优点</strong>：适用于任何场景，配置方便，因为是纯Java代码，扩展性高，十分灵活</li>\n<li><strong>缺点</strong>：由于是采用Java类的方式，声明不明显，如果大量配置，可读性比较差</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<ol>\n<li>创建一个配置类， 添加@Configuration注解声明为配置类</li>\n<li>创建方法，方法上加上@bean，该方法用于创建实例并返回，该实例创建后会交给spring管理，方法名建议与实例名相同（首字母小写）。注：实例类不需要加任何注解</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3. 注解配置</h3>\n<p>通过在类上加注解的方式，来声明一个类交给Spring管理，Spring会自动扫描带有@Component，@Controller，@Service，@Repository这四个注解的类，然后帮我们创建并管理，前提是需要先配置Spring的注解扫描器。</p>\n<ul>\n<li><strong>优点</strong>：开发便捷，通俗易懂，方便维护。</li>\n<li><strong>缺点</strong>：具有局限性，对于一些第三方资源，无法添加注解。只能采用XML或JavaConfig的方式配置</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<ol>\n<li>对类添加@Component相关的注解，比如@Controller，@Service，@Repository</li>\n<li>设置ComponentScan的basePackage, 比如<code>&lt;context:component-scan base-package='tech.pdai.springframework'&gt;</code>, 或者<code>@ComponentScan(\"tech.pdai.springframework\")</code>注解，或者 <code>new AnnotationConfigApplicationContext(\"tech.pdai.springframework\")</code>指定扫描的basePackage.</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 3. 依赖注入的三种方式</h2>\n<blockquote>\n<p>常用的注入方式主要有三种：构造方法注入（Construct注入），setter注入，基于注解的注入（接口注入）</p>\n</blockquote>\n<h3> 1. setter方式</h3>\n<ul>\n<li><strong>在XML配置方式中</strong>，property都是setter方式注入，比如下面的xml:</li>\n</ul>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>本质上包含两步：</p>\n<ol>\n<li>第一步，需要new UserServiceImpl()创建对象, 所以需要默认构造函数</li>\n<li>第二步，调用setUserDao()函数注入userDao的值, 所以需要setUserDao()函数</li>\n</ol>\n<p>所以对应的service类是这样的：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li><strong>在注解和Java配置方式下</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在Spring3.x刚推出的时候，推荐使用注入的就是这种, 但是这种方式比较麻烦，所以在Spring4.x版本中推荐构造函数注入。</p>\n<h3> 2. 构造函数</h3>\n<ul>\n<li><strong>在XML配置方式中</strong>，<code>&lt;constructor-arg&gt;</code>是通过构造函数参数注入，比如下面的xml:</li>\n</ul>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>本质上是new UserServiceImpl(userDao)创建对象, 所以对应的service类是这样的：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li><strong>在注解和Java配置方式下</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在Spring4.x版本中推荐的注入方式就是这种， 具体原因看后续章节。</p>\n<h3> 3. 注解注入</h3>\n<p>以@Autowired（自动注入）注解注入为例，修饰符有三个属性：Constructor，byType，byName。默认按照byType注入。</p>\n<ul>\n<li><strong>constructor</strong>：通过构造方法进行自动注入，spring会匹配与构造方法参数类型一致的bean进行注入，如果有一个多参数的构造方法，一个只有一个参数的构造方法，在容器中查找到多个匹配多参数构造方法的bean，那么spring会优先将bean注入到多参数的构造方法中。</li>\n<li><strong>byName</strong>：被注入bean的id名必须与set方法后半截匹配，并且id名称的第一个单词首字母必须小写，这一点与手动set注入有点不同。</li>\n<li><strong>byType</strong>：查找所有的set方法，将符合符合参数类型的bean注入。</li>\n</ul>\n<p>比如：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 4. IoC和DI使用问题小结</h2>\n<blockquote>\n<p>这里总结下实际开发中会遇到的一些问题：</p>\n</blockquote>\n<h3> 1. 为什么推荐构造器注入方式？</h3>\n<p>先来看看Spring在文档里怎么说：</p>\n<blockquote>\n<p>The Spring team generally advocates constructor injection as it enables one to implement application components as immutable objects and to ensure that required dependencies are not null. Furthermore constructor-injected components are always returned to client (calling) code in a fully initialized state.</p>\n</blockquote>\n<p>简单的翻译一下：这个构造器注入的方式<strong>能够保证注入的组件不可变，并且确保需要的依赖不为空</strong>。此外，构造器注入的依赖总是能够在返回客户端（组件）代码的时候保证完全初始化的状态。</p>\n<p>下面来简单的解释一下：</p>\n<ul>\n<li><strong>依赖不可变</strong>：其实说的就是final关键字。</li>\n<li><strong>依赖不为空</strong>（省去了我们对其检查）：当要实例化UserServiceImpl的时候，由于自己实现了有参数的构造函数，所以不会调用默认构造函数，那么就需要Spring容器传入所需要的参数，所以就两种情况：1、有该类型的参数-&gt;传入，OK 。2：无该类型的参数-&gt;报错。</li>\n<li><strong>完全初始化的状态</strong>：这个可以跟上面的依赖不为空结合起来，向构造器传参之前，要确保注入的内容不为空，那么肯定要调用依赖组件的构造方法完成实例化。而在Java类加载实例化的过程中，构造方法是最后一步（之前如果有父类先初始化父类，然后自己的成员变量，最后才是构造方法），所以返回来的都是初始化之后的状态。</li>\n</ul>\n<p>所以通常是这样的</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果使用setter注入，缺点显而易见，对于IOC容器以外的环境，除了使用反射来提供它需要的依赖之外，<strong>无法复用该实现类</strong>。而且将一直是个潜在的隐患，因为你不调用将一直无法发现NPE的存在。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>循环依赖的问题</strong>：使用field注入可能会导致循环依赖，即A里面注入B，B里面又注入A：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果使用构造器注入，在spring项目启动的时候，就会抛出：BeanCurrentlyInCreationException：Requested bean is currently in creation: Is there an unresolvable circular reference？从而提醒你避免循环依赖，如果是field注入的话，启动的时候不会报错，在使用那个bean的时候才会报错。</p>\n<h3> 2. 我在使用构造器注入方式时注入了太多的类导致Bad Smell怎么办？</h3>\n<p>比如当你一个Controller中注入了太多的Service类，Sonar会给你提示相关告警</p>\n<figure><figcaption>image-20231204181438756</figcaption></figure>\n<p>对于这个问题，说明你的类当中有太多的责任，那么你要好好想一想是不是自己违反了类的<a href=\"\">单一性职责原则</a>，从而导致有这么多的依赖要注入。</p>\n<p>（pdai： 想起来一句话：<strong>所有困难问题的解决方式，都在另外一个层次</strong>）</p>\n<h3> 3. @Autowired和@Resource以及@Inject等注解注入有何区别？</h3>\n<blockquote>\n<p>@Autowired和@Resource以及@Inject等注解注入有何区别？ 这时平时在开发中，或者常见的面试题。</p>\n</blockquote>\n<h4> @Autowired</h4>\n<ul>\n<li><strong>Autowired注解源码</strong></li>\n</ul>\n<p>在Spring 2.5 引入了 @Autowired 注解</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>从Autowired注解源码上看，可以使用在下面这些地方：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>还有一个value属性，默认是true。</p>\n<ul>\n<li><strong>简单总结</strong>：</li>\n</ul>\n<p>1、@Autowired是Spring自带的注解，通过AutowiredAnnotationBeanPostProcessor 类实现的依赖注入</p>\n<p>2、@Autowired可以作用在CONSTRUCTOR、METHOD、PARAMETER、FIELD、ANNOTATION_TYPE</p>\n<p>3、@Autowired默认是根据类型（byType ）进行自动装配的</p>\n<p>4、如果有多个类型一样的Bean候选者，需要指定按照名称（byName ）进行装配，则需要配合@Qualifier。</p>\n<p>指定名称后，如果Spring IOC容器中没有对应的组件bean抛出NoSuchBeanDefinitionException。也可以将@Autowired中required配置为false，如果配置为false之后，当没有找到相应bean的时候，系统不会抛异常</p>\n<ul>\n<li><strong>简单使用代码</strong>：</li>\n</ul>\n<p>在字段属性上。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>或者</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>或者</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>将@Autowired写在被注入的成员变量上，setter或者构造器上，就不用再xml文件中配置了。</p>\n<p>如果有多个类型一样的Bean候选者，则默认根据设定的属性名称进行获取。如 HelloDao 在Spring中有 helloWorldDao 和 helloDao 两个Bean候选者。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>首先根据类型获取，发现多个HelloDao，然后根据helloDao进行获取，如果要获取限定的其中一个候选者，结合@Qualifier进行注入。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注入名称为helloWorldDao 的Bean组件。@Qualifier(\"XXX\") 中的 XX是 Bean 的名称，所以 @Autowired 和 @Qualifier 结合使用时，自动注入的策略就从 byType 转变成 byName 了。</p>\n<p>多个类型一样的Bean候选者，也可以@Primary进行使用，设置首选的组件，也就是默认优先使用哪一个。</p>\n<p>注意：使用@Qualifier 时候，如何设置的指定名称的Bean不存在，则会抛出异常，如果防止抛出异常，可以使用：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在SpringBoot中也可以使用@Bean+@Autowired进行组件注入，将@Autowired加到参数上，其实也可以省略。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> @Resource</h4>\n<ul>\n<li><strong>Resource注解源码</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>从Resource注解源码上看，可以使用在下面这些地方：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>name 指定注入指定名称的组件。</p>\n<ul>\n<li><strong>简单总结</strong>：</li>\n</ul>\n<p>1、@Resource是JSR250规范的实现，在javax.annotation包下</p>\n<p>2、@Resource可以作用TYPE、FIELD、METHOD上</p>\n<p>3、@Resource是默认根据属性名称进行自动装配的，如果有多个类型一样的Bean候选者，则可以通过name进行指定进行注入</p>\n<ul>\n<li><strong>简单使用代码</strong>：</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>按照属性名称 car 注入容器中的组件。如果容器中BMW还有BYD两种类型组件。指定加入BMW。如下代码：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>name 的作用类似 @Qualifier</p>\n<h4> @Inject</h4>\n<ul>\n<li><strong>Inject注解源码</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>从Inject注解源码上看，可以使用在下面这些地方：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li><strong>简单总结</strong>：</li>\n</ul>\n<p>1、@Inject是JSR330 (Dependency Injection for Java)中的规范，需要导入javax.inject.Inject jar包 ，才能实现注入</p>\n<p>2、@Inject可以作用CONSTRUCTOR、METHOD、FIELD上</p>\n<p>3、@Inject是根据类型进行自动装配的，如果需要按名称进行装配，则需要配合@Named；</p>\n<ul>\n<li><strong>简单使用代码</strong>：</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>指定加入BMW组件。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>@Named 的作用类似 @Qualifier！</p>\n<h4> 总结</h4>\n<p>1、@Autowired是Spring自带的，@Resource是JSR250规范实现的，@Inject是JSR330规范实现的</p>\n<p>2、@Autowired、@Inject用法基本一样，不同的是@Inject没有required属性</p>\n<p>3、@Autowired、@Inject是默认按照类型匹配的，@Resource是按照名称匹配的</p>\n<p>4、@Autowired如果需要按照名称匹配需要和@Qualifier一起使用，@Inject和@Named一起使用，@Resource则通过name进行指定</p>\n<hr>\n<p>大佬写的太好了，摘抄一下，反复阅读，著作权归@pdai所有 原文链接：https://pdai.tech/md/spring/spring-x-framework-ioc.html</p>\n",
      "date_published": "2023-12-04T20:01:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Spring"
      ]
    },
    {
      "title": "SpringBoot-api-01-如何生成接口文档之Swagger技术栈",
      "url": "https://www.fanliu.top/spring/SpringBoot/SpringBoot-api-01-%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E4%B9%8BSwagger%E6%8A%80%E6%9C%AF%E6%A0%88.html",
      "id": "https://www.fanliu.top/spring/SpringBoot/SpringBoot-api-01-%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E4%B9%8BSwagger%E6%8A%80%E6%9C%AF%E6%A0%88.html",
      "summary": "0. 准备知识点 在生成文档前，你需要了解下OpenAPI规范，Swagger，SpringFox，Knife4J，Swagger UI等之间的关系。 1. 什么是OpenAPI规范（OAS)？ OpenAPI 规范（OAS） (https://fishead.gitbook.io/openapi-specification-zhcn-translat...",
      "content_html": "<h2> 0. 准备知识点</h2>\n<blockquote>\n<p>在生成文档前，你需要了解下OpenAPI规范，Swagger，SpringFox，Knife4J，Swagger UI等之间的关系。</p>\n</blockquote>\n<h3> 1. 什么是OpenAPI规范（OAS)？</h3>\n<p><a href=\"https://fishead.gitbook.io/openapi-specification-zhcn-translation/3.0.0.zhcn#revisionHistory\" target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI 规范（OAS）</a>定义了一个标准的、语言无关的 RESTful API 接口规范，它可以同时允许开发人员和操作系统查看并理解某个服务的功能，而无需访问源代码，文档或网络流量检查（既方便人类学习和阅读，也方便机器阅读）。正确定义 OAS 后，开发者可以使用最少的实现逻辑来理解远程服务并与之交互。</p>\n<p>此外，文档生成工具可以使用 OpenAPI 规范来生成 API 文档，代码生成工具可以生成各种编程语言下的服务端和客户端代码，测试代码和其他用例。</p>\n<p>官方GitHub地址： <a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI-Specification</a></p>\n<h3> 2. 什么是Swagger？</h3>\n<p>Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。</p>\n<p>从上述 Swagger 定义我们不难看出 Swagger 有以下 3 个重要的作用：</p>\n<ul>\n<li>将项目中所有的接口展现在页面上，这样后端程序员就不需要专门为前端使用者编写专门的接口文档；</li>\n<li>当接口更新之后，只需要修改代码中的 Swagger 描述就可以实时生成新的接口文档了，从而规避了接口文档老旧不能使用的问题；</li>\n<li>通过 Swagger 页面，我们可以直接进行接口调用，降低了项目开发阶段的调试成本。</li>\n</ul>\n<p>Swagger3完全遵循了 OpenAPI 规范。Swagger 官网地址：<a href=\"https://swagger.io/\" target=\"_blank\" rel=\"noopener noreferrer\">https://swagger.io/</a>。</p>\n<h3> 3. Swagger和SpringFox有啥关系？</h3>\n<p>Swagger 可以看作是一个遵循了 OpenAPI 规范的一项技术，而 springfox 则是这项技术的具体实现。 就好比 Spring 中的 IOC 和 DI 的关系 一样，前者是思想，而后者是实现。</p>\n<h3> 4. 什么是Knife4J? 和Swagger什么关系？</h3>\n<blockquote>\n<p>本质是Swagger的增强解决方案，前身只是一个SwaggerUI（swagger-bootstrap-ui）</p>\n</blockquote>\n<p>Knife4j是为Java MVC框架集成Swagger生成Api文档的增强解决方案, 前身是swagger-bootstrap-ui,取名kni4j是希望她能像一把匕首一样小巧,轻量,并且功能强悍!</p>\n<p>Knife4j的前身是swagger-bootstrap-ui，为了契合微服务的架构发展,由于原来swagger-bootstrap-ui采用的是后端Java代码+前端Ui混合打包的方式,在微服务架构下显的很臃肿,因此项目正式更名为knife4j</p>\n<p>更名后主要专注的方面</p>\n<ul>\n<li>前后端Java代码以及前端Ui模块进行分离,在微服务架构下使用更加灵活</li>\n<li>提供<strong>专注于Swagger的增强解决方案</strong>,不同于只是改善增强前端Ui部分</li>\n</ul>\n<p>相关文档请参考：https://doc.xiaominfo.com/knife4j/documentation/</p>\n<h2> 1. 实现案例之Swagger3</h2>\n<blockquote>\n<p>我们先看下最新Swagger3 如何配置和实现接口。</p>\n</blockquote>\n<h3> 1. POM</h3>\n<p>根据上文介绍，我们引入springfox依赖包，最新的是3.x.x版本。和之前的版本比，只需要引入如下的starter包即可。</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2. Swagger Config</h3>\n<p>我们在配置中还增加了一些全局的配置，比如全局参数等</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3. controller接口</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3. 运行测试</h3>\n<p>打开文档API网页</p>\n<figure><figcaption>image-20231205151904823</figcaption></figure>\n<p>测试添加一个用户</p>\n<figure><figcaption>image-20231205151933084</figcaption></figure>\n<p>查询用户列表</p>\n<figure><figcaption>image-20231205152050966</figcaption></figure>\n<h2> 2. 实现案例之Knife4J</h2>\n<blockquote>\n<p>这里展示目前使用Java生成接口文档的最佳实现: SwaggerV3(OpenAPI）+ Knife4J。</p>\n</blockquote>\n<h3> 1. POM</h3>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2. yml配置</h3>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 3. 注入配置</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中ResponseStatus封装</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4. Controller接口</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 5. 运行测试</h3>\n<p>自定义用户主页</p>\n<figure><figcaption>image-20231205152308200</figcaption></figure>\n<p>model模型</p>\n<figure><figcaption>image-20231205152325511</figcaption></figure>\n<p>全局参数 和配置</p>\n<figure><figcaption>image-20231205152346598</figcaption></figure>\n<p>自定义文档</p>\n<figure><figcaption>image-20231205152413682</figcaption></figure>\n<p>接口文档和测试接口</p>\n<figure><figcaption>image-20231205152439091</figcaption></figure>\n",
      "date_published": "2023-12-05T15:30:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Spring"
      ]
    },
    {
      "title": "Springboot 原理篇",
      "url": "https://www.fanliu.top/spring/SpringBoot/SpringBoot%E5%8E%9F%E7%90%86%E7%AF%87.html",
      "id": "https://www.fanliu.top/spring/SpringBoot/SpringBoot%E5%8E%9F%E7%90%86%E7%AF%87.html",
      "summary": "【目标】 掌握springboot自动配置原理 【路径】 1：RedisTemplate分析引入 2：自定义类实现自动配置 3：需求优化 【讲解】 在我们使用springboot的时候，能带来的方便性和便利性，不需要配置便可以实现相关的使用，开发效率极大的提升，那么实际上，springboot本身的基础依赖中封装了许许多多的配置帮我们自动完成了配置了。...",
      "content_html": "<h1> Springboot 原理篇</h1>\n<h1> 1 springboot的自动配置原理【重点】</h1>\n<h3> 【目标】</h3>\n<p>掌握springboot自动配置原理</p>\n<h3> 【路径】</h3>\n<p>1：RedisTemplate分析引入</p>\n<p>2：自定义类实现自动配置</p>\n<p>3：需求优化</p>\n<h3> 【讲解】</h3>\n<p>在我们使用springboot的时候，能带来的方便性和便利性，不需要配置便可以实现相关的使用，开发效率极大的提升，那么实际上，springboot本身的基础依赖中封装了许许多多的配置帮我们自动完成了配置了。那么它是如何实现的呢？</p>\n<h2> 1.1 Condition接口Conditional注解</h2>\n<p>​\t讲Springboot自动配置，逃不开ConditionalOnxxx等等注解，也逃不开condition接口所定义的功能。</p>\n<h3> 1.1.1 condition接口</h3>\n<p>​\tcondition接口是spring4之后提供给了的接口，增加条件判断功能，用于选择性的创建Bean对象到spring容器中。</p>\n<p>思考一个问题 ?</p>\n<p>​\t我们之前用过springboot整合redis 实现的步骤：就是添加redis起步依赖之后，直接就可以使用从spring容器中获取注入RedisTemplate对象了，而不需要创建该对象放到spring容器中了.意味着Spring boot redis的起步依赖已经能自动的创建该redisTemplate对象加入到spring容器中了。这里应用的重要的一个点就是condition的应用。</p>\n<p>我们来演示下，是否加入依赖就可以获取redisTemplate,不加依赖就不会获取到redisTemplate</p>\n<h4> 1.1.1.1 RedisTemplate分析</h4>\n<p>演示步骤：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（1）创建工程添加依赖</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(2)com.itheima下创建启动类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(3)启动main方法，查看效果</p>\n<figure><figcaption>1583138681364</figcaption></figure>\n<p>(4)注释依赖则报错：</p>\n<figure><figcaption>1583138756611</figcaption></figure>\n<figure><figcaption>1583138775576</figcaption></figure>\n<h4> 1.1.1.2 自定义实现类</h4>\n<p>刚才看到的效果，那么它到底是如何实现的呢？我们现在给一个需求：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(1)需求</p>\n<p>​\t在spring容器中有一个user的bean对象，如果导入了redisclient(jedis)的坐标则注册该bean，如果没有导入则不注册该bean.</p>\n<p>@ConditionalOnClass(RedisOperations.class) =&gt; @Conditional(condition)</p>\n<p>如果导入了redisclient的坐标, 创建user的bean对象</p>\n<p>(2)实现步骤：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(3)创建POJO</p>\n<div class=\"language-JAVA line-numbers-mode\" data-ext=\"JAVA\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(4)创建condition的接口实现类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(5) 定义配置类 在com.itheima.config下</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>解释：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>(6)测试：</p>\n<ul>\n<li>加入jedis的依赖时：</li>\n</ul>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1583140031840</figcaption></figure>\n<ul>\n<li>不加入jedis的依赖时：</li>\n</ul>\n<figure><figcaption>1583140076596</figcaption></figure>\n<h4> 1.1.1.3 小结</h4>\n<p>我们由上边的看出。由于有了条件接口，那么我们可以选择性的在某种条件下才进行bean的注册和初始化等操作。他的接口的说明也描述了这有点；</p>\n<figure><figcaption>1583140248012</figcaption></figure>\n<h3> 1.1.2 需求优化</h3>\n<p>​\t我们希望这个类注解可以进行动态的加载某一个类的全路径，不能写死为redis.将来可以进行重用。</p>\n<p>（1）需求：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(2)实现步骤</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(3) com.itheima.annotation下自定义注解：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(4)修改配置类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如下图：</p>\n<figure><figcaption>image-20210426103112067</figcaption></figure>\n<p>（5）修改实现类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 1.1.3 相关的条件的注解说明</h3>\n<p>常用的注解如下：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1583147249708</figcaption></figure>\n<h3> 小结</h3>\n<ol>\n<li>Condtional注解：标记是否要注册bean对spring容器，看它的属性中的value中的Condtion接口实现类的matches方法，如果返回true，则注册，否则不注册</li>\n<li>Condtion接口：判断是否满足条件，实现matches方法。</li>\n</ol>\n<h2> 1.2. 切换内置的web服务器</h2>\n<p>我们知道在springboot启动的时候如果我们使用web起步依赖，那么我们默认就加载了tomcat的类嵌入了tomcat了，不需要额外再找tomcat。</p>\n<p>加载配置tomcat的原理：</p>\n<p>（1）加入pom.xml中起步依赖</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(2)查看依赖图</p>\n<p>web起步依赖依赖于spring-boot-starter-tomcat，这个为嵌入式的tomcat的包。</p>\n<figure><figcaption>1583151926451</figcaption></figure>\n<p>（3）自动配置类说明：</p>\n<figure><figcaption>1583152113593</figcaption></figure>\n<figure><figcaption>1583152191247</figcaption></figure>\n<p>以上如图所示：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>启动时如下：</p>\n<figure><figcaption>1583152442301</figcaption></figure>\n<p>(4)可以尝试修改web容器：</p>\n<p>​\t如上，我们可以通过修改web容器，根据业务需求使用性能更优越的等等其他的web容器。这里我们演示使用jetty作为web容器。</p>\n<p>在pom.xml中排出tomcat依赖，添加jetty依赖即可：</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再次启动如下图所示：</p>\n<figure><figcaption>1583152603491</figcaption></figure>\n<h2> 1.3. @SpringBootApplication注解说明</h2>\n<p>在我们使用的代码当中，其中启动类中有一个注解：</p>\n<p>@SpringBootApplication注解里面有@EnableAutoConfiguration，那么这种@Enable*开头就是springboot中定义的一些动态启用某些功能的注解，他的底层实现原理实际上用的就是@import注解导入一些配置，自动进行配置，加载Bean.</p>\n<p>那么我们自己定义写Eanble相关的注解来学习下这种注解所实现的功能，以下 来实现相关功能。</p>\n<h3> 1.3.1 @SpringbootConfiguration</h3>\n<figure><figcaption>1583154950615</figcaption></figure>\n<p>如上图所示，就是该注解实际上是在启动类上的注解中的一个注解，我们再点击进去：</p>\n<figure><figcaption>1583154995273</figcaption></figure>\n<p>我们发现其实该注解就是一个@configuration注解，那么意味着我们的启动类被注解修饰后，意味着它本身也是一个配置类,该配置类就可以当做spring中的applicationContext.xml的文件，用于加载配置使用。</p>\n<h3> 1.3.2 @ComponentScan注解</h3>\n<figure><figcaption>1583155076125</figcaption></figure>\n<p>如上图，在启动类的注解@springbootapplication注解里面又修饰了@compnetScan注解，该注解的作用用于组件扫描包类似于xml中的context-componet-scan，如果不指定扫描路径，那么就扫描该注解修饰的启动类所在的包以及子包。这就是为什么我们在第一天的时候写了controller 并没有扫描也能使用的原因。</p>\n<h3> 1.3.3. 实现加载第三方的Bean方式</h3>\n<h4> 1.3.3.1. 创建两个测试工程</h4>\n<p>需求：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(1) 定义工程：demo2</p>\n<p>pom.xml:只加入springbootstarter</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(2)在包com.itheima下定义demo2启动类，并加载第三方的依赖中的bean</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>工程结构如下：</p>\n<figure><figcaption>1583155446515</figcaption></figure>\n<p>(3)定义工程demo3</p>\n<p>pom.xml:</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(4) 在demo3工程中定义配置类和POJO</p>\n<p>pojo:在com.itheima.pojo下创建</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置类：【<strong>注意</strong>】，在com.config下创建配置类：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>【注意】demo03工程要执行install安装到本地仓库</p>\n<p>(5)修改demo2工程的pom.xml:加入demo3的依赖如下图所示：</p>\n<figure><figcaption>1583155780174</figcaption></figure>\n<p>（6）启动测试：发现报错：</p>\n<figure><figcaption>1583155959293</figcaption></figure>\n<h4> 1.3.3.2. 包扫描路径放大</h4>\n<p>方式一：第一种使用组件扫描 包扫描路径放大</p>\n<p>在demo2启动类上修改</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 1.3.3.3. import注解</h4>\n<p>方式二：第二种使用import注解进行导入配置类的方式即可</p>\n<ul>\n<li>直接导入Bean</li>\n<li>导入配置类</li>\n<li>导入ImportSelector的实现类，通常用于加载配置文件中的Bean</li>\n<li>导入ImportBeanDefinitionRegistrar实现类</li>\n</ul>\n<h5> 1.3.3.3.1. 导入配置类</h5>\n<figure><figcaption>1583156064706</figcaption></figure>\n<figure><figcaption>1583156241861</figcaption></figure>\n<h5> 1.3.3.3.2. ImportSelector</h5>\n<p>在demo3工程中定义类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>定义POJO:</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在demo2中修改导入：</p>\n<figure><figcaption>1583157601958</figcaption></figure>\n<p>打印：</p>\n<figure><figcaption>1583157619081</figcaption></figure>\n<h5> 1.3.3.3.3. ImportBeanDefinitionRegistrar</h5>\n<p>（1）在demo3下定义实现类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（2）修改demo2的启动类配置：</p>\n<figure><figcaption>1583158084602</figcaption></figure>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如上图所示也能成功，针对User成功，针对Role失败，这里我们只加载了User.</p>\n<h3> 1.3.4. 自定义注解加载bean</h3>\n<p>方式三：第三种自定义注解加载bean</p>\n<p>上一节中我们使用了import和Component扫描的方式，都可以解决问题，但是这两种方式相对要麻烦一些，不那么优雅，而且类多那么容易编写麻烦，能否有一种一个注解就能搞定，一看就明白的方式呢？答案是肯定的。</p>\n<p>（1）在demo03中com.config下创建一个自定义注解@EnableUser：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（2）在demo2中使用该注解即可</p>\n<figure><figcaption>1583156638701</figcaption></figure>\n<p>如上一目了然，当然这里面用的功能点不在于自定义的注解，而在于import的注解。</p>\n<h2> 1.4 @EnableAutoConfiguration</h2>\n<p>自动配置流程：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>流程截图：</p>\n<figure><figcaption>1583158758976</figcaption></figure>\n<figure><figcaption>1583158780822</figcaption></figure>\n<figure><figcaption>1583158795454</figcaption></figure>\n<figure><figcaption>1583158810650</figcaption></figure>\n<figure><figcaption>1583158829063</figcaption></figure>\n<figure><figcaption>1583158874947</figcaption></figure>\n<p>其中就有：redis的自动配置类，redis的自动配置我们在说codition的时候已经说过只要加入依赖则配置交到spring容器中自动配置了。</p>\n<figure><figcaption>1583158918790</figcaption></figure>\n<h3> 【小结】</h3>\n<p>1：理解springboot自动配置原理</p>\n<p>2：理解自动配置注解的原理解析  SPI（Service Provider Interface）通过读取jar下某个特定目录下的配置文件来加载类</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1> 2.Springboot自动配置 自定义starter【使用】</h1>\n<h3> 【目标】</h3>\n<p>自定义配置案例实现</p>\n<h3> 【路径】</h3>\n<p>1：自定义起步依赖需求分析</p>\n<p>2：自定义起步依赖功能实现</p>\n<p>@EnableAutoConfiguration： 加载jar下的META-INF/spring.factories: org.springframework....EnableAutoConfiguration=自定义的自动配置类</p>\n<p>Condition接口，定义是否加载bean对象, ConditionOnClass</p>\n<h3> 【讲解】</h3>\n<p>以上我们学习了springboot的自动配置原理，那么我们通过一个案例来强化我们的学习。</p>\n<h2> 2.1. 需求说明</h2>\n<p>​\t当加入redis客户端的坐标的时候，自动配置jedis的bean 加载到spring容器中。</p>\n<h2> 2.2. 实现步骤</h2>\n<p>我们可以参考springboot整合mybatis的依赖进行配置实现。为了简单起见我们只定义一个工程即可。</p>\n<p>xxx-spring-boot-starter 第三方封装,如: mybatisplus-spring-boot-starter</p>\n<p>spring-boot-starter-xxx Spring官方封装的</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2.1. 创建工程itheima-redis-springboot-starter</h3>\n<p>该工程创建不需要启动类，不需要测试类，只需要spring-boot-starter以及jedis的依赖坐标。</p>\n<p>项目结构如下：</p>\n<figure><figcaption>image-20210426145830640</figcaption></figure>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2.2. 创建自动配置类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2.3. 创建POJO</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2.4. 创建spring.factories【注意】</h3>\n<p>在resources下创建META-INF/spring.factories文件并定义内容如下：</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 2.2.5. 创建测试工程</h3>\n<p>创建测试工程itheima-test-starter，添加依赖</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>1583226081654</figcaption></figure>\n<p>(2)定义启动类</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(3)配置application.yml:</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(4)测试：</p>\n<p>（1）注释掉则出现如下结果</p>\n<figure><figcaption>1583226319665</figcaption></figure>\n<p>（2）不注释掉出现如下结果：</p>\n<figure><figcaption>1583226370095</figcaption></figure>\n<h3> 【小结】</h3>\n<p>1：掌握自定义springboot的starter</p>\n<p>步骤：</p>\n<ol>\n<li>\n<p>创建工程，添加依赖（parent, starter, jedis)</p>\n</li>\n<li>\n<p>创建MyRedisProperties, 注解@ConfigurationProperties(prefix=redis), 添加2个属性host,port【注意添加getter与setter】</p>\n</li>\n<li>\n<p>创建MyRedisAutoConfiguration,添加注解：@Configuration, @ConditionOnClass(Jedis.class), @EnableConfigurationProperties(MyRedisProperties.class)</p>\n<ul>\n<li>添加@Bean, @ConidtionOnMissingBean(\"jedis\"), 方法有参数(MyRedisProperties) 创建jedis对象</li>\n</ul>\n</li>\n<li>\n<p>resoures下创建META-INF/spring.factories,内容如下</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>进行clean与安装</p>\n</li>\n</ol>\n<h1> 3. SpringBoot的监控【了解】</h1>\n<h3> 【目标】</h3>\n<p>springboot监控介绍</p>\n<h3> 【路径】</h3>\n<p>1：创建监听工程</p>\n<p>2：监控路径了解</p>\n<h3> 【讲解】</h3>\n<p>时常我们在使用的项目的时候，想知道相关项目的一些参数和调用状态，而SpringBoot自带监控功能Actuator，可以帮助实现对程序内部运行情况监控，比如监控状况、Bean加载情况、配置属性、日志信息等。</p>\n<h2> 3.1. Actuator</h2>\n<p>​\tActuator是springboot自带的组件可以用来进行监控，Bean加载情况、环境变量、日志信息、线程信息等等，使用简单</p>\n<h3> 3.1.1. 使用actuator</h3>\n<p>(1)操作步骤：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.1.1.1. 创建工程添加依赖</h4>\n<p>pom.xml添加依赖如下：</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.1.1.2. 编写启动类：</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.1.1.3. application.properties</h4>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.1.1.4. 测试</h4>\n<p>在浏览器输入 地址：<code>http://localhost:8080/actuator</code></p>\n<figure><figcaption>1583320454547</figcaption></figure>\n<p>显示如上的信息，就可以看到相关的路径，这些路径分表代表不同的信息的含义。</p>\n<h3> 3.1.2 监控路径列表说明</h3>\n<p>以下展示部分列表</p>\n<table>\n<thead>\n<tr>\n<th><strong>路径</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/beans</td>\n<td>描述应用程序上下文里全部的Bean，以及它们的关系</td>\n</tr>\n<tr>\n<td>/env</td>\n<td>获取全部环境属性</td>\n</tr>\n<tr>\n<td name=\"\">/env/</td>\n<td>根据名称获取特定的环境属性值</td>\n</tr>\n<tr>\n<td>/health</td>\n<td>报告应用程序的健康指标，这些值由HealthIndicator的实现类提供</td>\n</tr>\n<tr>\n<td>/info</td>\n<td>获取应用程序的定制信息，这些信息由info打头的属性提供</td>\n</tr>\n<tr>\n<td>/mappings</td>\n<td>描述全部的URI路径，以及它们和控制器(包含Actuator端点)的映射关系</td>\n</tr>\n<tr>\n<td>/metrics</td>\n<td>报告各种应用程序度量信息，比如内存用量和HTTP请求计数</td>\n</tr>\n<tr>\n<td name=\"\">/metrics/</td>\n<td>报告指定名称的应用程序度量值</td>\n</tr>\n<tr>\n<td>/trace</td>\n<td>提供基本的HTTP请求跟踪信息(时间戳、HTTP头等)</td>\n</tr>\n</tbody>\n</table>\n<h2> 3.2  SpringBoot admin</h2>\n<p>如果使用actuator使用起来比较费劲，没有数据直观感受。</p>\n<h3> 3.2.1 介绍</h3>\n<ul>\n<li>Spring Boot Admin是一个开源社区项目，用于管理和监控SpringBoot应用程序。</li>\n<li>Spring Boot Admin 有两个角色，客户端(Client)和服务端(Server)。</li>\n<li>应用程序作为Spring Boot Admin Client向为Spring Boot Admin Server注册</li>\n<li>Spring Boot Admin Server 通过图形化界面方式展示Spring Boot Admin Client的监控信息。</li>\n</ul>\n<h3> 3.2.2 使用</h3>\n<p>spring boot admin的架构角色</p>\n<ul>\n<li>admin server 用于收集统计所有相关client的注册过来的信息进行汇总展示</li>\n<li>admin client 每一个springboot工程都是一个client 相关的功能展示需要汇总到注册汇总到server</li>\n</ul>\n<figure><figcaption>1583320990670</figcaption></figure>\n<h4> 3.2.2.1. 创建admin server</h4>\n<p>创建admin server 工程my-springboot-admin-server</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.2.2.2. 创建启动类</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意：</p>\n<p>@EnableAdminServer 该注解用于启用Server功能。</p>\n<h4> 3.2.2.3. 修改application.properties文件</h4>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h4> 3.2.2.4. 创建admin client</h4>\n<p>创建admin client 工程my-springboot-admin-client</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.2.2.5. 创建启动类</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.2.2.6. application.properties</h4>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 3.2.2.7. 测试</h4>\n<p>启动两个系统。访问路径<code>&lt;http://localhost:9000/&gt;</code></p>\n<figure><figcaption>1583324031320</figcaption></figure>\n<p>我们简单认识下：并点击相关界面链接就能看到相关的图形化展示了。</p>\n<figure><figcaption>1583324107358</figcaption></figure>\n<h3> 【小结】</h3>\n<p>了解SpringBoot监控</p>\n<h1> 4.SpringBoot部署项目【掌握】</h1>\n<h3> 【目标】</h3>\n<p>springboot部署项目</p>\n<h3> 【路径】</h3>\n<p>1：掌握Jar包部署</p>\n<p>2：了解war包部署</p>\n<h3> 【讲解】</h3>\n<p>在springboot项目中，我们部署项目有两种方式：</p>\n<ul>\n<li>jar包直接通过java命令运行执行</li>\n<li>war包存储在tomcat等servlet容器中执行</li>\n</ul>\n<h2> 4.1. jar包部署</h2>\n<h3> 4.1.1. 创建工程</h3>\n<p>引入 pom.xml</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4.1.2. 创建启动类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4.1.3. 打jar包</h3>\n<figure><figcaption>1583325158207</figcaption></figure>\n<h3> 4.1.4. 启动工程</h3>\n<p>copy jar包到任意目录，可以直接执行java命令执行系统</p>\n<figure><figcaption>1583325211768</figcaption></figure>\n<p>执行命令：如下图</p>\n<figure><figcaption>1583325273569</figcaption></figure>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>执行效果如下：</p>\n<figure><figcaption>1583325424494</figcaption></figure>\n<h3> 4.1.5. 测试</h3>\n<p>浏览器输入地址测试即可：</p>\n<figure><figcaption>1583326360780</figcaption></figure>\n<h2> 4.2 war包部署</h2>\n<h3> 4.2.1. 创建工程</h3>\n<p>首先修改打包方式和修改相关配置依赖</p>\n<figure><figcaption>1583325459873</figcaption></figure>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4.2.2. 创建启动类</h3>\n<p>修改启动类配置 需要继承SpringBootServletInitializer</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 4.2.3. 打war包</h3>\n<p>执行命令 打包 之后变成一个war包</p>\n<figure><figcaption>1583326278301</figcaption></figure>\n<h3> 4.2.4. 启动工程</h3>\n<p>copy该war包到tomcat中</p>\n<p>这个tomcat大家自己找一个自己熟悉的，最好是tomcat8.5以上。</p>\n<figure><figcaption>1583326312074</figcaption></figure>\n<h3> 4.2.5. 测试</h3>\n<p>浏览器输入地址测试即可：</p>\n<figure><figcaption>1583326360780</figcaption></figure>\n<h3> 【小结】</h3>\n<p>推荐使用jar ，特别在微服务领域中使用jar的方式简单许多。</p>\n<p>1：掌握Jar包部署</p>\n<p>2：了解war包部署</p>\n<ul>\n<li>依赖\n<ul>\n<li>排除内置的web服务器tomcat</li>\n<li>引入servlet-api</li>\n</ul>\n</li>\n<li>启动类继承SpringBootServletInitializer</li>\n<li>pom.xml修改packing为war</li>\n</ul>\n<h1> 5 Springboot监听机制（了解）</h1>\n<h3> 【目标】</h3>\n<p>了解springboot监听机制</p>\n<h3> 【路径】</h3>\n<p>1：springboot监听机制了解</p>\n<p>2：springboot初始化的Run了解</p>\n<h3> 【讲解】</h3>\n<h2> 5.1. springboot监听机制介绍</h2>\n<p>​\tspringboot事件监听机制，实际上是对java的事件的封装。</p>\n<p>java中定义了以下几个角色：</p>\n<ul>\n<li>事件 Event</li>\n<li>事件源 Source</li>\n<li>监听器 Listener 实现EventListener接口的对象</li>\n</ul>\n<p>Springboot在启动的时候，会对几个监听器进行回调，完成初始化的一些操作，我们可以实现这个监听器来实现相关的业务，比如缓存的一些处理。springboot 提供了这些接口，我们只需要实现这些接口就可以在启动的时候进行回调了。</p>\n<div class=\"language-properties line-numbers-mode\" data-ext=\"properties\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-03-13T18:26:47.000Z",
      "date_modified": "2024-08-17T09:47:32.000Z",
      "authors": [],
      "tags": [
        "Spring"
      ]
    }
  ]
}